[
  {
    "chunk_id": "pdf3.pdf_1_0",
    "filename": "pdf3.pdf",
    "page_number": 1,
    "text": "Retrieval-Augmented Generation for\nKnowledge-Intensive NLP Tasks\nPatrick Lewisyz, Ethan Perez?,\nAleksandra Piktusy, Fabio Petroniy, Vladimir Karpukhiny, Naman Goyaly, Heinrich K\u00fcttlery,\nMike Lewisy, Wen-tau Yihy, Tim Rockt\u00e4schelyz, Sebastian Riedelyz, Douwe Kielay\nyFacebook AI Research;zUniversity College London;?New York University;\nplewis@fb.com\nAbstract\nLarge pre-trained language models have been shown to store factual knowledge\nin their parameters, and achieve state-of-the-art results when \ufb01ne-tuned on down-\nstream NLP tasks. However, their ability to access and precisely manipulate knowl-\nedge is still limited, and hence on knowledge-intensive tasks, their performance\nlags behind task-speci\ufb01c architectures. Additionally, providing provenance for their\ndecisions and updating their world knowledge remain open research problems. Pre-\ntrained models with a differentiable access mechanism to explicit non-parametric\nmemory have so far been only investigated for extractive downstream tas",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_1_1",
    "filename": "pdf3.pdf",
    "page_number": 1,
    "text": "d knowledge remain open research problems. Pre-\ntrained models with a differentiable access mechanism to explicit non-parametric\nmemory have so far been only investigated for extractive downstream tasks. We\nexplore a general-purpose \ufb01ne-tuning recipe for retrieval-augmented generation\n(RAG) \u2014 models which combine pre-trained parametric and non-parametric mem-\nory for language generation. We introduce RAG models where the parametric\nmemory is a pre-trained seq2seq model and the non-parametric memory is a dense\nvector index of Wikipedia, accessed with a pre-trained neural retriever. We com-\npare two RAG formulations, one which conditions on the same retrieved passages\nacross the whole generated sequence, and another which can use different passages\nper token. We \ufb01ne-tune and evaluate our models on a wide range of knowledge-\nintensive NLP tasks and set the state of the art on three open domain QA tasks,\noutperforming parametric seq2seq models and task-speci\ufb01c retrieve-and-extract\narchitec",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_1_2",
    "filename": "pdf3.pdf",
    "page_number": 1,
    "text": "els on a wide range of knowledge-\nintensive NLP tasks and set the state of the art on three open domain QA tasks,\noutperforming parametric seq2seq models and task-speci\ufb01c retrieve-and-extract\narchitectures. For language generation tasks, we \ufb01nd that RAG models generate\nmore speci\ufb01c, diverse and factual language than a state-of-the-art parametric-only\nseq2seq baseline.\n1 Introduction\nPre-trained neural language models have been shown to learn a substantial amount of in-depth knowl-\nedge from data [ 47]. They can do so without any access to an external memory, as a parameterized\nimplicit knowledge base [ 51,52]. While this development is exciting, such models do have down-\nsides: They cannot easily expand or revise their memory, can\u2019t straightforwardly provide insight into\ntheir predictions, and may produce \u201challucinations\u201d [ 38]. Hybrid models that combine parametric\nmemory with non-parametric (i.e., retrieval-based) memories [ 20,26,48] can address some of these\nissues because knowledg",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_1_3",
    "filename": "pdf3.pdf",
    "page_number": 1,
    "text": " and may produce \u201challucinations\u201d [ 38]. Hybrid models that combine parametric\nmemory with non-parametric (i.e., retrieval-based) memories [ 20,26,48] can address some of these\nissues because knowledge can be directly revised and expanded, and accessed knowledge can be\ninspected and interpreted. REALM [ 20] and ORQA [ 31], two recently introduced models that\ncombine masked language models [ 8] with a differentiable retriever, have shown promising results,arXiv:2005.11401v4  [cs.CL]  12 Apr 2021",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_2_0",
    "filename": "pdf3.pdf",
    "page_number": 2,
    "text": "The\tDivine\nComedy\t(x) qQuery\nEncoder\nq(x)\nMIPS p \u03b8Generator \u00a0p\u03b8\n(Parametric)\nMargin-\nalize\nThis\t14th\tcentury\twork\nis\tdivided\tinto\t3\nsections:\t\"Inferno\",\n\"Purgatorio\"\t&\n\"Paradiso\"\t\t\t\t\t\t\t\t\t (y)End-to-End Backprop through q and\u00a0 p \u03b8\nBarack\tObama\twas\nborn\tin\tHawaii. (x)\nFact V eri\ufb01cation: Fact Querysupports \t(y)\nQuestion GenerationFact V eri\ufb01cation:\nLabel GenerationDocument\nIndexDefine\t\"middle\tear\" (x)\nQuestion Answering:\nQuestion QueryThe\tmiddle\tear\tincludes\nthe\ttympanic\tcavity\tand\nthe\tthree\tossicles.\t\t (y)\nQuestion Answering:\nAnswer GenerationRetriever p\u03b7\n(Non-Parametric)\nz 4\nz3\nz2\nz 1d(z)\nJeopardy Question\nGeneration:\nAnswer QueryFigure 1: Overview of our approach. We combine a pre-trained retriever ( Query Encoder +Document\nIndex ) with a pre-trained seq2seq model ( Generator ) and \ufb01ne-tune end-to-end. For query x, we use\nMaximum Inner Product Search (MIPS) to \ufb01nd the top-K documents zi. For \ufb01nal prediction y, we\ntreatzas a latent variable and marginalize over seq2seq predictions given",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_2_1",
    "filename": "pdf3.pdf",
    "page_number": 2,
    "text": "e end-to-end. For query x, we use\nMaximum Inner Product Search (MIPS) to \ufb01nd the top-K documents zi. For \ufb01nal prediction y, we\ntreatzas a latent variable and marginalize over seq2seq predictions given different documents.\nbut have only explored open-domain extractive question answering. Here, we bring hybrid parametric\nand non-parametric memory to the \u201cworkhorse of NLP,\u201d i.e. sequence-to-sequence (seq2seq) models.\nWe endow pre-trained, parametric-memory generation models with a non-parametric memory through\na general-purpose \ufb01ne-tuning approach which we refer to as retrieval-augmented generation (RAG).\nWe build RAG models where the parametric memory is a pre-trained seq2seq transformer, and the\nnon-parametric memory is a dense vector index of Wikipedia, accessed with a pre-trained neural\nretriever. We combine these components in a probabilistic model trained end-to-end (Fig. 1). The\nretriever (Dense Passage Retriever [ 26], henceforth DPR) provides latent documents conditioned on\nthe i",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_2_2",
    "filename": "pdf3.pdf",
    "page_number": 2,
    "text": "etriever. We combine these components in a probabilistic model trained end-to-end (Fig. 1). The\nretriever (Dense Passage Retriever [ 26], henceforth DPR) provides latent documents conditioned on\nthe input, and the seq2seq model (BART [ 32]) then conditions on these latent documents together with\nthe input to generate the output. We marginalize the latent documents with a top-K approximation,\neither on a per-output basis (assuming the same document is responsible for all tokens) or a per-token\nbasis (where different documents are responsible for different tokens). Like T5 [ 51] or BART, RAG\ncan be \ufb01ne-tuned on any seq2seq task, whereby both the generator and retriever are jointly learned.\nThere has been extensive previous work proposing architectures to enrich systems with non-parametric\nmemory which are trained from scratch for speci\ufb01c tasks, e.g. memory networks [ 64,55], stack-\naugmented networks [ 25] and memory layers [ 30]. In contrast, we explore a setting where both\nparametric a",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_2_3",
    "filename": "pdf3.pdf",
    "page_number": 2,
    "text": "mory which are trained from scratch for speci\ufb01c tasks, e.g. memory networks [ 64,55], stack-\naugmented networks [ 25] and memory layers [ 30]. In contrast, we explore a setting where both\nparametric and non-parametric memory components are pre-trained and pre-loaded with extensive\nknowledge. Crucially, by using pre-trained access mechanisms, the ability to access knowledge is\npresent without additional training.\nOur results highlight the bene\ufb01ts of combining parametric and non-parametric memory with genera-\ntion for knowledge-intensive tasks \u2014tasks that humans could not reasonably be expected to perform\nwithout access to an external knowledge source. Our RAG models achieve state-of-the-art results\non open Natural Questions [ 29], WebQuestions [ 3] and CuratedTrec [ 2] and strongly outperform\nrecent approaches that use specialised pre-training objectives on TriviaQA [ 24]. Despite these being\nextractive tasks, we \ufb01nd that unconstrained generation outperforms previous extractive approach",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_2_4",
    "filename": "pdf3.pdf",
    "page_number": 2,
    "text": "rm\nrecent approaches that use specialised pre-training objectives on TriviaQA [ 24]. Despite these being\nextractive tasks, we \ufb01nd that unconstrained generation outperforms previous extractive approaches.\nFor knowledge-intensive generation, we experiment with MS-MARCO [ 1] and Jeopardy question\ngeneration, and we \ufb01nd that our models generate responses that are more factual, speci\ufb01c, and\ndiverse than a BART baseline. For FEVER [ 56] fact veri\ufb01cation, we achieve results within 4.3% of\nstate-of-the-art pipeline models which use strong retrieval supervision. Finally, we demonstrate that\nthe non-parametric memory can be replaced to update the models\u2019 knowledge as the world changes.1\n2 Methods\nWe explore RAG models, which use the input sequence xto retrieve text documents zand use them\nas additional context when generating the target sequence y. As shown in Figure 1, our models\nleverage two components: (i) a retriever p\u0011(zjx)with parameters \u0011that returns (top-K truncated)\ndistributions over t",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_2_5",
    "filename": "pdf3.pdf",
    "page_number": 2,
    "text": "nal context when generating the target sequence y. As shown in Figure 1, our models\nleverage two components: (i) a retriever p\u0011(zjx)with parameters \u0011that returns (top-K truncated)\ndistributions over text passages given a query xand (ii) a generator p\u0012(yijx;z;y 1:i\u00001)parametrized\n1Code to run experiments with RAG has been open-sourced as part of the HuggingFace Transform-\ners Library [ 66] and can be found at https://github.com/huggingface/transformers/blob/master/\nexamples/rag/ . An interactive demo of RAG models can be found at https://huggingface.co/rag/\n2",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf3.pdf_3_0",
    "filename": "pdf3.pdf",
    "page_number": 3,
    "text": "by\u0012that generates a current token based on a context of the previous i\u00001tokensy1:i\u00001, the original\ninputxand a retrieved passage z.\nTo train the retriever and generator end-to-end, we treat the retrieved document as a latent variable.\nWe propose two models that marginalize over the latent documents in different ways to produce a\ndistribution over generated text. In one approach, RAG-Sequence , the model uses the same document\nto predict each target token. The second approach, RAG-Token , can predict each target token based\non a different document. In the following, we formally introduce both models and then describe the\np\u0011andp\u0012components, as well as the training and decoding procedure.\n2.1 Models\nRAG-Sequence Model The RAG-Sequence model uses the same retrieved document to generate\nthe complete sequence . Technically, it treats the retrieved document as a single latent variable that\nis marginalized to get the seq2seq probability p(yjx)via a top-K approximation. Concretely, the\ntop K do",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_3_1",
    "filename": "pdf3.pdf",
    "page_number": 3,
    "text": "plete sequence . Technically, it treats the retrieved document as a single latent variable that\nis marginalized to get the seq2seq probability p(yjx)via a top-K approximation. Concretely, the\ntop K documents are retrieved using the retriever, and the generator produces the output sequence\nprobability for each document, which are then marginalized,\npRAG-Sequence (yjx)\u0019X\nz2top-k(p(\u0001jx))p\u0011(zjx)p\u0012(yjx;z) =X\nz2top-k(p(\u0001jx))p\u0011(zjx)NY\nip\u0012(yijx;z;y 1:i\u00001)\nRAG-Token Model In the RAG-Token model we can draw a different latent document for each\ntarget token and marginalize accordingly. This allows the generator to choose content from several\ndocuments when producing an answer. Concretely, the top K documents are retrieved using the\nretriever, and then the generator produces a distribution for the next output token for each document,\nbefore marginalizing, and repeating the process with the following output token, Formally, we de\ufb01ne:\npRAG-Token (yjx)\u0019NY\niX\nz2top-k(p(\u0001jx))p\u0011(zjx)p\u0012(yijx;z;y 1:i\u00001)\nF",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_3_2",
    "filename": "pdf3.pdf",
    "page_number": 3,
    "text": "t output token for each document,\nbefore marginalizing, and repeating the process with the following output token, Formally, we de\ufb01ne:\npRAG-Token (yjx)\u0019NY\niX\nz2top-k(p(\u0001jx))p\u0011(zjx)p\u0012(yijx;z;y 1:i\u00001)\nFinally, we note that RAG can be used for sequence classi\ufb01cation tasks by considering the target class\nas a target sequence of length one, in which case RAG-Sequence and RAG-Token are equivalent.\n2.2 Retriever: DPR\nThe retrieval component p\u0011(zjx)is based on DPR [26]. DPR follows a bi-encoder architecture:\np\u0011(zjx)/exp\u0000\nd(z)>q(x)\u0001\nd(z) =BERTd(z);q(x) =BERTq(x)\nwhere d(z)is a dense representation of a document produced by a BERT BASE document encoder [8],\nandq(x)a query representation produced by a query encoder , also based on BERT BASE. Calculating\ntop-k (p\u0011(\u0001jx)), the list ofkdocumentszwith highest prior probability p\u0011(zjx), is a Maximum Inner\nProduct Search (MIPS) problem, which can be approximately solved in sub-linear time [ 23]. We use\na pre-trained bi-encoder from DPR to initialize our",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_3_3",
    "filename": "pdf3.pdf",
    "page_number": 3,
    "text": "hest prior probability p\u0011(zjx), is a Maximum Inner\nProduct Search (MIPS) problem, which can be approximately solved in sub-linear time [ 23]. We use\na pre-trained bi-encoder from DPR to initialize our retriever and to build the document index. This\nretriever was trained to retrieve documents which contain answers to TriviaQA [ 24] questions and\nNatural Questions [29]. We refer to the document index as the non-parametric memory .\n2.3 Generator: BART\nThe generator component p\u0012(yijx;z;y 1:i\u00001)could be modelled using any encoder-decoder. We use\nBART-large [ 32], a pre-trained seq2seq transformer [ 58] with 400M parameters. To combine the input\nxwith the retrieved content zwhen generating from BART, we simply concatenate them. BART was\npre-trained using a denoising objective and a variety of different noising functions. It has obtained\nstate-of-the-art results on a diverse set of generation tasks and outperforms comparably-sized T5\nmodels [32]. We refer to the BART generator parameters \u0012as ",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_3_4",
    "filename": "pdf3.pdf",
    "page_number": 3,
    "text": "fferent noising functions. It has obtained\nstate-of-the-art results on a diverse set of generation tasks and outperforms comparably-sized T5\nmodels [32]. We refer to the BART generator parameters \u0012as the parametric memory henceforth.\n2.4 Training\nWe jointly train the retriever and generator components without any direct supervision on what\ndocument should be retrieved. Given a \ufb01ne-tuning training corpus of input/output pairs (xj;yj), we\n3",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_4_0",
    "filename": "pdf3.pdf",
    "page_number": 4,
    "text": "minimize the negative marginal log-likelihood of each target,P\nj\u0000logp(yjjxj)using stochastic\ngradient descent with Adam [ 28]. Updating the document encoder BERTdduring training is costly as\nit requires the document index to be periodically updated as REALM does during pre-training [ 20].\nWe do not \ufb01nd this step necessary for strong performance, and keep the document encoder (and\nindex) \ufb01xed, only \ufb01ne-tuning the query encoder BERT qand the BART generator.\n2.5 Decoding\nAt test time, RAG-Sequence and RAG-Token require different ways to approximate arg maxyp(yjx).\nRAG-Token The RAG-Token model can be seen as a standard, autoregressive seq2seq genera-\ntor with transition probability: p0\n\u0012(yijx;y 1:i\u00001) =P\nz2top-k(p(\u0001jx))p\u0011(zijx)p\u0012(yijx;zi;y1:i\u00001)To\ndecode, we can plug p0\n\u0012(yijx;y 1:i\u00001)into a standard beam decoder.\nRAG-Sequence For RAG-Sequence, the likelihood p(yjx)does not break into a conventional per-\ntoken likelihood, hence we cannot solve it with a single beam search. Instead, we run",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_4_1",
    "filename": "pdf3.pdf",
    "page_number": 4,
    "text": "standard beam decoder.\nRAG-Sequence For RAG-Sequence, the likelihood p(yjx)does not break into a conventional per-\ntoken likelihood, hence we cannot solve it with a single beam search. Instead, we run beam search for\neach document z, scoring each hypothesis using p\u0012(yijx;z;y 1:i\u00001). This yields a set of hypotheses\nY, some of which may not have appeared in the beams of all documents. To estimate the probability\nof an hypothesis ywe run an additional forward pass for each document zfor whichydoes not\nappear in the beam, multiply generator probability with p\u0011(zjx)and then sum the probabilities across\nbeams for the marginals. We refer to this decoding procedure as \u201cThorough Decoding.\u201d For longer\noutput sequences,jYjcan become large, requiring many forward passes. For more ef\ufb01cient decoding,\nwe can make a further approximation that p\u0012(yjx;zi)\u00190whereywas not generated during beam\nsearch from x;zi. This avoids the need to run additional forward passes once the candidate set Yhas\nbeen generate",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_4_2",
    "filename": "pdf3.pdf",
    "page_number": 4,
    "text": " can make a further approximation that p\u0012(yjx;zi)\u00190whereywas not generated during beam\nsearch from x;zi. This avoids the need to run additional forward passes once the candidate set Yhas\nbeen generated. We refer to this decoding procedure as \u201cFast Decoding.\u201d\n3 Experiments\nWe experiment with RAG in a wide range of knowledge-intensive tasks. For all experiments, we use\na single Wikipedia dump for our non-parametric knowledge source. Following Lee et al. [31] and\nKarpukhin et al. [26], we use the December 2018 dump. Each Wikipedia article is split into disjoint\n100-word chunks, to make a total of 21M documents. We use the document encoder to compute an\nembedding for each document, and build a single MIPS index using FAISS [ 23] with a Hierarchical\nNavigable Small World approximation for fast retrieval [ 37]. During training, we retrieve the top\nkdocuments for each query. We consider k2f5;10gfor training and set kfor test time using dev\ndata. We now discuss experimental details for each ta",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_4_3",
    "filename": "pdf3.pdf",
    "page_number": 4,
    "text": "retrieval [ 37]. During training, we retrieve the top\nkdocuments for each query. We consider k2f5;10gfor training and set kfor test time using dev\ndata. We now discuss experimental details for each task.\n3.1 Open-domain Question Answering\nOpen-domain question answering (QA) is an important real-world application and common testbed\nfor knowledge-intensive tasks [ 20]. We treat questions and answers as input-output text pairs (x;y)\nand train RAG by directly minimizing the negative log-likelihood of answers. We compare RAG to\nthe popular extractive QA paradigm [ 5,7,31,26], where answers are extracted spans from retrieved\ndocuments, relying primarily on non-parametric knowledge. We also compare to \u201cClosed-Book\nQA\u201d approaches [ 52], which, like RAG, generate answers, but which do not exploit retrieval, instead\nrelying purely on parametric knowledge. We consider four popular open-domain QA datasets: Natural\nQuestions (NQ) [ 29], TriviaQA (TQA) [ 24]. WebQuestions (WQ) [ 3] and CuratedTrec (",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_4_4",
    "filename": "pdf3.pdf",
    "page_number": 4,
    "text": "etrieval, instead\nrelying purely on parametric knowledge. We consider four popular open-domain QA datasets: Natural\nQuestions (NQ) [ 29], TriviaQA (TQA) [ 24]. WebQuestions (WQ) [ 3] and CuratedTrec (CT) [ 2]. As\nCT and WQ are small, we follow DPR [ 26] by initializing CT and WQ models with our NQ RAG\nmodel. We use the same train/dev/test splits as prior work [ 31,26] and report Exact Match (EM)\nscores. For TQA, to compare with T5 [52], we also evaluate on the TQA Wiki test set.\n3.2 Abstractive Question Answering\nRAG models can go beyond simple extractive QA and answer questions with free-form, abstractive\ntext generation. To test RAG\u2019s natural language generation (NLG) in a knowledge-intensive setting,\nwe use the MSMARCO NLG task v2.1 [ 43]. The task consists of questions, ten gold passages\nretrieved from a search engine for each question, and a full sentence answer annotated from the\nretrieved passages. We do not use the supplied passages, only the questions and answers, to treat\n4",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_5_0",
    "filename": "pdf3.pdf",
    "page_number": 5,
    "text": "MSMARCO as an open-domain abstractive QA task. MSMARCO has some questions that cannot be\nanswered in a way that matches the reference answer without access to the gold passages, such as\n\u201cWhat is the weather in V olcano, CA?\u201d so performance will be lower without using gold passages.\nWe also note that some MSMARCO questions cannot be answered using Wikipedia alone. Here,\nRAG can rely on parametric knowledge to generate reasonable responses.\n3.3 Jeopardy Question Generation\nTo evaluate RAG\u2019s generation abilities in a non-QA setting, we study open-domain question gen-\neration. Rather than use questions from standard open-domain QA tasks, which typically consist\nof short, simple questions, we propose the more demanding task of generating Jeopardy questions.\nJeopardy is an unusual format that consists of trying to guess an entity from a fact about that entity.\nFor example, \u201cThe World Cup\u201d is the answer to the question \u201cIn 1986 Mexico scored as the \ufb01rst\ncountry to host this international spor",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_5_1",
    "filename": "pdf3.pdf",
    "page_number": 5,
    "text": "nsists of trying to guess an entity from a fact about that entity.\nFor example, \u201cThe World Cup\u201d is the answer to the question \u201cIn 1986 Mexico scored as the \ufb01rst\ncountry to host this international sports competition twice.\u201d As Jeopardy questions are precise,\nfactual statements, generating Jeopardy questions conditioned on their answer entities constitutes a\nchallenging knowledge-intensive generation task.\nWe use the splits from SearchQA [ 10], with 100K train, 14K dev, and 27K test examples. As\nthis is a new task, we train a BART model for comparison. Following [ 67], we evaluate using the\nSQuAD-tuned Q-BLEU-1 metric [ 42]. Q-BLEU is a variant of BLEU with a higher weight for\nmatching entities and has higher correlation with human judgment for question generation than\nstandard metrics. We also perform two human evaluations, one to assess generation factuality, and\none for speci\ufb01city. We de\ufb01ne factuality as whether a statement can be corroborated by trusted external\nsources, and speci\ufb01ci",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_5_2",
    "filename": "pdf3.pdf",
    "page_number": 5,
    "text": "lso perform two human evaluations, one to assess generation factuality, and\none for speci\ufb01city. We de\ufb01ne factuality as whether a statement can be corroborated by trusted external\nsources, and speci\ufb01city as high mutual dependence between the input and output [ 33]. We follow\nbest practice and use pairwise comparative evaluation [ 34]. Evaluators are shown an answer and two\ngenerated questions, one from BART and one from RAG. They are then asked to pick one of four\noptions\u2014quuestion A is better, question B is better, both are good, or neither is good.\n3.4 Fact Veri\ufb01cation\nFEVER [ 56] requires classifying whether a natural language claim is supported or refuted by\nWikipedia, or whether there is not enough information to decide. The task requires retrieving\nevidence from Wikipedia relating to the claim and then reasoning over this evidence to classify\nwhether the claim is true, false, or unveri\ufb01able from Wikipedia alone. FEVER is a retrieval problem\ncoupled with an challenging entailment r",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_5_3",
    "filename": "pdf3.pdf",
    "page_number": 5,
    "text": "the claim and then reasoning over this evidence to classify\nwhether the claim is true, false, or unveri\ufb01able from Wikipedia alone. FEVER is a retrieval problem\ncoupled with an challenging entailment reasoning task. It also provides an appropriate testbed for\nexploring the RAG models\u2019 ability to handle classi\ufb01cation rather than generation. We map FEVER\nclass labels (supports, refutes, or not enough info) to single output tokens and directly train with\nclaim-class pairs. Crucially, unlike most other approaches to FEVER, we do not use supervision on\nretrieved evidence. In many real-world applications, retrieval supervision signals aren\u2019t available, and\nmodels that do not require such supervision will be applicable to a wider range of tasks. We explore\ntwo variants: the standard 3-way classi\ufb01cation task (supports/refutes/not enough info) and the 2-way\n(supports/refutes) task studied in Thorne and Vlachos [57]. In both cases we report label accuracy.\n4 Results\n4.1 Open-domain Question Answe",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_5_4",
    "filename": "pdf3.pdf",
    "page_number": 5,
    "text": "ation task (supports/refutes/not enough info) and the 2-way\n(supports/refutes) task studied in Thorne and Vlachos [57]. In both cases we report label accuracy.\n4 Results\n4.1 Open-domain Question Answering\nTable 1 shows results for RAG along with state-of-the-art models. On all four open-domain QA\ntasks, RAG sets a new state of the art (only on the T5-comparable split for TQA). RAG combines\nthe generation \ufb02exibility of the \u201cclosed-book\u201d (parametric only) approaches and the performance of\n\"open-book\" retrieval-based approaches. Unlike REALM and T5+SSM, RAG enjoys strong results\nwithout expensive, specialized \u201csalient span masking\u201d pre-training [ 20]. It is worth noting that RAG\u2019s\nretriever is initialized using DPR\u2019s retriever, which uses retrieval supervision on Natural Questions\nand TriviaQA. RAG compares favourably to the DPR QA system, which uses a BERT-based \u201ccross-\nencoder\u201d to re-rank documents, along with an extractive reader. RAG demonstrates that neither a\nre-ranker nor extractiv",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_5_5",
    "filename": "pdf3.pdf",
    "page_number": 5,
    "text": "A. RAG compares favourably to the DPR QA system, which uses a BERT-based \u201ccross-\nencoder\u201d to re-rank documents, along with an extractive reader. RAG demonstrates that neither a\nre-ranker nor extractive reader is necessary for state-of-the-art performance.\nThere are several advantages to generating answers even when it is possible to extract them. Docu-\nments with clues about the answer but do not contain the answer verbatim can still contribute towards\na correct answer being generated, which is not possible with standard extractive approaches, leading\n5",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf3.pdf_6_0",
    "filename": "pdf3.pdf",
    "page_number": 6,
    "text": "Table 1: Open-Domain QA Test Scores. For TQA,\nleft column uses the standard test set for Open-\nDomain QA, right column uses the TQA-Wiki\ntest set. See Appendix D for further details.\nModel NQ TQA WQ CT\nClosed\nBookT5-11B [52] 34.5 - /50.1 37.4 -\nT5-11B+SSM[52] 36.6 - /60.5 44.7 -\nOpen\nBookREALM [20] 40.4 - / - 40.7 46.8\nDPR [26] 41.5 57.9/ - 41.1 50.6\nRAG-Token 44.1 55.2/66.1 45.5 50.0\nRAG-Seq. 44.5 56.8/ 68.0 45.2 52.2Table 2: Generation and classi\ufb01cation Test Scores.\nMS-MARCO SotA is [ 4], FEVER-3 is [ 68] and\nFEVER-2 is [ 57] *Uses gold context/evidence.\nBest model without gold access underlined.\nModel Jeopardy MSMARCO FVR3 FVR2\nB-1 QB-1 R-L B-1 Label Acc.\nSotA - - 49.8*49.9*76.8 92.2 *\nBART 15.1 19.7 38.2 41.6 64.0 81.1\nRAG-Tok. 17.3 22.2 40.1 41.572.5 89.5RAG-Seq. 14.7 21.4 40.8 44.2\nto more effective marginalization over documents. Furthermore, RAG can generate correct answers\neven when the correct answer is not in any retrieved document, achieving 11.8% accuracy in such\ncases for",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_6_1",
    "filename": "pdf3.pdf",
    "page_number": 6,
    "text": "o more effective marginalization over documents. Furthermore, RAG can generate correct answers\neven when the correct answer is not in any retrieved document, achieving 11.8% accuracy in such\ncases for NQ, where an extractive model would score 0%.\n4.2 Abstractive Question Answering\nAs shown in Table 2, RAG-Sequence outperforms BART on Open MS-MARCO NLG by 2.6 Bleu\npoints and 2.6 Rouge-L points. RAG approaches state-of-the-art model performance, which is\nimpressive given that (i) those models access gold passages with speci\ufb01c information required to\ngenerate the reference answer , (ii) many questions are unanswerable without the gold passages, and\n(iii) not all questions are answerable from Wikipedia alone. Table 3 shows some generated answers\nfrom our models. Qualitatively, we \ufb01nd that RAG models hallucinate less and generate factually\ncorrect text more often than BART. Later, we also show that RAG generations are more diverse than\nBART generations (see \u00a74.5).\n4.3 Jeopardy Question Gene",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_6_2",
    "filename": "pdf3.pdf",
    "page_number": 6,
    "text": "models hallucinate less and generate factually\ncorrect text more often than BART. Later, we also show that RAG generations are more diverse than\nBART generations (see \u00a74.5).\n4.3 Jeopardy Question Generation\nTable 2 shows that RAG-Token performs better than RAG-Sequence on Jeopardy question generation,\nwith both models outperforming BART on Q-BLEU-1. 4 shows human evaluation results, over 452\npairs of generations from BART and RAG-Token. Evaluators indicated that BART was more factual\nthan RAG in only 7.1% of cases, while RAG was more factual in 42.7% of cases, and both RAG and\nBART were factual in a further 17% of cases, clearly demonstrating the effectiveness of RAG on\nthe task over a state-of-the-art generation model. Evaluators also \ufb01nd RAG generations to be more\nspeci\ufb01c by a large margin. Table 3 shows typical generations from each model.\nJeopardy questions often contain two separate pieces of information, and RAG-Token may perform\nbest because it can generate responses that combin",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_6_3",
    "filename": "pdf3.pdf",
    "page_number": 6,
    "text": "in. Table 3 shows typical generations from each model.\nJeopardy questions often contain two separate pieces of information, and RAG-Token may perform\nbest because it can generate responses that combine content from several documents. Figure 2 shows\nan example. When generating \u201cSun\u201d, the posterior is high for document 2 which mentions \u201cThe\nSun Also Rises\u201d. Similarly, document 1 dominates the posterior when \u201cA Farewell to Arms\u201d is\ngenerated. Intriguingly, after the \ufb01rst token of each book is generated, the document posterior \ufb02attens.\nThis observation suggests that the generator can complete the titles without depending on speci\ufb01c\ndocuments. In other words, the model\u2019s parametric knowledge is suf\ufb01cient to complete the titles. We\n\ufb01nd evidence for this hypothesis by feeding the BART-only baseline with the partial decoding \"The\nSun. BART completes the generation \"The SunAlso Rises\" isanovel bythis author of\"The Sun\nAlso Rises\" indicating the title \"The Sun Also Rises\" is stored in BART\u2019s par",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_6_4",
    "filename": "pdf3.pdf",
    "page_number": 6,
    "text": "ne with the partial decoding \"The\nSun. BART completes the generation \"The SunAlso Rises\" isanovel bythis author of\"The Sun\nAlso Rises\" indicating the title \"The Sun Also Rises\" is stored in BART\u2019s parameters. Similarly,\nBART will complete the partial decoding \"The SunAlso Rises\" isanovel bythis author of\"A\nwith \"The SunAlso Rises\" isanovel bythis author of\"AFarewell toArms\" . This example shows\nhow parametric and non-parametric memories work together \u2014the non-parametric component helps\nto guide the generation, drawing out speci\ufb01c knowledge stored in the parametric memory.\n4.4 Fact Veri\ufb01cation\nTable 2 shows our results on FEVER. For 3-way classi\ufb01cation, RAG scores are within 4.3% of\nstate-of-the-art models, which are complex pipeline systems with domain-speci\ufb01c architectures and\nsubstantial engineering, trained using intermediate retrieval supervision, which RAG does not require.\n6",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_7_0",
    "filename": "pdf3.pdf",
    "page_number": 7,
    "text": "Document 1 : his works are considered classics of American\nliterature ... His wartime experiences formed the basis for his novel\n\u201dA Farewell to Arms\u201d (1929) ...\nDocument 2 : ... artists of the 1920s \u201dLost Generation\u201d expatriate\ncommunity. His debut novel, \u201dThe Sun Also Rises\u201d , was published\nin 1926.\nBOS\u201d\nTheSunAlsoRises\u201disa\nnovelbythis\nauthorof\u201dA\nFarewellto\nArms\u201dDoc 1\nDoc 2\nDoc 3\nDoc 4\nDoc 5Figure 2: RAG-Token document posterior p(zijx;yi;y\u0000i)for each generated token for input \u201cHem-\ningway\" for Jeopardy generation with 5 retrieved documents. The posterior for document 1 is high\nwhen generating \u201cA Farewell to Arms\" and for document 2 when generating \u201cThe Sun Also Rises\".\nTable 3: Examples from generation tasks. RAG models generate more speci\ufb01c and factually accurate\nresponses. \u2018?\u2019 indicates factually incorrect responses, * indicates partially correct responses.\nTask Input Model Generation\nMS-\nMARCOde\ufb01ne middle\nearBART?The middle ear is the part of the ear between the middle ear and the",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_7_1",
    "filename": "pdf3.pdf",
    "page_number": 7,
    "text": "s factually incorrect responses, * indicates partially correct responses.\nTask Input Model Generation\nMS-\nMARCOde\ufb01ne middle\nearBART?The middle ear is the part of the ear between the middle ear and the nose.\nRAG-T The middle ear is the portion of the ear internal to the eardrum.\nRAG-S The middle ear includes the tympanic cavity and the three ossicles.\nwhat currency\nneeded in\nscotlandBART The currency needed in Scotland is Pound sterling.\nRAG-T Pound is the currency needed in Scotland.\nRAG-S The currency needed in Scotland is the pound sterling.\nJeopardy\nQuestion\nGener\n-ationWashingtonBART?This state has the largest number of counties in the U.S.\nRAG-T It\u2019s the only U.S. state named for a U.S. president\nRAG-S It\u2019s the state where you\u2019ll \ufb01nd Mount Rainier National Park\nThe Divine\nComedyBART*This epic poem by Dante is divided into 3 parts: the Inferno, the Purgatorio & the Purgatorio\nRAG-T Dante\u2019s \"Inferno\" is the \ufb01rst part of this epic poem\nRAG-S This 14th century work is divided into 3 s",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_7_2",
    "filename": "pdf3.pdf",
    "page_number": 7,
    "text": "his epic poem by Dante is divided into 3 parts: the Inferno, the Purgatorio & the Purgatorio\nRAG-T Dante\u2019s \"Inferno\" is the \ufb01rst part of this epic poem\nRAG-S This 14th century work is divided into 3 sections: \"Inferno\", \"Purgatorio\" & \"Paradiso\"\nFor 2-way classi\ufb01cation, we compare against Thorne and Vlachos [57], who train RoBERTa [ 35]\nto classify the claim as true or false given the gold evidence sentence. RAG achieves an accuracy\nwithin 2.7% of this model, despite being supplied with only the claim and retrieving its own evidence.\nWe also analyze whether documents retrieved by RAG correspond to documents annotated as gold\nevidence in FEVER. We calculate the overlap in article titles between the top kdocuments retrieved\nby RAG and gold evidence annotations. We \ufb01nd that the top retrieved document is from a gold article\nin 71% of cases, and a gold article is present in the top 10 retrieved articles in 90% of cases.\n4.5 Additional Results\nGeneration Diversity Section 4.3 shows that RAG ",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_7_3",
    "filename": "pdf3.pdf",
    "page_number": 7,
    "text": "document is from a gold article\nin 71% of cases, and a gold article is present in the top 10 retrieved articles in 90% of cases.\n4.5 Additional Results\nGeneration Diversity Section 4.3 shows that RAG models are more factual and speci\ufb01c than\nBART for Jeopardy question generation. Following recent work on diversity-promoting decoding\n[33,59,39], we also investigate generation diversity by calculating the ratio of distinct ngrams to\ntotal ngrams generated by different models. Table 5 shows that RAG-Sequence\u2019s generations are\nmore diverse than RAG-Token\u2019s, and both are signi\ufb01cantly more diverse than BART without needing\nany diversity-promoting decoding.\nRetrieval Ablations A key feature of RAG is learning to retrieve relevant information for the task.\nTo assess the effectiveness of the retrieval mechanism, we run ablations where we freeze the retriever\nduring training. As shown in Table 6, learned retrieval improves results for all tasks.\nWe compare RAG\u2019s dense retriever to a word overlap-",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_7_4",
    "filename": "pdf3.pdf",
    "page_number": 7,
    "text": "al mechanism, we run ablations where we freeze the retriever\nduring training. As shown in Table 6, learned retrieval improves results for all tasks.\nWe compare RAG\u2019s dense retriever to a word overlap-based BM25 retriever [ 53]. Here, we replace\nRAG\u2019s retriever with a \ufb01xed BM25 system, and use BM25 retrieval scores as logits when calculating\np(zjx). Table 6 shows the results. For FEVER, BM25 performs best, perhaps since FEVER claims are\nheavily entity-centric and thus well-suited for word overlap-based retrieval. Differentiable retrieval\nimproves results on all other tasks, especially for Open-Domain QA, where it is crucial.\nIndex hot-swapping An advantage of non-parametric memory models like RAG is that knowledge\ncan be easily updated at test time. Parametric-only models like T5 or BART need further training to\nupdate their behavior as the world changes. To demonstrate, we build an index using the DrQA [ 5]\nWikipedia dump from December 2016 and compare outputs from RAG using this index",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_7_5",
    "filename": "pdf3.pdf",
    "page_number": 7,
    "text": "ed further training to\nupdate their behavior as the world changes. To demonstrate, we build an index using the DrQA [ 5]\nWikipedia dump from December 2016 and compare outputs from RAG using this index to the newer\nindex from our main results (December 2018). We prepare a list of 82 world leaders who had changed\n7",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf3.pdf_8_0",
    "filename": "pdf3.pdf",
    "page_number": 8,
    "text": "Table 4: Human assessments for the Jeopardy\nQuestion Generation Task.\nFactuality Speci\ufb01city\nBART better 7.1% 16.8%\nRAG better 42.7% 37.4%\nBoth good 11.7% 11.8%\nBoth poor 17.7% 6.9%\nNo majority 20.8% 20.1%Table 5: Ratio of distinct to total tri-grams for\ngeneration tasks.\nMSMARCO Jeopardy QGen\nGold 89.6% 90.0%\nBART 70.7% 32.4%\nRAG-Token 77.8% 46.8%\nRAG-Seq. 83.5% 53.8%\nTable 6: Ablations on the dev set. As FEVER is a classi\ufb01cation task, both RAG models are equivalent.\nModel NQ TQA WQ CT Jeopardy-QGen MSMarco FVR-3 FVR-2\nExact Match B-1 QB-1 R-L B-1 Label Accuracy\nRAG-Token-BM25 29.7 41.5 32.1 33.1 17.5 22.3 55.5 48.475.1 91.6RAG-Sequence-BM25 31.8 44.1 36.6 33.8 11.1 19.5 56.5 46.9\nRAG-Token-Frozen 37.8 50.1 37.1 51.1 16.7 21.7 55.9 49.472.9 89.4RAG-Sequence-Frozen 41.2 52.1 41.8 52.6 11.8 19.6 56.7 47.3\nRAG-Token 43.5 54.8 46.5 51.9 17.9 22.6 56.2 49.474.5 90.6RAG-Sequence 44.0 55.8 44.9 53.4 15.3 21.5 57.2 47.5\nbetween these dates and use a template \u201cWho is {position}?\u201d (e.g. \u201cWho is ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_8_1",
    "filename": "pdf3.pdf",
    "page_number": 8,
    "text": "19.6 56.7 47.3\nRAG-Token 43.5 54.8 46.5 51.9 17.9 22.6 56.2 49.474.5 90.6RAG-Sequence 44.0 55.8 44.9 53.4 15.3 21.5 57.2 47.5\nbetween these dates and use a template \u201cWho is {position}?\u201d (e.g. \u201cWho is the President of Peru?\u201d)\nto query our NQ RAG model with each index. RAG answers 70% correctly using the 2016 index for\n2016 world leaders and 68% using the 2018 index for 2018 world leaders. Accuracy with mismatched\nindices is low (12% with the 2018 index and 2016 leaders, 4% with the 2016 index and 2018 leaders).\nThis shows we can update RAG\u2019s world knowledge by simply replacing its non-parametric memory.\nEffect of Retrieving more documents Models are trained with either 5 or 10 retrieved latent\ndocuments, and we do not observe signi\ufb01cant differences in performance between them. We have the\n\ufb02exibility to adjust the number of retrieved documents at test time, which can affect performance and\nruntime. Figure 3 (left) shows that retrieving more documents at test time monotonically improves\nO",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_8_2",
    "filename": "pdf3.pdf",
    "page_number": 8,
    "text": "exibility to adjust the number of retrieved documents at test time, which can affect performance and\nruntime. Figure 3 (left) shows that retrieving more documents at test time monotonically improves\nOpen-domain QA results for RAG-Sequence, but performance peaks for RAG-Token at 10 retrieved\ndocuments. Figure 3 (right) shows that retrieving more documents leads to higher Rouge-L for\nRAG-Token at the expense of Bleu-1, but the effect is less pronounced for RAG-Sequence.\n10 20 30 40 50\nKR e t r i e v e dD o c s394041424344NQ Exact MatchRAG-Tok\nRAG-Seq\n10 20 30 40 50\nKR e t r i e v e dD o c s4050607080NQ Answer Recall @ KRAG-Tok\nRAG-Seq\nFixed DPR\nBM25\n10 20 30 40 50\nKR e t r i e v e dD o c s4850525456Bleu-1 / Rouge-L scoreRAG-Tok R-L\nRAG-Tok B-1\nRAG-Seq R-L\nRAG-Seq B-1\nFigure 3: Left: NQ performance as more documents are retrieved. Center: Retrieval recall perfor-\nmance in NQ. Right: MS-MARCO Bleu-1 and Rouge-L as more documents are retrieved.\n5 Related Work\nSingle-Task Retrieval Prior wor",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_8_3",
    "filename": "pdf3.pdf",
    "page_number": 8,
    "text": "rmance as more documents are retrieved. Center: Retrieval recall perfor-\nmance in NQ. Right: MS-MARCO Bleu-1 and Rouge-L as more documents are retrieved.\n5 Related Work\nSingle-Task Retrieval Prior work has shown that retrieval improves performance across a variety of\nNLP tasks when considered in isolation. Such tasks include open-domain question answering [ 5,29],\nfact checking [ 56], fact completion [ 48], long-form question answering [ 12], Wikipedia article\ngeneration [ 36], dialogue [ 41,65,9,13], translation [ 17], and language modeling [ 19,27]. Our\nwork uni\ufb01es previous successes in incorporating retrieval into individual tasks, showing that a single\nretrieval-based architecture is capable of achieving strong performance across several tasks.\n8",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_9_0",
    "filename": "pdf3.pdf",
    "page_number": 9,
    "text": "General-Purpose Architectures for NLP Prior work on general-purpose architectures for NLP\ntasks has shown great success without the use of retrieval. A single, pre-trained language model\nhas been shown to achieve strong performance on various classi\ufb01cation tasks in the GLUE bench-\nmarks [ 60,61] after \ufb01ne-tuning [ 49,8]. GPT-2 [ 50] later showed that a single, left-to-right, pre-trained\nlanguage model could achieve strong performance across both discriminative and generative tasks.\nFor further improvement, BART [ 32] and T5 [ 51,52] propose a single, pre-trained encoder-decoder\nmodel that leverages bi-directional attention to achieve stronger performance on discriminative\nand generative tasks. Our work aims to expand the space of possible tasks with a single, uni\ufb01ed\narchitecture, by learning a retrieval module to augment pre-trained, generative language models.\nLearned Retrieval There is signi\ufb01cant work on learning to retrieve documents in information\nretrieval, more recently with pre-",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_9_1",
    "filename": "pdf3.pdf",
    "page_number": 9,
    "text": "ng a retrieval module to augment pre-trained, generative language models.\nLearned Retrieval There is signi\ufb01cant work on learning to retrieve documents in information\nretrieval, more recently with pre-trained, neural language models [ 44,26] similar to ours. Some\nwork optimizes the retrieval module to aid in a speci\ufb01c, downstream task such as question answering,\nusing search [ 46], reinforcement learning [ 6,63,62], or a latent variable approach [ 31,20] as in our\nwork. These successes leverage different retrieval-based architectures and optimization techniques to\nachieve strong performance on a single task, while we show that a single retrieval-based architecture\ncan be \ufb01ne-tuned for strong performance on a variety of tasks.\nMemory-based Architectures Our document index can be seen as a large external memory for\nneural networks to attend to, analogous to memory networks [ 64,55]. Concurrent work [ 14] learns\nto retrieve a trained embedding for each entity in the input, rather than to r",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_9_2",
    "filename": "pdf3.pdf",
    "page_number": 9,
    "text": "rge external memory for\nneural networks to attend to, analogous to memory networks [ 64,55]. Concurrent work [ 14] learns\nto retrieve a trained embedding for each entity in the input, rather than to retrieve raw text as in our\nwork. Other work improves the ability of dialog models to generate factual text by attending over\nfact embeddings [ 15,13]. A key feature of our memory is that it is comprised of raw text rather\ndistributed representations, which makes the memory both (i) human-readable, lending a form of\ninterpretability to our model, and (ii) human-writable, enabling us to dynamically update the model\u2019s\nmemory by editing the document index. This approach has also been used in knowledge-intensive\ndialog, where generators have been conditioned on retrieved text directly, albeit obtained via TF-IDF\nrather than end-to-end learnt retrieval [9].\nRetrieve-and-Edit approaches Our method shares some similarities with retrieve-and-edit style\napproaches, where a similar training input-out",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_9_3",
    "filename": "pdf3.pdf",
    "page_number": 9,
    "text": "ned via TF-IDF\nrather than end-to-end learnt retrieval [9].\nRetrieve-and-Edit approaches Our method shares some similarities with retrieve-and-edit style\napproaches, where a similar training input-output pair is retrieved for a given input, and then edited\nto provide a \ufb01nal output. These approaches have proved successful in a number of domains including\nMachine Translation [ 18,22] and Semantic Parsing [ 21]. Our approach does have several differences,\nincluding less of emphasis on lightly editing a retrieved item, but on aggregating content from several\npieces of retrieved content, as well as learning latent retrieval, and retrieving evidence documents\nrather than related training pairs. This said, RAG techniques may work well in these settings, and\ncould represent promising future work.\n6 Discussion\nIn this work, we presented hybrid generation models with access to parametric and non-parametric\nmemory. We showed that our RAG models obtain state of the art results on open-domain QA. W",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_9_4",
    "filename": "pdf3.pdf",
    "page_number": 9,
    "text": "6 Discussion\nIn this work, we presented hybrid generation models with access to parametric and non-parametric\nmemory. We showed that our RAG models obtain state of the art results on open-domain QA. We\nfound that people prefer RAG\u2019s generation over purely parametric BART, \ufb01nding RAG more factual\nand speci\ufb01c. We conducted an thorough investigation of the learned retrieval component, validating\nits effectiveness, and we illustrated how the retrieval index can be hot-swapped to update the model\nwithout requiring any retraining. In future work, it may be fruitful to investigate if the two components\ncan be jointly pre-trained from scratch, either with a denoising objective similar to BART or some\nanother objective. Our work opens up new research directions on how parametric and non-parametric\nmemories interact and how to most effectively combine them, showing promise in being applied to a\nwide variety of NLP tasks.\n9",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_10_0",
    "filename": "pdf3.pdf",
    "page_number": 10,
    "text": "Broader Impact\nThis work offers several positive societal bene\ufb01ts over previous work: the fact that it is more\nstrongly grounded in real factual knowledge (in this case Wikipedia) makes it \u201challucinate\u201d less\nwith generations that are more factual, and offers more control and interpretability. RAG could be\nemployed in a wide variety of scenarios with direct bene\ufb01t to society, for example by endowing it\nwith a medical index and asking it open-domain questions on that topic, or by helping people be more\neffective at their jobs.\nWith these advantages also come potential downsides: Wikipedia, or any potential external knowledge\nsource, will probably never be entirely factual and completely devoid of bias. Since RAG can be\nemployed as a language model, similar concerns as for GPT-2 [ 50] are valid here, although arguably\nto a lesser extent, including that it might be used to generate abuse, faked or misleading content in\nthe news or on social media; to impersonate others; or to automate the ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_10_1",
    "filename": "pdf3.pdf",
    "page_number": 10,
    "text": "id here, although arguably\nto a lesser extent, including that it might be used to generate abuse, faked or misleading content in\nthe news or on social media; to impersonate others; or to automate the production of spam/phishing\ncontent [ 54]. Advanced language models may also lead to the automation of various jobs in the\ncoming decades [ 16]. In order to mitigate these risks, AI systems could be employed to \ufb01ght against\nmisleading content and automated spam/phishing.\nAcknowledgments\nThe authors would like to thank the reviewers for their thoughtful and constructive feedback on this\npaper, as well as HuggingFace for their help in open-sourcing code to run RAG models. The authors\nwould also like to thank Kyunghyun Cho and Sewon Min for productive discussions and advice. EP\nthanks supports from the NSF Graduate Research Fellowship. PL is supported by the FAIR PhD\nprogram.\nReferences\n[1]Payal Bajaj, Daniel Campos, Nick Craswell, Li Deng, Jianfeng Gao, Xiaodong Liu, Rangan\nMajumder, Andrew ",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_10_2",
    "filename": "pdf3.pdf",
    "page_number": 10,
    "text": "om the NSF Graduate Research Fellowship. PL is supported by the FAIR PhD\nprogram.\nReferences\n[1]Payal Bajaj, Daniel Campos, Nick Craswell, Li Deng, Jianfeng Gao, Xiaodong Liu, Rangan\nMajumder, Andrew McNamara, Bhaskar Mitra, Tri Nguyen, Mir Rosenberg, Xia Song, Alina\nStoica, Saurabh Tiwary, and Tong Wang. MS MARCO: A Human Generated MAchine\nReading COmprehension Dataset. arXiv:1611.09268 [cs] , November 2016. URL http:\n//arxiv.org/abs/1611.09268 . arXiv: 1611.09268.\n[2]Petr Baudi\u0161 and Jan \u0160ediv `y. Modeling of the question answering task in the yodaqa system. In\nInternational Conference of the Cross-Language Evaluation Forum for European Languages ,\npages 222\u2013228. Springer, 2015. URL https://link.springer.com/chapter/10.1007%\n2F978-3-319-24027-5_20 .\n[3]Jonathan Berant, Andrew Chou, Roy Frostig, and Percy Liang. Semantic Parsing on Freebase\nfrom Question-Answer Pairs. In Proceedings of the 2013 Conference on Empirical Methods\nin Natural Language Processing , pages 1533\u20131544, Seattle, W",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_10_3",
    "filename": "pdf3.pdf",
    "page_number": 10,
    "text": "ostig, and Percy Liang. Semantic Parsing on Freebase\nfrom Question-Answer Pairs. In Proceedings of the 2013 Conference on Empirical Methods\nin Natural Language Processing , pages 1533\u20131544, Seattle, Washington, USA, October 2013.\nAssociation for Computational Linguistics. URL http://www.aclweb.org/anthology/\nD13-1160 .\n[4]Bin Bi, Chenliang Li, Chen Wu, Ming Yan, and Wei Wang. Palm: Pre-training an autoencod-\ning&autoregressive language model for context-conditioned generation. ArXiv , abs/2004.07159,\n2020. URL https://arxiv.org/abs/2004.07159 .\n[5]Danqi Chen, Adam Fisch, Jason Weston, and Antoine Bordes. Reading Wikipedia to Answer\nOpen-Domain Questions. In Proceedings of the 55th Annual Meeting of the Association for\nComputational Linguistics (Volume 1: Long Papers) , pages 1870\u20131879, Vancouver, Canada,\nJuly 2017. Association for Computational Linguistics. doi: 10.18653/v1/P17-1171. URL\nhttps://www.aclweb.org/anthology/P17-1171 .\n[6]Eunsol Choi, Daniel Hewlett, Jakob Uszkoreit, Illia ",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_10_4",
    "filename": "pdf3.pdf",
    "page_number": 10,
    "text": "couver, Canada,\nJuly 2017. Association for Computational Linguistics. doi: 10.18653/v1/P17-1171. URL\nhttps://www.aclweb.org/anthology/P17-1171 .\n[6]Eunsol Choi, Daniel Hewlett, Jakob Uszkoreit, Illia Polosukhin, Alexandre Lacoste, and\nJonathan Berant. Coarse-to-\ufb01ne question answering for long documents. In Proceedings of the\n55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) ,\npages 209\u2013220, Vancouver, Canada, July 2017. Association for Computational Linguistics. doi:\n10.18653/v1/P17-1020. URL https://www.aclweb.org/anthology/P17-1020 .\n10",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_11_0",
    "filename": "pdf3.pdf",
    "page_number": 11,
    "text": "[7]Christopher Clark and Matt Gardner. Simple and Effective Multi-Paragraph Reading Compre-\nhension. arXiv:1710.10723 [cs] , October 2017. URL http://arxiv.org/abs/1710.10723 .\narXiv: 1710.10723.\n[8]Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of\nDeep Bidirectional Transformers for Language Understanding. In Proceedings of the 2019 Con-\nference of the North American Chapter of the Association for Computational Linguistics: Human\nLanguage Technologies, Volume 1 (Long and Short Papers) , pages 4171\u20134186, Minneapolis,\nMinnesota, June 2019. Association for Computational Linguistics. doi: 10.18653/v1/N19-1423.\nURL https://www.aclweb.org/anthology/N19-1423 .\n[9]Emily Dinan, Stephen Roller, Kurt Shuster, Angela Fan, Michael Auli, and Jason Weston. Wiz-\nard of wikipedia: Knowledge-powered conversational agents. In International Conference on\nLearning Representations , 2019. URL https://openreview.net/forum?id=r1l73iRqKm .\n[10] Matthew Dunn, Levent Sagun,",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_11_1",
    "filename": "pdf3.pdf",
    "page_number": 11,
    "text": "of wikipedia: Knowledge-powered conversational agents. In International Conference on\nLearning Representations , 2019. URL https://openreview.net/forum?id=r1l73iRqKm .\n[10] Matthew Dunn, Levent Sagun, Mike Higgins, V . Ugur Guney, V olkan Cirik, and Kyunghyun\nCho. SearchQA: A New Q&A Dataset Augmented with Context from a Search Engine.\narXiv:1704.05179 [cs] , April 2017. URL http://arxiv.org/abs/1704.05179 . arXiv:\n1704.05179.\n[11] Angela Fan, Mike Lewis, and Yann Dauphin. Hierarchical neural story generation. In Proceed-\nings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1:\nLong Papers) , pages 889\u2013898, Melbourne, Australia, July 2018. Association for Computational\nLinguistics. doi: 10.18653/v1/P18-1082. URL https://www.aclweb.org/anthology/\nP18-1082 .\n[12] Angela Fan, Yacine Jernite, Ethan Perez, David Grangier, Jason Weston, and Michael Auli. ELI5:\nLong form question answering. In Proceedings of the 57th Annual Meeting of the Association\nfor Com",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_11_2",
    "filename": "pdf3.pdf",
    "page_number": 11,
    "text": ".\n[12] Angela Fan, Yacine Jernite, Ethan Perez, David Grangier, Jason Weston, and Michael Auli. ELI5:\nLong form question answering. In Proceedings of the 57th Annual Meeting of the Association\nfor Computational Linguistics , pages 3558\u20133567, Florence, Italy, July 2019. Association for\nComputational Linguistics. doi: 10.18653/v1/P19-1346. URL https://www.aclweb.org/\nanthology/P19-1346 .\n[13] Angela Fan, Claire Gardent, Chloe Braud, and Antoine Bordes. Augmenting transformers\nwith KNN-based composite memory, 2020. URL https://openreview.net/forum?id=\nH1gx1CNKPH .\n[14] Thibault F\u00e9vry, Livio Baldini Soares, Nicholas FitzGerald, Eunsol Choi, and Tom Kwiatkowski.\nEntities as experts: Sparse memory access with entity supervision. ArXiv , abs/2004.07202,\n2020. URL https://arxiv.org/abs/2004.07202 .\n[15] Marjan Ghazvininejad, Chris Brockett, Ming-Wei Chang, Bill Dolan, Jianfeng Gao, Wen\ntau Yih, and Michel Galley. A knowledge-grounded neural conversation model. In AAAI\nConference on Arti\ufb01cial I",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_11_3",
    "filename": "pdf3.pdf",
    "page_number": 11,
    "text": ".\n[15] Marjan Ghazvininejad, Chris Brockett, Ming-Wei Chang, Bill Dolan, Jianfeng Gao, Wen\ntau Yih, and Michel Galley. A knowledge-grounded neural conversation model. In AAAI\nConference on Arti\ufb01cial Intelligence , 2018. URL https://www.aaai.org/ocs/index.php/\nAAAI/AAAI18/paper/view/16710 .\n[16] Katja Grace, John Salvatier, Allan Dafoe, Baobao Zhang, and Owain Evans. When will AI\nexceed human performance? evidence from AI experts. CoRR , abs/1705.08807, 2017. URL\nhttp://arxiv.org/abs/1705.08807 .\n[17] Jiatao Gu, Yong Wang, Kyunghyun Cho, and Victor O.K. Li. Search engine guided neural\nmachine translation. In AAAI Conference on Arti\ufb01cial Intelligence , 2018. URL https:\n//www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/17282 .\n[18] Jiatao Gu, Yong Wang, Kyunghyun Cho, and Victor O.K. Li. Search engine guided neural\nmachine translation. In 32nd AAAI Conference on Arti\ufb01cial Intelligence, AAAI 2018 , 32nd\nAAAI Conference on Arti\ufb01cial Intelligence, AAAI 2018, pages 5133\u20135140. AAAI press, 20",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_11_4",
    "filename": "pdf3.pdf",
    "page_number": 11,
    "text": "arch engine guided neural\nmachine translation. In 32nd AAAI Conference on Arti\ufb01cial Intelligence, AAAI 2018 , 32nd\nAAAI Conference on Arti\ufb01cial Intelligence, AAAI 2018, pages 5133\u20135140. AAAI press, 2018.\n32nd AAAI Conference on Arti\ufb01cial Intelligence, AAAI 2018 ; Conference date: 02-02-2018\nThrough 07-02-2018.\n[19] Kelvin Guu, Tatsunori B. Hashimoto, Yonatan Oren, and Percy Liang. Generating sentences by\nediting prototypes. Transactions of the Association for Computational Linguistics , 6:437\u2013450,\n2018. doi: 10.1162/tacl_a_00030. URL https://www.aclweb.org/anthology/Q18-1031 .\n11",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_12_0",
    "filename": "pdf3.pdf",
    "page_number": 12,
    "text": "[20] Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, and Ming-Wei Chang. REALM:\nRetrieval-augmented language model pre-training. ArXiv , abs/2002.08909, 2020. URL https:\n//arxiv.org/abs/2002.08909 .\n[21] Tatsunori B Hashimoto, Kelvin Guu, Yonatan Oren, and Percy S Liang. A\nretrieve-and-edit framework for predicting structured outputs. In S. Bengio,\nH. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, ed-\nitors, Advances in Neural Information Processing Systems 31 , pages 10052\u2013\n10062. Curran Associates, Inc., 2018. URL http://papers.nips.cc/paper/\n8209-a-retrieve-and-edit-framework-for-predicting-structured-outputs.\npdf.\n[22] Nabil Hossain, Marjan Ghazvininejad, and Luke Zettlemoyer. Simple and effective retrieve-\nedit-rerank text generation. In Proceedings of the 58th Annual Meeting of the Association for\nComputational Linguistics , pages 2532\u20132538, Online, July 2020. Association for Computa-\ntional Linguistics. doi: 10.18653/v1/2020.acl-main.228. URL https://w",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_12_1",
    "filename": "pdf3.pdf",
    "page_number": 12,
    "text": "8th Annual Meeting of the Association for\nComputational Linguistics , pages 2532\u20132538, Online, July 2020. Association for Computa-\ntional Linguistics. doi: 10.18653/v1/2020.acl-main.228. URL https://www.aclweb.org/\nanthology/2020.acl-main.228 .\n[23] Jeff Johnson, Matthijs Douze, and Herv\u00e9 J\u00e9gou. Billion-scale similarity search with gpus. arXiv\npreprint arXiv:1702.08734 , 2017. URL https://arxiv.org/abs/1702.08734 .\n[24] Mandar Joshi, Eunsol Choi, Daniel Weld, and Luke Zettlemoyer. TriviaQA: A Large Scale\nDistantly Supervised Challenge Dataset for Reading Comprehension. In Proceedings of the\n55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) ,\npages 1601\u20131611, Vancouver, Canada, July 2017. Association for Computational Linguistics.\ndoi: 10.18653/v1/P17-1147. URL https://www.aclweb.org/anthology/P17-1147 .\n[25] Armand Joulin and Tomas Mikolov. Inferring algorithmic patterns with stack-\naugmented recurrent nets. In Proceedings of the 28th Internat",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_12_2",
    "filename": "pdf3.pdf",
    "page_number": 12,
    "text": "P17-1147. URL https://www.aclweb.org/anthology/P17-1147 .\n[25] Armand Joulin and Tomas Mikolov. Inferring algorithmic patterns with stack-\naugmented recurrent nets. In Proceedings of the 28th International Conference on\nNeural Information Processing Systems - Volume 1 , NIPS\u201915, page 190\u2013198, Cam-\nbridge, MA, USA, 2015. MIT Press. URL https://papers.nips.cc/paper/\n5857-inferring-algorithmic-patterns-with-stack-augmented-recurrent-nets .\n[26] Vladimir Karpukhin, Barlas Oguz, Sewon Min, Ledell Wu, Sergey Edunov, Danqi Chen, and\nWen-tau Yih. Dense passage retrieval for open-domain question answering. arXiv preprint\narXiv:2004.04906 , 2020. URL https://arxiv.org/abs/2004.04906 .\n[27] Urvashi Khandelwal, Omer Levy, Dan Jurafsky, Luke Zettlemoyer, and Mike Lewis. Generaliza-\ntion through memorization: Nearest neighbor language models. In International Conference on\nLearning Representations , 2020. URL https://openreview.net/forum?id=HklBjCEKvH .\n[28] Diederik P. Kingma and Jimmy Ba. Adam: A ",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_12_3",
    "filename": "pdf3.pdf",
    "page_number": 12,
    "text": "ation: Nearest neighbor language models. In International Conference on\nLearning Representations , 2020. URL https://openreview.net/forum?id=HklBjCEKvH .\n[28] Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua\nBengio and Yann LeCun, editors, 3rd International Conference on Learning Representations,\nICLR 2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings , 2015. URL\nhttp://arxiv.org/abs/1412.6980 .\n[29] Tom Kwiatkowski, Jennimaria Palomaki, Olivia Red\ufb01eld, Michael Collins, Ankur Parikh,\nChris Alberti, Danielle Epstein, Illia Polosukhin, Matthew Kelcey, Jacob Devlin, Ken-\nton Lee, Kristina N. Toutanova, Llion Jones, Ming-Wei Chang, Andrew Dai, Jakob\nUszkoreit, Quoc Le, and Slav Petrov. Natural Questions: a Benchmark for Ques-\ntion Answering Research. Transactions of the Association of Computational Lin-\nguistics , 2019. URL https://tomkwiat.users.x20web.corp.google.com/papers/\nnatural-questions/main-1455-kwiatkowski.pdf .\n[30] Guilla",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_12_4",
    "filename": "pdf3.pdf",
    "page_number": 12,
    "text": "ing Research. Transactions of the Association of Computational Lin-\nguistics , 2019. URL https://tomkwiat.users.x20web.corp.google.com/papers/\nnatural-questions/main-1455-kwiatkowski.pdf .\n[30] Guillaume Lample, Alexandre Sablayrolles, Marc\u2019 Aurelio Ranzato, Ludovic Denoyer, and\nHerve Jegou. Large memory layers with product keys. In H. Wallach, H. Larochelle,\nA. Beygelzimer, F. d\u2019 Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural In-\nformation Processing Systems 32 , pages 8548\u20138559. Curran Associates, Inc., 2019. URL http:\n//papers.nips.cc/paper/9061-large-memory-layers-with-product-keys.pdf .\n[31] Kenton Lee, Ming-Wei Chang, and Kristina Toutanova. Latent retrieval for weakly supervised\nopen domain question answering. In Proceedings of the 57th Annual Meeting of the Association\n12",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_13_0",
    "filename": "pdf3.pdf",
    "page_number": 13,
    "text": "for Computational Linguistics , pages 6086\u20136096, Florence, Italy, July 2019. Association for\nComputational Linguistics. doi: 10.18653/v1/P19-1612. URL https://www.aclweb.org/\nanthology/P19-1612 .\n[32] Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed,\nOmer Levy, Veselin Stoyanov, and Luke Zettlemoyer. BART: Denoising sequence-to-sequence\npre-training for natural language generation, translation, and comprehension. arXiv preprint\narXiv:1910.13461 , 2019. URL https://arxiv.org/abs/1910.13461 .\n[33] Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao, and Bill Dolan. A diversity-promoting\nobjective function for neural conversation models. In Proceedings of the 2016 Conference of the\nNorth American Chapter of the Association for Computational Linguistics: Human Language\nTechnologies , pages 110\u2013119, San Diego, California, June 2016. Association for Computational\nLinguistics. doi: 10.18653/v1/N16-1014. URL https://www.aclweb.org/anthology/\nN16-1014 .\n[34] Marg",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_13_1",
    "filename": "pdf3.pdf",
    "page_number": 13,
    "text": "anguage\nTechnologies , pages 110\u2013119, San Diego, California, June 2016. Association for Computational\nLinguistics. doi: 10.18653/v1/N16-1014. URL https://www.aclweb.org/anthology/\nN16-1014 .\n[34] Margaret Li, Jason Weston, and Stephen Roller. Acute-eval: Improved dialogue evaluation\nwith optimized questions and multi-turn comparisons. ArXiv , abs/1909.03087, 2019. URL\nhttps://arxiv.org/abs/1909.03087 .\n[35] Hairong Liu, Mingbo Ma, Liang Huang, Hao Xiong, and Zhongjun He. Robust neural machine\ntranslation with joint textual and phonetic embedding. In Proceedings of the 57th Annual\nMeeting of the Association for Computational Linguistics , pages 3044\u20133049, Florence, Italy,\nJuly 2019. Association for Computational Linguistics. doi: 10.18653/v1/P19-1291. URL\nhttps://www.aclweb.org/anthology/P19-1291 .\n[36] Peter J. Liu*, Mohammad Saleh*, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser,\nand Noam Shazeer. Generating wikipedia by summarizing long sequences. In International\nConference ",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_13_2",
    "filename": "pdf3.pdf",
    "page_number": 13,
    "text": "9-1291 .\n[36] Peter J. Liu*, Mohammad Saleh*, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser,\nand Noam Shazeer. Generating wikipedia by summarizing long sequences. In International\nConference on Learning Representations , 2018. URL https://openreview.net/forum?\nid=Hyg0vbWC- .\n[37] Yury A. Malkov and D. A. Yashunin. Ef\ufb01cient and robust approximate nearest neighbor search\nusing hierarchical navigable small world graphs. IEEE Transactions on Pattern Analysis and\nMachine Intelligence , 42:824\u2013836, 2016. URL https://arxiv.org/abs/1603.09320 .\n[38] Gary Marcus. The next decade in ai: four steps towards robust arti\ufb01cial intelligence. arXiv\npreprint arXiv:2002.06177 , 2020. URL https://arxiv.org/abs/2002.06177 .\n[39] Luca Massarelli, Fabio Petroni, Aleksandra Piktus, Myle Ott, Tim Rockt\u00e4schel, Vassilis\nPlachouras, Fabrizio Silvestri, and Sebastian Riedel. How decoding strategies affect the\nveri\ufb01ability of generated text. arXiv preprint arXiv:1911.03587 , 2019. URL https:\n//arxiv.org/ab",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_13_3",
    "filename": "pdf3.pdf",
    "page_number": 13,
    "text": "hel, Vassilis\nPlachouras, Fabrizio Silvestri, and Sebastian Riedel. How decoding strategies affect the\nveri\ufb01ability of generated text. arXiv preprint arXiv:1911.03587 , 2019. URL https:\n//arxiv.org/abs/1911.03587 .\n[40] Paulius Micikevicius, Sharan Narang, Jonah Alben, Gregory Diamos, Erich Elsen, David Garcia,\nBoris Ginsburg, Michael Houston, Oleksii Kuchaiev, Ganesh Venkatesh, and Hao Wu. Mixed\nprecision training. In ICLR , 2018. URL https://openreview.net/forum?id=r1gs9JgRZ .\n[41] Nikita Moghe, Siddhartha Arora, Suman Banerjee, and Mitesh M. Khapra. Towards exploit-\ning background knowledge for building conversation systems. In Proceedings of the 2018\nConference on Empirical Methods in Natural Language Processing , pages 2322\u20132332, Brus-\nsels, Belgium, October-November 2018. Association for Computational Linguistics. doi:\n10.18653/v1/D18-1255. URL https://www.aclweb.org/anthology/D18-1255 .\n[42] Preksha Nema and Mitesh M. Khapra. Towards a better metric for evaluating question gener",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_13_4",
    "filename": "pdf3.pdf",
    "page_number": 13,
    "text": " for Computational Linguistics. doi:\n10.18653/v1/D18-1255. URL https://www.aclweb.org/anthology/D18-1255 .\n[42] Preksha Nema and Mitesh M. Khapra. Towards a better metric for evaluating question generation\nsystems. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language\nProcessing , pages 3950\u20133959, Brussels, Belgium, October-November 2018. Association for\nComputational Linguistics. doi: 10.18653/v1/D18-1429. URL https://www.aclweb.org/\nanthology/D18-1429 .\n[43] Tri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao, Saurabh Tiwary, Rangan Majumder,\nand Li Deng. MS MARCO: A human generated machine reading comprehension dataset. In\nTarek Richard Besold, Antoine Bordes, Artur S. d\u2019Avila Garcez, and Greg Wayne, editors,\nProceedings of the Workshop on Cognitive Computation: Integrating neural and symbolic\n13",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_14_0",
    "filename": "pdf3.pdf",
    "page_number": 14,
    "text": "approaches 2016 co-located with the 30th Annual Conference on Neural Information Processing\nSystems (NIPS 2016), Barcelona, Spain, December 9, 2016 , volume 1773 of CEUR Workshop\nProceedings . CEUR-WS.org, 2016. URL http://ceur-ws.org/Vol-1773/CoCoNIPS_\n2016_paper9.pdf .\n[44] Rodrigo Nogueira and Kyunghyun Cho. Passage re-ranking with BERT. arXiv preprint\narXiv:1901.04085 , 2019. URL https://arxiv.org/abs/1901.04085 .\n[45] Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier,\nand Michael Auli. fairseq: A fast, extensible toolkit for sequence modeling. In Proceedings\nof the 2019 Conference of the North American Chapter of the Association for Computational\nLinguistics (Demonstrations) , pages 48\u201353, Minneapolis, Minnesota, June 2019. Association\nfor Computational Linguistics. doi: 10.18653/v1/N19-4009. URL https://www.aclweb.\norg/anthology/N19-4009 .\n[46] Ethan Perez, Siddharth Karamcheti, Rob Fergus, Jason Weston, Douwe Kiela, and Kyunghyun\nCho. Find",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_14_1",
    "filename": "pdf3.pdf",
    "page_number": 14,
    "text": "tational Linguistics. doi: 10.18653/v1/N19-4009. URL https://www.aclweb.\norg/anthology/N19-4009 .\n[46] Ethan Perez, Siddharth Karamcheti, Rob Fergus, Jason Weston, Douwe Kiela, and Kyunghyun\nCho. Finding generalizable evidence by learning to convince q&a models. In Proceedings\nof the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th\nInternational Joint Conference on Natural Language Processing (EMNLP-IJCNLP) , pages\n2402\u20132411, Hong Kong, China, November 2019. Association for Computational Linguistics.\ndoi: 10.18653/v1/D19-1244. URL https://www.aclweb.org/anthology/D19-1244 .\n[47] Fabio Petroni, Tim Rockt\u00e4schel, Sebastian Riedel, Patrick Lewis, Anton Bakhtin, Yuxiang Wu,\nand Alexander Miller. Language models as knowledge bases? In Proceedings of the 2019\nConference on Empirical Methods in Natural Language Processing and the 9th International\nJoint Conference on Natural Language Processing (EMNLP-IJCNLP) , pages 2463\u20132473, Hong\nKong, China, November 2019. As",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_14_2",
    "filename": "pdf3.pdf",
    "page_number": 14,
    "text": "ence on Empirical Methods in Natural Language Processing and the 9th International\nJoint Conference on Natural Language Processing (EMNLP-IJCNLP) , pages 2463\u20132473, Hong\nKong, China, November 2019. Association for Computational Linguistics. doi: 10.18653/v1/\nD19-1250. URL https://www.aclweb.org/anthology/D19-1250 .\n[48] Fabio Petroni, Patrick Lewis, Aleksandra Piktus, Tim Rockt\u00e4schel, Yuxiang Wu, Alexander H.\nMiller, and Sebastian Riedel. How context affects language models\u2019 factual predictions. In\nAutomated Knowledge Base Construction , 2020. URL https://openreview.net/forum?\nid=025X0zPfn .\n[49] Alec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. Im-\nproving Language Understanding by Generative Pre-Training, 2018. URL\nhttps://s3-us-west-2.amazonaws.com/openai-assets/research-covers/\nlanguage-unsupervised/language_understanding_paper.pdf .\n[50] Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, and Ilya\nSutskever. Language models are unsupervised multitask le",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_14_3",
    "filename": "pdf3.pdf",
    "page_number": 14,
    "text": "ch-covers/\nlanguage-unsupervised/language_understanding_paper.pdf .\n[50] Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, and Ilya\nSutskever. Language models are unsupervised multitask learners, 2019. URL\nhttps://d4mucfpksywv.cloudfront.net/better-language-models/language_\nmodels_are_unsupervised_multitask_learners.pdf .\n[51] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena,\nYanqi Zhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a uni\ufb01ed\ntext-to-text transformer. arXiv e-prints , 2019. URL https://arxiv.org/abs/1910.10683 .\n[52] Adam Roberts, Colin Raffel, and Noam Shazeer. How much knowledge can you pack into\nthe parameters of a language model? arXiv e-prints , 2020. URL https://arxiv.org/abs/\n2002.08910 .\n[53] Stephen Robertson and Hugo Zaragoza. The probabilistic relevance framework: Bm25 and\nbeyond. Found. Trends Inf. Retr. , 3(4):333\u2013389, April 2009. ISSN 1554-0669. doi: 10.1561/\n1500000019. URL https",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_14_4",
    "filename": "pdf3.pdf",
    "page_number": 14,
    "text": "3] Stephen Robertson and Hugo Zaragoza. The probabilistic relevance framework: Bm25 and\nbeyond. Found. Trends Inf. Retr. , 3(4):333\u2013389, April 2009. ISSN 1554-0669. doi: 10.1561/\n1500000019. URL https://doi.org/10.1561/1500000019 .\n[54] Irene Solaiman, Miles Brundage, Jack Clark, Amanda Askell, Ariel Herbert-V oss, Jeff Wu, Alec\nRadford, and Jian-Bing Wang. Release strategies and the social impacts of language models.\nArXiv , abs/1908.09203, 2019.\n[55] Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, and Rob Fergus. End-to-end memory net-\nworks. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances\nin Neural Information Processing Systems 28 , pages 2440\u20132448. Curran Associates, Inc., 2015.\nURL http://papers.nips.cc/paper/5846-end-to-end-memory-networks.pdf .\n14",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_15_0",
    "filename": "pdf3.pdf",
    "page_number": 15,
    "text": "[56] James Thorne, Andreas Vlachos, Christos Christodoulopoulos, and Arpit Mittal. FEVER: a\nlarge-scale dataset for fact extraction and VERi\ufb01cation. In Proceedings of the 2018 Conference\nof the North American Chapter of the Association for Computational Linguistics: Human\nLanguage Technologies, Volume 1 (Long Papers) , pages 809\u2013819, New Orleans, Louisiana,\nJune 2018. Association for Computational Linguistics. doi: 10.18653/v1/N18-1074. URL\nhttps://www.aclweb.org/anthology/N18-1074 .\n[57] James H. Thorne and Andreas Vlachos. Avoiding catastrophic forgetting in mitigating model\nbiases in sentence-pair classi\ufb01cation with elastic weight consolidation. ArXiv , abs/2004.14366,\n2020. URL https://arxiv.org/abs/2004.14366 .\n[58] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez,\n\u0141 ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In I. Guyon, U. V . Luxburg,\nS. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances in",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_15_1",
    "filename": "pdf3.pdf",
    "page_number": 15,
    "text": "es, Aidan N Gomez,\n\u0141 ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In I. Guyon, U. V . Luxburg,\nS. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances in Neural\nInformation Processing Systems 30 , pages 5998\u20136008. Curran Associates, Inc., 2017. URL\nhttp://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf .\n[59] Ashwin Vijayakumar, Michael Cogswell, Ramprasaath Selvaraju, Qing Sun, Stefan Lee, David\nCrandall, and Dhruv Batra. Diverse beam search for improved description of complex scenes.\nAAAI Conference on Arti\ufb01cial Intelligence , 2018. URL https://www.aaai.org/ocs/index.\nphp/AAAI/AAAI18/paper/view/17329 .\n[60] Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel Bowman.\nGLUE: A multi-task benchmark and analysis platform for natural language understanding.\nInProceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting\nNeural Networks for NLP , pages 353\u2013355, Brussels, Belgium, November 2018.",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_15_2",
    "filename": "pdf3.pdf",
    "page_number": 15,
    "text": "platform for natural language understanding.\nInProceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting\nNeural Networks for NLP , pages 353\u2013355, Brussels, Belgium, November 2018. Association for\nComputational Linguistics. doi: 10.18653/v1/W18-5446. URL https://www.aclweb.org/\nanthology/W18-5446 .\n[61] Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix\nHill, Omer Levy, and Samuel Bowman. SuperGLUE: A Stickier Benchmark for General-\nPurpose Language Understanding Systems. In H. Wallach, H. Larochelle, A. Beygelzimer,\nF. d\\textquotesingle Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information\nProcessing Systems 32 , pages 3261\u20133275. Curran Associates, Inc., 2019. URL https://\narxiv.org/abs/1905.00537 .\n[62] Shuohang Wang, Mo Yu, Xiaoxiao Guo, Zhiguo Wang, Tim Klinger, Wei Zhang, Shiyu Chang,\nGerry Tesauro, Bowen Zhou, and Jing Jiang. R3: Reinforced ranker-reader for open-domain\nquestion answering. In Sheila A. McI",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_15_3",
    "filename": "pdf3.pdf",
    "page_number": 15,
    "text": "ang, Mo Yu, Xiaoxiao Guo, Zhiguo Wang, Tim Klinger, Wei Zhang, Shiyu Chang,\nGerry Tesauro, Bowen Zhou, and Jing Jiang. R3: Reinforced ranker-reader for open-domain\nquestion answering. In Sheila A. McIlraith and Kilian Q. Weinberger, editors, Proceedings of\nthe Thirty-Second AAAI Conference on Arti\ufb01cial Intelligence, (AAAI-18), the 30th innovative\nApplications of Arti\ufb01cial Intelligence (IAAI-18), and the 8th AAAI Symposium on Educational\nAdvances in Arti\ufb01cial Intelligence (EAAI-18), New Orleans, Louisiana, USA, February 2-7,\n2018 , pages 5981\u20135988. AAAI Press, 2018. URL https://www.aaai.org/ocs/index.\nphp/AAAI/AAAI18/paper/view/16712 .\n[63] Shuohang Wang, Mo Yu, Jing Jiang, Wei Zhang, Xiaoxiao Guo, Shiyu Chang, Zhiguo Wang,\nTim Klinger, Gerald Tesauro, and Murray Campbell. Evidence aggregation for answer re-\nranking in open-domain question answering. In ICLR , 2018. URL https://openreview.\nnet/forum?id=rJl3yM-Ab .\n[64] Jason Weston, Sumit Chopra, and Antoine Bordes. Memory networks. In ",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_15_4",
    "filename": "pdf3.pdf",
    "page_number": 15,
    "text": "ion for answer re-\nranking in open-domain question answering. In ICLR , 2018. URL https://openreview.\nnet/forum?id=rJl3yM-Ab .\n[64] Jason Weston, Sumit Chopra, and Antoine Bordes. Memory networks. In Yoshua Bengio\nand Yann LeCun, editors, 3rd International Conference on Learning Representations, ICLR\n2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings , 2015. URL\nhttp://arxiv.org/abs/1410.3916 .\n[65] Jason Weston, Emily Dinan, and Alexander Miller. Retrieve and re\ufb01ne: Improved sequence\ngeneration models for dialogue. In Proceedings of the 2018 EMNLP Workshop SCAI: The 2nd\nInternational Workshop on Search-Oriented Conversational AI , pages 87\u201392, Brussels, Belgium,\nOctober 2018. Association for Computational Linguistics. doi: 10.18653/v1/W18-5713. URL\nhttps://www.aclweb.org/anthology/W18-5713 .\n15",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_16_0",
    "filename": "pdf3.pdf",
    "page_number": 16,
    "text": "[66] Thomas Wolf, Lysandre Debut, Victor Sanh, Julien Chaumond, Clement Delangue, Anthony\nMoi, Pierric Cistac, Tim Rault, R\u00e9mi Louf, Morgan Funtowicz, Joe Davison, Sam Shleifer,\nPatrick von Platen, Clara Ma, Yacine Jernite, Julien Plu, Canwen Xu, Teven Le Scao, Sylvain\nGugger, Mariama Drame, Quentin Lhoest, and Alexander M. Rush. Huggingface\u2019s transformers:\nState-of-the-art natural language processing. ArXiv , abs/1910.03771, 2019.\n[67] Shiyue Zhang and Mohit Bansal. Addressing semantic drift in question generation for semi-\nsupervised question answering. In Proceedings of the 2019 Conference on Empirical Meth-\nods in Natural Language Processing and the 9th International Joint Conference on Natural\nLanguage Processing (EMNLP-IJCNLP) , pages 2495\u20132509, Hong Kong, China, Novem-\nber 2019. Association for Computational Linguistics. doi: 10.18653/v1/D19-1253. URL\nhttps://www.aclweb.org/anthology/D19-1253 .\n[68] Wanjun Zhong, Jingjing Xu, Duyu Tang, Zenan Xu, Nan Duan, Ming Zhou, Jiahai Wang",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_16_1",
    "filename": "pdf3.pdf",
    "page_number": 16,
    "text": "ociation for Computational Linguistics. doi: 10.18653/v1/D19-1253. URL\nhttps://www.aclweb.org/anthology/D19-1253 .\n[68] Wanjun Zhong, Jingjing Xu, Duyu Tang, Zenan Xu, Nan Duan, Ming Zhou, Jiahai Wang, and\nJian Yin. Reasoning over semantic-level graph for fact checking. ArXiv , abs/1909.03745, 2019.\nURL https://arxiv.org/abs/1909.03745 .\n16",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_17_0",
    "filename": "pdf3.pdf",
    "page_number": 17,
    "text": "Appendices for Retrieval-Augmented Generation for\nKnowledge-Intensive NLP Tasks\nA Implementation Details\nFor Open-domain QA we report test numbers using 15 retrieved documents for RAG-Token models.\nFor RAG-Sequence models, we report test results using 50 retrieved documents, and we use the\nThorough Decoding approach since answers are generally short. We use greedy decoding for QA as\nwe did not \ufb01nd beam search improved results. For Open-MSMarco and Jeopardy question generation,\nwe report test numbers using ten retrieved documents for both RAG-Token and RAG-Sequence,\nand we also train a BART-large model as a baseline. We use a beam size of four, and use the Fast\nDecoding approach for RAG-Sequence models, as Thorough Decoding did not improve performance.\nB Human Evaluation\nFigure 4: Annotation interface for human evaluation of factuality. A pop-out for detailed instructions\nand a worked example appear when clicking \"view tool guide\".\nFigure 4 shows the user interface for human evaluation.",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_17_1",
    "filename": "pdf3.pdf",
    "page_number": 17,
    "text": "n interface for human evaluation of factuality. A pop-out for detailed instructions\nand a worked example appear when clicking \"view tool guide\".\nFigure 4 shows the user interface for human evaluation. To avoid any biases for screen position,\nwhich model corresponded to sentence A and sentence B was randomly selected for each example.\nAnnotators were encouraged to research the topic using the internet, and were given detailed instruc-\ntions and worked examples in a full instructions tab. We included some gold sentences in order to\nassess the accuracy of the annotators. Two annotators did not perform well on these examples and\ntheir annotations were removed from the results.\nC Training setup Details\nWe train all RAG models and BART baselines using Fairseq [ 45].2We train with mixed precision\n\ufb02oating point arithmetic [ 40], distributing training across 8, 32GB NVIDIA V100 GPUs, though\ntraining and inference can be run on one GPU. We \ufb01nd that doing Maximum Inner Product Search\nwith FAISS i",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_17_2",
    "filename": "pdf3.pdf",
    "page_number": 17,
    "text": "\n\ufb02oating point arithmetic [ 40], distributing training across 8, 32GB NVIDIA V100 GPUs, though\ntraining and inference can be run on one GPU. We \ufb01nd that doing Maximum Inner Product Search\nwith FAISS is suf\ufb01ciently fast on CPU, so we store document index vectors on CPU, requiring \u0018100\nGB of CPU memory for all of Wikipedia. After submission, We have ported our code to HuggingFace\nTransformers [ 66]3, which achieves equivalent performance to the previous version but is a cleaner\nand easier to use implementation. This version is also open-sourced. We also compress the document\nindex using FAISS\u2019s compression tools, reducing the CPU memory requirement to 36GB. Scripts to\nrun experiments with RAG can be found at https://github.com/huggingface/transformers/\nblob/master/examples/rag/README.md and an interactive demo of a RAG model can be found\nathttps://huggingface.co/rag/\n2https://github.com/pytorch/fairseq\n3https://github.com/huggingface/transformers\n17",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_18_0",
    "filename": "pdf3.pdf",
    "page_number": 18,
    "text": "D Further Details on Open-Domain QA\nFor open-domain QA, multiple answer annotations are often available for a given question. These\nanswer annotations are exploited by extractive models during training as typically all the answer\nannotations are used to \ufb01nd matches within documents when preparing training data. For RAG, we\nalso make use of multiple annotation examples for Natural Questions and WebQuestions by training\nthe model with each (q;a)pair separately, leading to a small increase in accuracy. For TriviaQA,\nthere are often many valid answers to a given question, some of which are not suitable training targets,\nsuch as emoji or spelling variants. For TriviaQA, we \ufb01lter out answer candidates if they do not occur\nin top 1000 documents for the query.\nCuratedTrec preprocessing The answers for CuratedTrec are given in the form of regular expres-\nsions, which has been suggested as a reason why it is unsuitable for answer-generation models [20].\nTo overcome this, we use a pre-processing ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_18_1",
    "filename": "pdf3.pdf",
    "page_number": 18,
    "text": " for CuratedTrec are given in the form of regular expres-\nsions, which has been suggested as a reason why it is unsuitable for answer-generation models [20].\nTo overcome this, we use a pre-processing step where we \ufb01rst retrieve the top 1000 documents for\neach query, and use the answer that most frequently matches the regex pattern as the supervision\ntarget. If no matches are found, we resort to a simple heuristic: generate all possible permutations for\neach regex, replacing non-deterministic symbols in the regex nested tree structure with a whitespace.\nTriviaQA Evaluation setups The open-domain QA community customarily uses public develop-\nment datasets as test datasets, as test data for QA datasets is often restricted and dedicated to reading\ncompehension purposes. We report our results using the datasets splits used in DPR [ 26], which are\nconsistent with common practice in Open-domain QA. For TriviaQA, this test dataset is the public\nTriviaQA Web Development split. Roberts et al. [5",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_18_2",
    "filename": "pdf3.pdf",
    "page_number": 18,
    "text": "sing the datasets splits used in DPR [ 26], which are\nconsistent with common practice in Open-domain QA. For TriviaQA, this test dataset is the public\nTriviaQA Web Development split. Roberts et al. [52] used the TriviaQA of\ufb01cial Wikipedia test set\ninstead. F\u00e9vry et al. [14] follow this convention in order to compare with Roberts et al. [52] (See\nappendix of [ 14]). We report results on both test sets to enable fair comparison to both approaches.\nWe \ufb01nd that our performance is much higher using the of\ufb01cial Wiki test set, rather than the more\nconventional open-domain test set, which we attribute to the of\ufb01cial Wiki test set questions being\nsimpler to answer from Wikipedia.\nE Further Details on FEVER\nFor FEVER classi\ufb01cation, we follow the practice from [ 32], and \ufb01rst re-generate the claim, and\nthen classify using the representation of the \ufb01nal hidden state, before \ufb01nally marginalizing across\ndocuments to obtain the class probabilities. The FEVER task traditionally has two sub-tasks. The\n",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf3.pdf_18_3",
    "filename": "pdf3.pdf",
    "page_number": 18,
    "text": "nd\nthen classify using the representation of the \ufb01nal hidden state, before \ufb01nally marginalizing across\ndocuments to obtain the class probabilities. The FEVER task traditionally has two sub-tasks. The\n\ufb01rst is to classify the claim as either \"Supported\", \"Refuted\" or \"Not Enough Info\", which is the task\nwe explore in the main paper. FEVER\u2019s other sub-task involves extracting sentences from Wikipedia\nas evidence supporting the classi\ufb01cation prediction. As FEVER uses a different Wikipedia dump to\nus, directly tackling this task is not straightforward. We hope to address this in future work.\nF Null Document Probabilities\nWe experimented with adding \"Null document\" mechanism to RAG, similar to REALM [ 20] in order\nto model cases where no useful information could be retrieved for a given input. Here, if kdocuments\nwere retrieved, we would additionally \"retrieve\" an empty document and predict a logit for the null\ndocument, before marginalizing over k+ 1predictions. We explored modelling this n",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf3.pdf_18_4",
    "filename": "pdf3.pdf",
    "page_number": 18,
    "text": "ere, if kdocuments\nwere retrieved, we would additionally \"retrieve\" an empty document and predict a logit for the null\ndocument, before marginalizing over k+ 1predictions. We explored modelling this null document\nlogit by learning (i) a document embedding for the null document, (ii) a static learnt bias term, or\n(iii) a neural network to predict the logit. We did not \ufb01nd that these improved performance, so in\nthe interests of simplicity, we omit them. For Open MS-MARCO, where useful retrieved documents\ncannot always be retrieved, we observe that the model learns to always retrieve a particular set of\ndocuments for questions that are less likely to bene\ufb01t from retrieval, suggesting that null document\nmechanisms may not be necessary for RAG.\nG Parameters\nOur RAG models contain the trainable parameters for the BERT-base query and document encoder of\nDPR, with 110M parameters each (although we do not train the document encoder ourselves) and\n406M trainable parameters from BART-large, 406M ",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf3.pdf_18_5",
    "filename": "pdf3.pdf",
    "page_number": 18,
    "text": "parameters for the BERT-base query and document encoder of\nDPR, with 110M parameters each (although we do not train the document encoder ourselves) and\n406M trainable parameters from BART-large, 406M parameters, making a total of 626M trainable\n18",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf3.pdf_19_0",
    "filename": "pdf3.pdf",
    "page_number": 19,
    "text": "Table 7: Number of instances in the datasets used. *A hidden subset of this data is used for evaluation\nTask Train Development Test\nNatural Questions 79169 8758 3611\nTriviaQA 78786 8838 11314\nWebQuestions 3418 362 2033\nCuratedTrec 635 134 635\nJeopardy Question Generation 97392 13714 26849\nMS-MARCO 153726 12468 101093*\nFEVER-3-way 145450 10000 10000\nFEVER-2-way 96966 6666 6666\nparameters. The best performing \"closed-book\" (parametric only) open-domain QA model is T5-11B\nwith 11 Billion trainable parameters. The T5 model with the closest number of parameters to our\nmodels is T5-large (770M parameters), which achieves a score of 28.9 EM on Natural Questions [ 52],\nsubstantially below the 44.5 that RAG-Sequence achieves, indicating that hybrid parametric/non-\nparametric models require far fewer trainable parameters for strong open-domain QA performance.\nThe non-parametric memory index does not consist of trainable parameters, but does consists of 21M\n728 dimensional vectors, consisting of ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf3.pdf_19_1",
    "filename": "pdf3.pdf",
    "page_number": 19,
    "text": "r trainable parameters for strong open-domain QA performance.\nThe non-parametric memory index does not consist of trainable parameters, but does consists of 21M\n728 dimensional vectors, consisting of 15.3B values. These can be easily be stored at 8-bit \ufb02oating\npoint precision to manage memory and disk footprints.\nH Retrieval Collapse\nIn preliminary experiments, we observed that for some tasks such as story generation [ 11], the\nretrieval component would \u201ccollapse\u201d and learn to retrieve the same documents regardless of the\ninput. In these cases, once retrieval had collapsed, the generator would learn to ignore the documents,\nand the RAG model would perform equivalently to BART. The collapse could be due to a less-explicit\nrequirement for factual knowledge in some tasks, or the longer target sequences, which could result\nin less informative gradients for the retriever. Perez et al. [46] also found spurious retrieval results\nwhen optimizing a retrieval component in order to improve perfor",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf3.pdf_19_2",
    "filename": "pdf3.pdf",
    "page_number": 19,
    "text": " sequences, which could result\nin less informative gradients for the retriever. Perez et al. [46] also found spurious retrieval results\nwhen optimizing a retrieval component in order to improve performance on downstream tasks.\nI Number of instances per dataset\nThe number of training, development and test datapoints in each of our datasets is shown in Table 7.\n19",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_1_0",
    "filename": "pdf2.pdf",
    "page_number": 1,
    "text": "Provided proper attribution is provided, Google hereby grants permission to\nreproduce the tables and figures in this paper solely for use in journalistic or\nscholarly works.\nAttention Is All You Need\nAshish Vaswani\u2217\nGoogle Brain\navaswani@google.comNoam Shazeer\u2217\nGoogle Brain\nnoam@google.comNiki Parmar\u2217\nGoogle Research\nnikip@google.comJakob Uszkoreit\u2217\nGoogle Research\nusz@google.com\nLlion Jones\u2217\nGoogle Research\nllion@google.comAidan N. Gomez\u2217 \u2020\nUniversity of Toronto\naidan@cs.toronto.edu\u0141ukasz Kaiser\u2217\nGoogle Brain\nlukaszkaiser@google.com\nIllia Polosukhin\u2217 \u2021\nillia.polosukhin@gmail.com\nAbstract\nThe dominant sequence transduction models are based on complex recurrent or\nconvolutional neural networks that include an encoder and a decoder. The best\nperforming models also connect the encoder and decoder through an attention\nmechanism. We propose a new simple network architecture, the Transformer,\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\nentirely. Experime",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_1_1",
    "filename": "pdf2.pdf",
    "page_number": 1,
    "text": "oder through an attention\nmechanism. We propose a new simple network architecture, the Transformer,\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\nentirely. Experiments on two machine translation tasks show these models to\nbe superior in quality while being more parallelizable and requiring significantly\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\nto-German translation task, improving over the existing best results, including\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\nbest models from the literature. We show that the Transformer generalizes well to\nother tasks by applying it successfully to English constituency parsing both with\nlarge and limited training data.\n\u2217Equal contribution. Listing order is random. Jakob proposed re",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_1_2",
    "filename": "pdf2.pdf",
    "page_number": 1,
    "text": "r generalizes well to\nother tasks by applying it successfully to English constituency parsing both with\nlarge and limited training data.\n\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\nattention and the parameter-free position representation and became the other person involved in nearly every\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving result",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_1_3",
    "filename": "pdf2.pdf",
    "page_number": 1,
    "text": "d\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\nour research.\n\u2020Work performed while at Google Brain.\n\u2021Work performed while at Google Research.\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_2_0",
    "filename": "pdf2.pdf",
    "page_number": 2,
    "text": "1 Introduction\nRecurrent neural networks, long short-term memory [ 13] and gated recurrent [ 7] neural networks\nin particular, have been firmly established as state of the art approaches in sequence modeling and\ntransduction problems such as language modeling and machine translation [ 35,2,5]. Numerous\nefforts have since continued to push the boundaries of recurrent language models and encoder-decoder\narchitectures [38, 24, 15].\nRecurrent models typically factor computation along the symbol positions of the input and output\nsequences. Aligning the positions to steps in computation time, they generate a sequence of hidden\nstates ht, as a function of the previous hidden state ht\u22121and the input for position t. This inherently\nsequential nature precludes parallelization within training examples, which becomes critical at longer\nsequence lengths, as memory constraints limit batching across examples. Recent work has achieved\nsignificant improvements in computational efficiency through factor",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_2_1",
    "filename": "pdf2.pdf",
    "page_number": 2,
    "text": "s, which becomes critical at longer\nsequence lengths, as memory constraints limit batching across examples. Recent work has achieved\nsignificant improvements in computational efficiency through factorization tricks [ 21] and conditional\ncomputation [ 32], while also improving model performance in case of the latter. The fundamental\nconstraint of sequential computation, however, remains.\nAttention mechanisms have become an integral part of compelling sequence modeling and transduc-\ntion models in various tasks, allowing modeling of dependencies without regard to their distance in\nthe input or output sequences [ 2,19]. In all but a few cases [ 27], however, such attention mechanisms\nare used in conjunction with a recurrent network.\nIn this work we propose the Transformer, a model architecture eschewing recurrence and instead\nrelying entirely on an attention mechanism to draw global dependencies between input and output.\nThe Transformer allows for significantly more parallelization and ca",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_2_2",
    "filename": "pdf2.pdf",
    "page_number": 2,
    "text": "e eschewing recurrence and instead\nrelying entirely on an attention mechanism to draw global dependencies between input and output.\nThe Transformer allows for significantly more parallelization and can reach a new state of the art in\ntranslation quality after being trained for as little as twelve hours on eight P100 GPUs.\n2 Background\nThe goal of reducing sequential computation also forms the foundation of the Extended Neural GPU\n[16], ByteNet [ 18] and ConvS2S [ 9], all of which use convolutional neural networks as basic building\nblock, computing hidden representations in parallel for all input and output positions. In these models,\nthe number of operations required to relate signals from two arbitrary input or output positions grows\nin the distance between positions, linearly for ConvS2S and logarithmically for ByteNet. This makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at t",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_2_3",
    "filename": "pdf2.pdf",
    "page_number": 2,
    "text": " and logarithmically for ByteNet. This makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence. Self-attention has been\nused successfully in a variety of tasks including reading comprehension, abstractive summarization,\ntextual entailment and learning task-independent sentence representations [4, 27, 28, 22].\nEnd-to-end memory networks are based on a recurrent attention mechanism instead of sequence-\naligned recurrence and have been shown to perform well on simple-language question answering and\nlanguage modeling tasks [34].\nTo the best of our k",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_2_4",
    "filename": "pdf2.pdf",
    "page_number": 2,
    "text": "a recurrent attention mechanism instead of sequence-\naligned recurrence and have been shown to perform well on simple-language question answering and\nlanguage modeling tasks [34].\nTo the best of our knowledge, however, the Transformer is the first transduction model relying\nentirely on self-attention to compute representations of its input and output without using sequence-\naligned RNNs or convolution. In the following sections, we will describe the Transformer, motivate\nself-attention and discuss its advantages over models such as [17, 18] and [9].\n3 Model Architecture\nMost competitive neural sequence transduction models have an encoder-decoder structure [ 5,2,35].\nHere, the encoder maps an input sequence of symbol representations (x1, ..., x n)to a sequence\nof continuous representations z= (z1, ..., z n). Given z, the decoder then generates an output\nsequence (y1, ..., y m)of symbols one element at a time. At each step the model is auto-regressive\n[10], consuming the previously gener",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf2.pdf_2_5",
    "filename": "pdf2.pdf",
    "page_number": 2,
    "text": "z= (z1, ..., z n). Given z, the decoder then generates an output\nsequence (y1, ..., y m)of symbols one element at a time. At each step the model is auto-regressive\n[10], consuming the previously generated symbols as additional input when generating the next.\n2",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf2.pdf_3_0",
    "filename": "pdf2.pdf",
    "page_number": 3,
    "text": "Figure 1: The Transformer - model architecture.\nThe Transformer follows this overall architecture using stacked self-attention and point-wise, fully\nconnected layers for both the encoder and decoder, shown in the left and right halves of Figure 1,\nrespectively.\n3.1 Encoder and Decoder Stacks\nEncoder: The encoder is composed of a stack of N= 6 identical layers. Each layer has two\nsub-layers. The first is a multi-head self-attention mechanism, and the second is a simple, position-\nwise fully connected feed-forward network. We employ a residual connection [ 11] around each of\nthe two sub-layers, followed by layer normalization [ 1]. That is, the output of each sub-layer is\nLayerNorm( x+ Sublayer( x)), where Sublayer( x)is the function implemented by the sub-layer\nitself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding\nlayers, produce outputs of dimension dmodel = 512 .\nDecoder: The decoder is also composed of a stack of N= 6identical layers.",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_3_1",
    "filename": "pdf2.pdf",
    "page_number": 3,
    "text": "esidual connections, all sub-layers in the model, as well as the embedding\nlayers, produce outputs of dimension dmodel = 512 .\nDecoder: The decoder is also composed of a stack of N= 6identical layers. In addition to the two\nsub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head\nattention over the output of the encoder stack. Similar to the encoder, we employ residual connections\naround each of the sub-layers, followed by layer normalization. We also modify the self-attention\nsub-layer in the decoder stack to prevent positions from attending to subsequent positions. This\nmasking, combined with fact that the output embeddings are offset by one position, ensures that the\npredictions for position ican depend only on the known outputs at positions less than i.\n3.2 Attention\nAn attention function can be described as mapping a query and a set of key-value pairs to an output,\nwhere the query, keys, values, and output are all vectors. The output is co",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_3_2",
    "filename": "pdf2.pdf",
    "page_number": 3,
    "text": "s than i.\n3.2 Attention\nAn attention function can be described as mapping a query and a set of key-value pairs to an output,\nwhere the query, keys, values, and output are all vectors. The output is computed as a weighted sum\n3",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_4_0",
    "filename": "pdf2.pdf",
    "page_number": 4,
    "text": "Scaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention \"Scaled Dot-Product Attention\" (Figure 2). The input consists of\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\nquery with all keys, divide each by\u221adk, and apply a softmax function to obtain the weights on the\nvalues.\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\nthe matrix of outputs as:\nAttention( Q, K, V ) = softmax(QKT\n\u221adk)V (1)\nThe two most commonly used attention functions are additive attention [ 2], and",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_4_1",
    "filename": "pdf2.pdf",
    "page_number": 4,
    "text": "o packed together into matrices KandV. We compute\nthe matrix of outputs as:\nAttention( Q, K, V ) = softmax(QKT\n\u221adk)V (1)\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\nof1\u221adk. Additive attention computes the compatibility function using a feed-forward network with\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\nmatrix multiplication code.\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\nextremely small gradients4. To counteract this ",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_4_2",
    "filename": "pdf2.pdf",
    "page_number": 4,
    "text": "alues of dk[3]. We suspect that for large values of\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\nextremely small gradients4. To counteract this effect, we scale the dot products by1\u221adk.\n3.2.2 Multi-Head Attention\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\nvariables with mean 0and variance 1. Then their dot product, q\u00b7k=Pdk\ni=1qiki, has mean 0and variance dk.\n4",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_5_0",
    "filename": "pdf2.pdf",
    "page_number": 5,
    "text": "output values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\nwhere head i= Attention( QWQ\ni, KWK\ni, V WV\ni)\nWhere the projections are parameter matrices WQ\ni\u2208Rdmodel\u00d7dk,WK\ni\u2208Rdmodel\u00d7dk,WV\ni\u2208Rdmodel\u00d7dv\nandWO\u2208Rhdv\u00d7dmodel.\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\nis similar to that of single-head attention with full dimensionality.\n3.2.3 Applications of Attention in our Model\nThe Transformer uses multi-head attention in three different ways:\n\u2022In \"encoder-decoder attention\" layers, the queries come from the previous decoder layer,\nand the memory keys and ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_5_1",
    "filename": "pdf2.pdf",
    "page_number": 5,
    "text": "ntion in our Model\nThe Transformer uses multi-head attention in three different ways:\n\u2022In \"encoder-decoder attention\" layers, the queries come from the previous decoder layer,\nand the memory keys and values come from the output of the encoder. This allows every\nposition in the decoder to attend over all positions in the input sequence. This mimics the\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\n[38, 2, 9].\n\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\nand queries come from the same place, in this case, the output of the previous layer in the\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\nencoder.\n\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\nall positions in the decoder up to and including that position. We need to prevent leftward\ninformation flow in the decoder to preserve the auto-regressive proper",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_5_2",
    "filename": "pdf2.pdf",
    "page_number": 5,
    "text": " position in the decoder to attend to\nall positions in the decoder up to and including that position. We need to prevent leftward\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\ninside of scaled dot-product attention by masking out (setting to \u2212\u221e) all values in the input\nof the softmax which correspond to illegal connections. See Figure 2.\n3.3 Position-wise Feed-Forward Networks\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\nconnected feed-forward network, which is applied to each position separately and identically. This\nconsists of two linear transformations with a ReLU activation in between.\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\nWhile the linear transformations are the same across different positions, they use different parameters\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\nThe dimensionality of input and output is dmodel = 512 , and the i",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_5_3",
    "filename": "pdf2.pdf",
    "page_number": 5,
    "text": "sitions, they use different parameters\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\ndff= 2048 .\n3.4 Embeddings and Softmax\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\u221admodel.\n5",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_6_0",
    "filename": "pdf2.pdf",
    "page_number": 6,
    "text": "Table 1: Maximum path lengths, per-layer complexity and minimum number of sequential operations\nfor different layer types. nis the sequence length, dis the representation dimension, kis the kernel\nsize of convolutions and rthe size of the neighborhood in restricted self-attention.\nLayer Type Complexity per Layer Sequential Maximum Path Length\nOperations\nSelf-Attention O(n2\u00b7d) O(1) O(1)\nRecurrent O(n\u00b7d2) O(n) O(n)\nConvolutional O(k\u00b7n\u00b7d2) O(1) O(logk(n))\nSelf-Attention (restricted) O(r\u00b7n\u00b7d) O(1) O(n/r)\n3.5 Positional Encoding\nSince our model contains no recurrence and no convolution, in order for the model to make use of the\norder of the sequence, we must inject some information about the relative or absolute position of the\ntokens in the sequence. To this end, we add \"positional encodings\" to the input embeddings at the\nbottoms of the encoder and decoder stacks. The positional encodings have the same dimension dmodel\nas the embeddings, so that the two can be summed. There are many choic",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_6_1",
    "filename": "pdf2.pdf",
    "page_number": 6,
    "text": "to the input embeddings at the\nbottoms of the encoder and decoder stacks. The positional encodings have the same dimension dmodel\nas the embeddings, so that the two can be summed. There are many choices of positional encodings,\nlearned and fixed [9].\nIn this work, we use sine and cosine functions of different frequencies:\nPE(pos,2i)=sin(pos/100002i/d model)\nPE(pos,2i+1)=cos(pos/100002i/d model)\nwhere posis the position and iis the dimension. That is, each dimension of the positional encoding\ncorresponds to a sinusoid. The wavelengths form a geometric progression from 2\u03c0to10000 \u00b72\u03c0. We\nchose this function because we hypothesized it would allow the model to easily learn to attend by\nrelative positions, since for any fixed offset k,PEpos+kcan be represented as a linear function of\nPEpos.\nWe also experimented with using learned positional embeddings [ 9] instead, and found that the two\nversions produced nearly identical results (see Table 3 row (E)). We chose the sinusoidal version\nbecause",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_6_2",
    "filename": "pdf2.pdf",
    "page_number": 6,
    "text": "lso experimented with using learned positional embeddings [ 9] instead, and found that the two\nversions produced nearly identical results (see Table 3 row (E)). We chose the sinusoidal version\nbecause it may allow the model to extrapolate to sequence lengths longer than the ones encountered\nduring training.\n4 Why Self-Attention\nIn this section we compare various aspects of self-attention layers to the recurrent and convolu-\ntional layers commonly used for mapping one variable-length sequence of symbol representations\n(x1, ..., x n)to another sequence of equal length (z1, ..., z n), with xi, zi\u2208Rd, such as a hidden\nlayer in a typical sequence transduction encoder or decoder. Motivating our use of self-attention we\nconsider three desiderata.\nOne is the total computational complexity per layer. Another is the amount of computation that can\nbe parallelized, as measured by the minimum number of sequential operations required.\nThe third is the path length between long-range dependencies in t",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_6_3",
    "filename": "pdf2.pdf",
    "page_number": 6,
    "text": "r. Another is the amount of computation that can\nbe parallelized, as measured by the minimum number of sequential operations required.\nThe third is the path length between long-range dependencies in the network. Learning long-range\ndependencies is a key challenge in many sequence transduction tasks. One key factor affecting the\nability to learn such dependencies is the length of the paths forward and backward signals have to\ntraverse in the network. The shorter these paths between any combination of positions in the input\nand output sequences, the easier it is to learn long-range dependencies [ 12]. Hence we also compare\nthe maximum path length between any two input and output positions in networks composed of the\ndifferent layer types.\nAs noted in Table 1, a self-attention layer connects all positions with a constant number of sequentially\nexecuted operations, whereas a recurrent layer requires O(n)sequential operations. In terms of\ncomputational complexity, self-attention layers are ",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_6_4",
    "filename": "pdf2.pdf",
    "page_number": 6,
    "text": "all positions with a constant number of sequentially\nexecuted operations, whereas a recurrent layer requires O(n)sequential operations. In terms of\ncomputational complexity, self-attention layers are faster than recurrent layers when the sequence\n6",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf2.pdf_7_0",
    "filename": "pdf2.pdf",
    "page_number": 7,
    "text": "length nis smaller than the representation dimensionality d, which is most often the case with\nsentence representations used by state-of-the-art models in machine translations, such as word-piece\n[38] and byte-pair [ 31] representations. To improve computational performance for tasks involving\nvery long sequences, self-attention could be restricted to considering only a neighborhood of size rin\nthe input sequence centered around the respective output position. This would increase the maximum\npath length to O(n/r). We plan to investigate this approach further in future work.\nA single convolutional layer with kernel width k < n does not connect all pairs of input and output\npositions. Doing so requires a stack of O(n/k)convolutional layers in the case of contiguous kernels,\norO(logk(n))in the case of dilated convolutions [ 18], increasing the length of the longest paths\nbetween any two positions in the network. Convolutional layers are generally more expensive than\nrecurrent layers, by a",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_7_1",
    "filename": "pdf2.pdf",
    "page_number": 7,
    "text": "e case of dilated convolutions [ 18], increasing the length of the longest paths\nbetween any two positions in the network. Convolutional layers are generally more expensive than\nrecurrent layers, by a factor of k. Separable convolutions [ 6], however, decrease the complexity\nconsiderably, to O(k\u00b7n\u00b7d+n\u00b7d2). Even with k=n, however, the complexity of a separable\nconvolution is equal to the combination of a self-attention layer and a point-wise feed-forward layer,\nthe approach we take in our model.\nAs side benefit, self-attention could yield more interpretable models. We inspect attention distributions\nfrom our models and present and discuss examples in the appendix. Not only do individual attention\nheads clearly learn to perform different tasks, many appear to exhibit behavior related to the syntactic\nand semantic structure of the sentences.\n5 Training\nThis section describes the training regime for our models.\n5.1 Training Data and Batching\nWe trained on the standard WMT 2014 English-Germ",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_7_2",
    "filename": "pdf2.pdf",
    "page_number": 7,
    "text": "syntactic\nand semantic structure of the sentences.\n5 Training\nThis section describes the training regime for our models.\n5.1 Training Data and Batching\nWe trained on the standard WMT 2014 English-German dataset consisting of about 4.5 million\nsentence pairs. Sentences were encoded using byte-pair encoding [ 3], which has a shared source-\ntarget vocabulary of about 37000 tokens. For English-French, we used the significantly larger WMT\n2014 English-French dataset consisting of 36M sentences and split tokens into a 32000 word-piece\nvocabulary [ 38]. Sentence pairs were batched together by approximate sequence length. Each training\nbatch contained a set of sentence pairs containing approximately 25000 source tokens and 25000\ntarget tokens.\n5.2 Hardware and Schedule\nWe trained our models on one machine with 8 NVIDIA P100 GPUs. For our base models using\nthe hyperparameters described throughout the paper, each training step took about 0.4 seconds. We\ntrained the base models for a total of 100",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_7_3",
    "filename": "pdf2.pdf",
    "page_number": 7,
    "text": " machine with 8 NVIDIA P100 GPUs. For our base models using\nthe hyperparameters described throughout the paper, each training step took about 0.4 seconds. We\ntrained the base models for a total of 100,000 steps or 12 hours. For our big models,(described on the\nbottom line of table 3), step time was 1.0 seconds. The big models were trained for 300,000 steps\n(3.5 days).\n5.3 Optimizer\nWe used the Adam optimizer [ 20] with \u03b21= 0.9,\u03b22= 0.98and\u03f5= 10\u22129. We varied the learning\nrate over the course of training, according to the formula:\nlrate =d\u22120.5\nmodel\u00b7min(step_num\u22120.5, step _num\u00b7warmup _steps\u22121.5) (3)\nThis corresponds to increasing the learning rate linearly for the first warmup _steps training steps,\nand decreasing it thereafter proportionally to the inverse square root of the step number. We used\nwarmup _steps = 4000 .\n5.4 Regularization\nWe employ three types of regularization during training:\n7",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_8_0",
    "filename": "pdf2.pdf",
    "page_number": 8,
    "text": "Table 2: The Transformer achieves better BLEU scores than previous state-of-the-art models on the\nEnglish-to-German and English-to-French newstest2014 tests at a fraction of the training cost.\nModelBLEU Training Cost (FLOPs)\nEN-DE EN-FR EN-DE EN-FR\nByteNet [18] 23.75\nDeep-Att + PosUnk [39] 39.2 1.0\u00b71020\nGNMT + RL [38] 24.6 39.92 2.3\u00b710191.4\u00b71020\nConvS2S [9] 25.16 40.46 9.6\u00b710181.5\u00b71020\nMoE [32] 26.03 40.56 2.0\u00b710191.2\u00b71020\nDeep-Att + PosUnk Ensemble [39] 40.4 8.0\u00b71020\nGNMT + RL Ensemble [38] 26.30 41.16 1.8\u00b710201.1\u00b71021\nConvS2S Ensemble [9] 26.36 41.29 7.7\u00b710191.2\u00b71021\nTransformer (base model) 27.3 38.1 3.3\u00b71018\nTransformer (big) 28.4 41.8 2.3\u00b71019\nResidual Dropout We apply dropout [ 33] to the output of each sub-layer, before it is added to the\nsub-layer input and normalized. In addition, we apply dropout to the sums of the embeddings and the\npositional encodings in both the encoder and decoder stacks. For the base model, we use a rate of\nPdrop= 0.1.\nLabel Smoothing During training, w",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_8_1",
    "filename": "pdf2.pdf",
    "page_number": 8,
    "text": " we apply dropout to the sums of the embeddings and the\npositional encodings in both the encoder and decoder stacks. For the base model, we use a rate of\nPdrop= 0.1.\nLabel Smoothing During training, we employed label smoothing of value \u03f5ls= 0.1[36]. This\nhurts perplexity, as the model learns to be more unsure, but improves accuracy and BLEU score.\n6 Results\n6.1 Machine Translation\nOn the WMT 2014 English-to-German translation task, the big transformer model (Transformer (big)\nin Table 2) outperforms the best previously reported models (including ensembles) by more than 2.0\nBLEU, establishing a new state-of-the-art BLEU score of 28.4. The configuration of this model is\nlisted in the bottom line of Table 3. Training took 3.5days on 8P100 GPUs. Even our base model\nsurpasses all previously published models and ensembles, at a fraction of the training cost of any of\nthe competitive models.\nOn the WMT 2014 English-to-French translation task, our big model achieves a BLEU score of 41.0,\noutpe",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_8_2",
    "filename": "pdf2.pdf",
    "page_number": 8,
    "text": "lished models and ensembles, at a fraction of the training cost of any of\nthe competitive models.\nOn the WMT 2014 English-to-French translation task, our big model achieves a BLEU score of 41.0,\noutperforming all of the previously published single models, at less than 1/4the training cost of the\nprevious state-of-the-art model. The Transformer (big) model trained for English-to-French used\ndropout rate Pdrop= 0.1, instead of 0.3.\nFor the base models, we used a single model obtained by averaging the last 5 checkpoints, which\nwere written at 10-minute intervals. For the big models, we averaged the last 20 checkpoints. We\nused beam search with a beam size of 4and length penalty \u03b1= 0.6[38]. These hyperparameters\nwere chosen after experimentation on the development set. We set the maximum output length during\ninference to input length + 50, but terminate early when possible [38].\nTable 2 summarizes our results and compares our translation quality and training costs to other model\narchitectu",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_8_3",
    "filename": "pdf2.pdf",
    "page_number": 8,
    "text": "t length during\ninference to input length + 50, but terminate early when possible [38].\nTable 2 summarizes our results and compares our translation quality and training costs to other model\narchitectures from the literature. We estimate the number of floating point operations used to train a\nmodel by multiplying the training time, the number of GPUs used, and an estimate of the sustained\nsingle-precision floating-point capacity of each GPU5.\n6.2 Model Variations\nTo evaluate the importance of different components of the Transformer, we varied our base model\nin different ways, measuring the change in performance on English-to-German translation on the\n5We used values of 2.8, 3.7, 6.0 and 9.5 TFLOPS for K80, K40, M40 and P100, respectively.\n8",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_9_0",
    "filename": "pdf2.pdf",
    "page_number": 9,
    "text": "Table 3: Variations on the Transformer architecture. Unlisted values are identical to those of the base\nmodel. All metrics are on the English-to-German translation development set, newstest2013. Listed\nperplexities are per-wordpiece, according to our byte-pair encoding, and should not be compared to\nper-word perplexities.\nN d model dff h d k dvPdrop \u03f5lstrain PPL BLEU params\nsteps (dev) (dev) \u00d7106\nbase 6 512 2048 8 64 64 0.1 0.1 100K 4.92 25.8 65\n(A)1 512 512 5.29 24.9\n4 128 128 5.00 25.5\n16 32 32 4.91 25.8\n32 16 16 5.01 25.4\n(B)16 5.16 25.1 58\n32 5.01 25.4 60\n(C)2 6.11 23.7 36\n4 5.19 25.3 50\n8 4.88 25.5 80\n256 32 32 5.75 24.5 28\n1024 128 128 4.66 26.0 168\n1024 5.12 25.4 53\n4096 4.75 26.2 90\n(D)0.0 5.77 24.6\n0.2 4.95 25.5\n0.0 4.67 25.3\n0.2 5.47 25.7\n(E) positional embedding instead of sinusoids 4.92 25.7\nbig 6 1024 4096 16 0.3 300K 4.33 26.4 213\ndevelopment set, newstest2013. We used beam search as described in the previous section, but no\ncheckpoint averaging. We present these results ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_9_1",
    "filename": "pdf2.pdf",
    "page_number": 9,
    "text": "oids 4.92 25.7\nbig 6 1024 4096 16 0.3 300K 4.33 26.4 213\ndevelopment set, newstest2013. We used beam search as described in the previous section, but no\ncheckpoint averaging. We present these results in Table 3.\nIn Table 3 rows (A), we vary the number of attention heads and the attention key and value dimensions,\nkeeping the amount of computation constant, as described in Section 3.2.2. While single-head\nattention is 0.9 BLEU worse than the best setting, quality also drops off with too many heads.\nIn Table 3 rows (B), we observe that reducing the attention key size dkhurts model quality. This\nsuggests that determining compatibility is not easy and that a more sophisticated compatibility\nfunction than dot product may be beneficial. We further observe in rows (C) and (D) that, as expected,\nbigger models are better, and dropout is very helpful in avoiding over-fitting. In row (E) we replace our\nsinusoidal positional encoding with learned positional embeddings [ 9], and observe nearly iden",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_9_2",
    "filename": "pdf2.pdf",
    "page_number": 9,
    "text": "igger models are better, and dropout is very helpful in avoiding over-fitting. In row (E) we replace our\nsinusoidal positional encoding with learned positional embeddings [ 9], and observe nearly identical\nresults to the base model.\n6.3 English Constituency Parsing\nTo evaluate if the Transformer can generalize to other tasks we performed experiments on English\nconstituency parsing. This task presents specific challenges: the output is subject to strong structural\nconstraints and is significantly longer than the input. Furthermore, RNN sequence-to-sequence\nmodels have not been able to attain state-of-the-art results in small-data regimes [37].\nWe trained a 4-layer transformer with dmodel = 1024 on the Wall Street Journal (WSJ) portion of the\nPenn Treebank [ 25], about 40K training sentences. We also trained it in a semi-supervised setting,\nusing the larger high-confidence and BerkleyParser corpora from with approximately 17M sentences\n[37]. We used a vocabulary of 16K tokens for the WSJ",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_9_3",
    "filename": "pdf2.pdf",
    "page_number": 9,
    "text": ". We also trained it in a semi-supervised setting,\nusing the larger high-confidence and BerkleyParser corpora from with approximately 17M sentences\n[37]. We used a vocabulary of 16K tokens for the WSJ only setting and a vocabulary of 32K tokens\nfor the semi-supervised setting.\nWe performed only a small number of experiments to select the dropout, both attention and residual\n(section 5.4), learning rates and beam size on the Section 22 development set, all other parameters\nremained unchanged from the English-to-German base translation model. During inference, we\n9",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_10_0",
    "filename": "pdf2.pdf",
    "page_number": 10,
    "text": "Table 4: The Transformer generalizes well to English constituency parsing (Results are on Section 23\nof WSJ)\nParser Training WSJ 23 F1\nVinyals & Kaiser el al. (2014) [37] WSJ only, discriminative 88.3\nPetrov et al. (2006) [29] WSJ only, discriminative 90.4\nZhu et al. (2013) [40] WSJ only, discriminative 90.4\nDyer et al. (2016) [8] WSJ only, discriminative 91.7\nTransformer (4 layers) WSJ only, discriminative 91.3\nZhu et al. (2013) [40] semi-supervised 91.3\nHuang & Harper (2009) [14] semi-supervised 91.3\nMcClosky et al. (2006) [26] semi-supervised 92.1\nVinyals & Kaiser el al. (2014) [37] semi-supervised 92.1\nTransformer (4 layers) semi-supervised 92.7\nLuong et al. (2015) [23] multi-task 93.0\nDyer et al. (2016) [8] generative 93.3\nincreased the maximum output length to input length + 300. We used a beam size of 21and\u03b1= 0.3\nfor both WSJ only and the semi-supervised setting.\nOur results in Table 4 show that despite the lack of task-specific tuning our model performs sur-\nprisingly well, yie",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_10_1",
    "filename": "pdf2.pdf",
    "page_number": 10,
    "text": "used a beam size of 21and\u03b1= 0.3\nfor both WSJ only and the semi-supervised setting.\nOur results in Table 4 show that despite the lack of task-specific tuning our model performs sur-\nprisingly well, yielding better results than all previously reported models with the exception of the\nRecurrent Neural Network Grammar [8].\nIn contrast to RNN sequence-to-sequence models [ 37], the Transformer outperforms the Berkeley-\nParser [29] even when training only on the WSJ training set of 40K sentences.\n7 Conclusion\nIn this work, we presented the Transformer, the first sequence transduction model based entirely on\nattention, replacing the recurrent layers most commonly used in encoder-decoder architectures with\nmulti-headed self-attention.\nFor translation tasks, the Transformer can be trained significantly faster than architectures based\non recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014\nEnglish-to-French translation tasks, we achieve a new state of the art. In the",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_10_2",
    "filename": "pdf2.pdf",
    "page_number": 10,
    "text": "tly faster than architectures based\non recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014\nEnglish-to-French translation tasks, we achieve a new state of the art. In the former task our best\nmodel outperforms even all previously reported ensembles.\nWe are excited about the future of attention-based models and plan to apply them to other tasks. We\nplan to extend the Transformer to problems involving input and output modalities other than text and\nto investigate local, restricted attention mechanisms to efficiently handle large inputs and outputs\nsuch as images, audio and video. Making generation less sequential is another research goals of ours.\nThe code we used to train and evaluate our models is available at https://github.com/\ntensorflow/tensor2tensor .\nAcknowledgements We are grateful to Nal Kalchbrenner and Stephan Gouws for their fruitful\ncomments, corrections and inspiration.\nReferences\n[1]Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_10_3",
    "filename": "pdf2.pdf",
    "page_number": 10,
    "text": "nowledgements We are grateful to Nal Kalchbrenner and Stephan Gouws for their fruitful\ncomments, corrections and inspiration.\nReferences\n[1]Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer normalization. arXiv preprint\narXiv:1607.06450 , 2016.\n[2]Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly\nlearning to align and translate. CoRR , abs/1409.0473, 2014.\n[3]Denny Britz, Anna Goldie, Minh-Thang Luong, and Quoc V . Le. Massive exploration of neural\nmachine translation architectures. CoRR , abs/1703.03906, 2017.\n[4]Jianpeng Cheng, Li Dong, and Mirella Lapata. Long short-term memory-networks for machine\nreading. arXiv preprint arXiv:1601.06733 , 2016.\n10",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_11_0",
    "filename": "pdf2.pdf",
    "page_number": 11,
    "text": "[5]Kyunghyun Cho, Bart van Merrienboer, Caglar Gulcehre, Fethi Bougares, Holger Schwenk,\nand Yoshua Bengio. Learning phrase representations using rnn encoder-decoder for statistical\nmachine translation. CoRR , abs/1406.1078, 2014.\n[6]Francois Chollet. Xception: Deep learning with depthwise separable convolutions. arXiv\npreprint arXiv:1610.02357 , 2016.\n[7]Junyoung Chung, \u00c7aglar G\u00fcl\u00e7ehre, Kyunghyun Cho, and Yoshua Bengio. Empirical evaluation\nof gated recurrent neural networks on sequence modeling. CoRR , abs/1412.3555, 2014.\n[8]Chris Dyer, Adhiguna Kuncoro, Miguel Ballesteros, and Noah A. Smith. Recurrent neural\nnetwork grammars. In Proc. of NAACL , 2016.\n[9]Jonas Gehring, Michael Auli, David Grangier, Denis Yarats, and Yann N. Dauphin. Convolu-\ntional sequence to sequence learning. arXiv preprint arXiv:1705.03122v2 , 2017.\n[10] Alex Graves. Generating sequences with recurrent neural networks. arXiv preprint\narXiv:1308.0850 , 2013.\n[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_11_1",
    "filename": "pdf2.pdf",
    "page_number": 11,
    "text": "preprint arXiv:1705.03122v2 , 2017.\n[10] Alex Graves. Generating sequences with recurrent neural networks. arXiv preprint\narXiv:1308.0850 , 2013.\n[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for im-\nage recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern\nRecognition , pages 770\u2013778, 2016.\n[12] Sepp Hochreiter, Yoshua Bengio, Paolo Frasconi, and J\u00fcrgen Schmidhuber. Gradient flow in\nrecurrent nets: the difficulty of learning long-term dependencies, 2001.\n[13] Sepp Hochreiter and J\u00fcrgen Schmidhuber. Long short-term memory. Neural computation ,\n9(8):1735\u20131780, 1997.\n[14] Zhongqiang Huang and Mary Harper. Self-training PCFG grammars with latent annotations\nacross languages. In Proceedings of the 2009 Conference on Empirical Methods in Natural\nLanguage Processing , pages 832\u2013841. ACL, August 2009.\n[15] Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring\nthe limits of language modeling. arX",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_11_2",
    "filename": "pdf2.pdf",
    "page_number": 11,
    "text": "hods in Natural\nLanguage Processing , pages 832\u2013841. ACL, August 2009.\n[15] Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring\nthe limits of language modeling. arXiv preprint arXiv:1602.02410 , 2016.\n[16] \u0141ukasz Kaiser and Samy Bengio. Can active memory replace attention? In Advances in Neural\nInformation Processing Systems, (NIPS) , 2016.\n[17] \u0141ukasz Kaiser and Ilya Sutskever. Neural GPUs learn algorithms. In International Conference\non Learning Representations (ICLR) , 2016.\n[18] Nal Kalchbrenner, Lasse Espeholt, Karen Simonyan, Aaron van den Oord, Alex Graves, and Ko-\nray Kavukcuoglu. Neural machine translation in linear time. arXiv preprint arXiv:1610.10099v2 ,\n2017.\n[19] Yoon Kim, Carl Denton, Luong Hoang, and Alexander M. Rush. Structured attention networks.\nInInternational Conference on Learning Representations , 2017.\n[20] Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR , 2015.\n[21] Oleksii Kuchaiev and Bori",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_11_3",
    "filename": "pdf2.pdf",
    "page_number": 11,
    "text": "n networks.\nInInternational Conference on Learning Representations , 2017.\n[20] Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR , 2015.\n[21] Oleksii Kuchaiev and Boris Ginsburg. Factorization tricks for LSTM networks. arXiv preprint\narXiv:1703.10722 , 2017.\n[22] Zhouhan Lin, Minwei Feng, Cicero Nogueira dos Santos, Mo Yu, Bing Xiang, Bowen\nZhou, and Yoshua Bengio. A structured self-attentive sentence embedding. arXiv preprint\narXiv:1703.03130 , 2017.\n[23] Minh-Thang Luong, Quoc V . Le, Ilya Sutskever, Oriol Vinyals, and Lukasz Kaiser. Multi-task\nsequence to sequence learning. arXiv preprint arXiv:1511.06114 , 2015.\n[24] Minh-Thang Luong, Hieu Pham, and Christopher D Manning. Effective approaches to attention-\nbased neural machine translation. arXiv preprint arXiv:1508.04025 , 2015.\n11",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_12_0",
    "filename": "pdf2.pdf",
    "page_number": 12,
    "text": "[25] Mitchell P Marcus, Mary Ann Marcinkiewicz, and Beatrice Santorini. Building a large annotated\ncorpus of english: The penn treebank. Computational linguistics , 19(2):313\u2013330, 1993.\n[26] David McClosky, Eugene Charniak, and Mark Johnson. Effective self-training for parsing. In\nProceedings of the Human Language Technology Conference of the NAACL, Main Conference ,\npages 152\u2013159. ACL, June 2006.\n[27] Ankur Parikh, Oscar T\u00e4ckstr\u00f6m, Dipanjan Das, and Jakob Uszkoreit. A decomposable attention\nmodel. In Empirical Methods in Natural Language Processing , 2016.\n[28] Romain Paulus, Caiming Xiong, and Richard Socher. A deep reinforced model for abstractive\nsummarization. arXiv preprint arXiv:1705.04304 , 2017.\n[29] Slav Petrov, Leon Barrett, Romain Thibaux, and Dan Klein. Learning accurate, compact,\nand interpretable tree annotation. In Proceedings of the 21st International Conference on\nComputational Linguistics and 44th Annual Meeting of the ACL , pages 433\u2013440. ACL, July\n2006.\n[30] Ofir P",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_12_1",
    "filename": "pdf2.pdf",
    "page_number": 12,
    "text": "act,\nand interpretable tree annotation. In Proceedings of the 21st International Conference on\nComputational Linguistics and 44th Annual Meeting of the ACL , pages 433\u2013440. ACL, July\n2006.\n[30] Ofir Press and Lior Wolf. Using the output embedding to improve language models. arXiv\npreprint arXiv:1608.05859 , 2016.\n[31] Rico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare words\nwith subword units. arXiv preprint arXiv:1508.07909 , 2015.\n[32] Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton,\nand Jeff Dean. Outrageously large neural networks: The sparsely-gated mixture-of-experts\nlayer. arXiv preprint arXiv:1701.06538 , 2017.\n[33] Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdi-\nnov. Dropout: a simple way to prevent neural networks from overfitting. Journal of Machine\nLearning Research , 15(1):1929\u20131958, 2014.\n[34] Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, and Rob Fe",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf2.pdf_12_2",
    "filename": "pdf2.pdf",
    "page_number": 12,
    "text": "\nnov. Dropout: a simple way to prevent neural networks from overfitting. Journal of Machine\nLearning Research , 15(1):1929\u20131958, 2014.\n[34] Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, and Rob Fergus. End-to-end memory\nnetworks. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors,\nAdvances in Neural Information Processing Systems 28 , pages 2440\u20132448. Curran Associates,\nInc., 2015.\n[35] Ilya Sutskever, Oriol Vinyals, and Quoc VV Le. Sequence to sequence learning with neural\nnetworks. In Advances in Neural Information Processing Systems , pages 3104\u20133112, 2014.\n[36] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, and Zbigniew Wojna.\nRethinking the inception architecture for computer vision. CoRR , abs/1512.00567, 2015.\n[37] Vinyals & Kaiser, Koo, Petrov, Sutskever, and Hinton. Grammar as a foreign language. In\nAdvances in Neural Information Processing Systems , 2015.\n[38] Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V Le, Mohammad Nor",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf2.pdf_12_3",
    "filename": "pdf2.pdf",
    "page_number": 12,
    "text": "r, Koo, Petrov, Sutskever, and Hinton. Grammar as a foreign language. In\nAdvances in Neural Information Processing Systems , 2015.\n[38] Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V Le, Mohammad Norouzi, Wolfgang\nMacherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, et al. Google\u2019s neural machine\ntranslation system: Bridging the gap between human and machine translation. arXiv preprint\narXiv:1609.08144 , 2016.\n[39] Jie Zhou, Ying Cao, Xuguang Wang, Peng Li, and Wei Xu. Deep recurrent models with\nfast-forward connections for neural machine translation. CoRR , abs/1606.04199, 2016.\n[40] Muhua Zhu, Yue Zhang, Wenliang Chen, Min Zhang, and Jingbo Zhu. Fast and accurate\nshift-reduce constituent parsing. In Proceedings of the 51st Annual Meeting of the ACL (Volume\n1: Long Papers) , pages 434\u2013443. ACL, August 2013.\n12",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf2.pdf_13_0",
    "filename": "pdf2.pdf",
    "page_number": 13,
    "text": "Attention Visualizations\nInput-Input Layer5\nIt\nis\nin\nthis\nspirit\nthat\na\nmajority\nof\nAmerican\ngovernments\nhave\npassed\nnew\nlaws\nsince\n2009\nmaking\nthe\nregistration\nor\nvoting\nprocess\nmore\ndifficult\n.\n<EOS>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\nIt\nis\nin\nthis\nspirit\nthat\na\nmajority\nof\nAmerican\ngovernments\nhave\npassed\nnew\nlaws\nsince\n2009\nmaking\nthe\nregistration\nor\nvoting\nprocess\nmore\ndifficult\n.\n<EOS>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\nthe verb \u2018making\u2019, completing the phrase \u2018making...more difficult\u2019. Attentions here shown only for\nthe word \u2018making\u2019. Different colors represent different heads. Best viewed in color.\n13",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_14_0",
    "filename": "pdf2.pdf",
    "page_number": 14,
    "text": "Input-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nInput-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>Figure 4: Two attention heads, also in layer 5 of 6, apparently involved in anaphora resolution. Top:\nFull attentions for head 5. Bottom: Isolated attentions from just the word \u2018its\u2019 for attention heads 5\nand 6. Note that the attentions are very sharp for this word.\n14",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf2.pdf_15_0",
    "filename": "pdf2.pdf",
    "page_number": 15,
    "text": "Input-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nInput-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>Figure 5: Many of the attention heads exhibit behaviour that seems related to the structure of the\nsentence. We give two such examples above, from two different heads from the encoder self-attention\nat layer 5 of 6. The heads clearly learned to perform different tasks.\n15",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_1_0",
    "filename": "pdf1.pdf",
    "page_number": 1,
    "text": "LLaMA: Open and Ef\ufb01cient Foundation Language Models\nHugo Touvron\u0003, Thibaut Lavril\u0003, Gautier Izacard\u0003, Xavier Martinet\nMarie-Anne Lachaux, Timothee Lacroix, Baptiste Rozi\u00e8re, Naman Goyal\nEric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin\nEdouard Grave\u0003, Guillaume Lample\u0003\nMeta AI\nAbstract\nWe introduce LLaMA, a collection of founda-\ntion language models ranging from 7B to 65B\nparameters. We train our models on trillions\nof tokens, and show that it is possible to train\nstate-of-the-art models using publicly avail-\nable datasets exclusively, without resorting\nto proprietary and inaccessible datasets. In\nparticular, LLaMA-13B outperforms GPT-3\n(175B) on most benchmarks, and LLaMA-\n65B is competitive with the best models,\nChinchilla-70B and PaLM-540B. We release\nall our models to the research community1.\n1 Introduction\nLarge Languages Models (LLMs) trained on mas-\nsive corpora of texts have shown their ability to per-\nform new tasks from textual instructions or from a\nfew examples (",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_1_1",
    "filename": "pdf1.pdf",
    "page_number": 1,
    "text": "search community1.\n1 Introduction\nLarge Languages Models (LLMs) trained on mas-\nsive corpora of texts have shown their ability to per-\nform new tasks from textual instructions or from a\nfew examples (Brown et al., 2020). These few-shot\nproperties \ufb01rst appeared when scaling models to a\nsuf\ufb01cient size (Kaplan et al., 2020), resulting in a\nline of work that focuses on further scaling these\nmodels (Chowdhery et al., 2022; Rae et al., 2021).\nThese efforts are based on the assumption that\nmore parameters will lead to better performance.\nHowever, recent work from Hoffmann et al. (2022)\nshows that, for a given compute budget, the best\nperformances are not achieved by the largest mod-\nels, but by smaller models trained on more data.\nThe objective of the scaling laws from Hoff-\nmann et al. (2022) is to determine how to best\nscale the dataset and model sizes for a particular\ntraining compute budget. However, this objective\ndisregards the inference budget, which becomes\ncritical when serving a lan",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_1_2",
    "filename": "pdf1.pdf",
    "page_number": 1,
    "text": " to determine how to best\nscale the dataset and model sizes for a particular\ntraining compute budget. However, this objective\ndisregards the inference budget, which becomes\ncritical when serving a language model at scale.\nIn this context, given a target level of performance,\nthe preferred model is not the fastest to train but the\nfastest at inference, and although it may be cheaper\nto train a large model to reach a certain level of\n\u0003Equal contribution. Correspondence: {htouvron,\nthibautlav,gizacard,egrave,glample}@meta.com\n1https://github.com/facebookresearch/llamaperformance, a smaller one trained longer will\nultimately be cheaper at inference. For instance,\nalthough Hoffmann et al. (2022) recommends\ntraining a 10B model on 200B tokens, we \ufb01nd\nthat the performance of a 7B model continues to\nimprove even after 1T tokens.\nThe focus of this work is to train a series of\nlanguage models that achieve the best possible per-\nformance at various inference budgets, by training\non more tokens th",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_1_3",
    "filename": "pdf1.pdf",
    "page_number": 1,
    "text": "to\nimprove even after 1T tokens.\nThe focus of this work is to train a series of\nlanguage models that achieve the best possible per-\nformance at various inference budgets, by training\non more tokens than what is typically used. The\nresulting models, called LLaMA , ranges from 7B\nto 65B parameters with competitive performance\ncompared to the best existing LLMs. For instance,\nLLaMA-13B outperforms GPT-3 on most bench-\nmarks, despite being 10 \u0002smaller. We believe that\nthis model will help democratize the access and\nstudy of LLMs, since it can be run on a single GPU.\nAt the higher-end of the scale, our 65B-parameter\nmodel is also competitive with the best large lan-\nguage models such as Chinchilla or PaLM-540B.\nUnlike Chinchilla, PaLM, or GPT-3, we only\nuse publicly available data, making our work com-\npatible with open-sourcing, while most existing\nmodels rely on data which is either not publicly\navailable or undocumented (e.g. \u201cBooks \u2013 2TB\u201d or\n\u201cSocial media conversations\u201d). There exist so",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_1_4",
    "filename": "pdf1.pdf",
    "page_number": 1,
    "text": "ork com-\npatible with open-sourcing, while most existing\nmodels rely on data which is either not publicly\navailable or undocumented (e.g. \u201cBooks \u2013 2TB\u201d or\n\u201cSocial media conversations\u201d). There exist some\nexceptions, notably OPT (Zhang et al., 2022),\nGPT-NeoX (Black et al., 2022), BLOOM (Scao\net al., 2022) and GLM (Zeng et al., 2022), but none\nthat are competitive with PaLM-62B or Chinchilla.\nIn the rest of this paper, we present an overview\nof the modi\ufb01cations we made to the transformer\narchitecture (Vaswani et al., 2017), as well as our\ntraining method. We then report the performance of\nour models and compare with others LLMs on a set\nof standard benchmarks. Finally, we expose some\nof the biases and toxicity encoded in our models,\nusing some of the most recent benchmarks from\nthe responsible AI community.arXiv:2302.13971v1  [cs.CL]  27 Feb 2023",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_2_0",
    "filename": "pdf1.pdf",
    "page_number": 2,
    "text": "2 Approach\nOur training approach is similar to the methods\ndescribed in previous work (Brown et al., 2020;\nChowdhery et al., 2022), and is inspired by the\nChinchilla scaling laws (Hoffmann et al., 2022).\nWe train large transformers on a large quantity of\ntextual data using a standard optimizer.\n2.1 Pre-training Data\nOur training dataset is a mixture of several sources,\nreported in Table 1, that cover a diverse set of do-\nmains. For the most part, we reuse data sources\nthat have been leveraged to train other LLMs, with\nthe restriction of only using data that is publicly\navailable, and compatible with open sourcing. This\nleads to the following mixture of data and the per-\ncentage they represent in the training set:\nEnglish CommonCrawl [67%]. We preprocess\n\ufb01ve CommonCrawl dumps, ranging from 2017\nto 2020, with the CCNet pipeline (Wenzek et al.,\n2020). This process deduplicates the data at the\nline level, performs language identi\ufb01cation with\na fastText linear classi\ufb01er to remove non-Englis",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_2_1",
    "filename": "pdf1.pdf",
    "page_number": 2,
    "text": "2017\nto 2020, with the CCNet pipeline (Wenzek et al.,\n2020). This process deduplicates the data at the\nline level, performs language identi\ufb01cation with\na fastText linear classi\ufb01er to remove non-English\npages and \ufb01lters low quality content with an n-\ngram language model. In addition, we trained a\nlinear model to classify pages used as references\nin Wikipedia v.s.randomly sampled pages, and\ndiscarded pages not classi\ufb01ed as references.\nC4 [15%]. During exploratory experiments, we\nobserved that using diverse pre-processed Com-\nmonCrawl datasets improves performance. We thus\nincluded the publicly available C4 dataset (Raffel\net al., 2020) in our data. The preprocessing of C4\nalso contains deduplication and language identi\ufb01-\ncation steps: the main difference with CCNet is\nthe quality \ufb01ltering, which mostly relies on heuris-\ntics such as presence of punctuation marks or the\nnumber of words and sentences in a webpage.\nGithub [4.5%]. We use the public GitHub\ndataset available on Google BigQuery",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_2_2",
    "filename": "pdf1.pdf",
    "page_number": 2,
    "text": "hich mostly relies on heuris-\ntics such as presence of punctuation marks or the\nnumber of words and sentences in a webpage.\nGithub [4.5%]. We use the public GitHub\ndataset available on Google BigQuery. We only\nkept projects that are distributed under the Apache,\nBSD and MIT licenses. Additionally, we \ufb01ltered\nlow quality \ufb01les with heuristics based on the line\nlength or proportion of alphanumeric characters,\nand removed boilerplate, such as headers, with reg-\nular expressions. Finally, we deduplicate the result-\ning dataset at the \ufb01le level, with exact matches.\nWikipedia [4.5%]. We add Wikipedia dumps\nfrom the June-August 2022 period, covering 20Dataset Sampling prop. Epochs Disk size\nCommonCrawl 67.0% 1.10 3.3 TB\nC4 15.0% 1.06 783 GB\nGithub 4.5% 0.64 328 GB\nWikipedia 4.5% 2.45 83 GB\nBooks 4.5% 2.23 85 GB\nArXiv 2.5% 1.06 92 GB\nStackExchange 2.0% 1.03 78 GB\nTable 1: Pre-training data. Data mixtures used for pre-\ntraining, for each subset we list the sampling propor-\ntion, number of epochs",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_2_3",
    "filename": "pdf1.pdf",
    "page_number": 2,
    "text": ".5% 2.23 85 GB\nArXiv 2.5% 1.06 92 GB\nStackExchange 2.0% 1.03 78 GB\nTable 1: Pre-training data. Data mixtures used for pre-\ntraining, for each subset we list the sampling propor-\ntion, number of epochs performed on the subset when\ntraining on 1.4T tokens, and disk size. The pre-training\nruns on 1T tokens have the same sampling proportion.\nlanguages, which use either the Latin or Cyrillic\nscripts: bg,ca,cs,da,de,en,es,fr,hr,hu,it,\nnl,pl,pt,ro,ru,sl,sr,sv,uk. We process the\ndata to remove hyperlinks, comments and other\nformatting boilerplate.\nGutenberg and Books3 [4.5%]. We include\ntwo book corpora in our training dataset: the Guten-\nberg Project, which contains books that are in the\npublic domain, and the Books3 section of TheP-\nile (Gao et al., 2020), a publicly available dataset\nfor training large language models. We perform\ndeduplication at the book level, removing books\nwith more than 90% content overlap.\nArXiv [2.5%]. We process arXiv Latex \ufb01les\nto add scienti\ufb01c data to our dataset.",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_2_4",
    "filename": "pdf1.pdf",
    "page_number": 2,
    "text": "ng large language models. We perform\ndeduplication at the book level, removing books\nwith more than 90% content overlap.\nArXiv [2.5%]. We process arXiv Latex \ufb01les\nto add scienti\ufb01c data to our dataset. Following\nLewkowycz et al. (2022), we removed everything\nbefore the \ufb01rst section, as well as the bibliography.\nWe also removed the comments from the .tex \ufb01les,\nand inline-expanded de\ufb01nitions and macros written\nby users to increase consistency across papers.\nStack Exchange [2%]. We include a dump of\nStack Exchange, a website of high quality ques-\ntions and answers that covers a diverse set of do-\nmains, ranging from computer science to chemistry.\nWe kept the data from the 28 largest websites, re-\nmoved the HTML tags from text and sorted the\nanswers by score (from highest to lowest).\nTokenizer. We tokenize the data with the byte-\npair encoding (BPE) algorithm (Sennrich et al.,\n2015), using the implementation from Sentence-\nPiece (Kudo and Richardson, 2018). Notably, we\nsplit all numbers int",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_2_5",
    "filename": "pdf1.pdf",
    "page_number": 2,
    "text": " We tokenize the data with the byte-\npair encoding (BPE) algorithm (Sennrich et al.,\n2015), using the implementation from Sentence-\nPiece (Kudo and Richardson, 2018). Notably, we\nsplit all numbers into individual digits, and fallback\nto bytes to decompose unknown UTF-8 characters.",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_3_0",
    "filename": "pdf1.pdf",
    "page_number": 3,
    "text": "params dimension nheadsnlayers learning rate batch size ntokens\n6.7B 4096 32 32 3:0e\u000044M 1.0T\n13.0B 5120 40 40 3:0e\u000044M 1.0T\n32.5B 6656 52 60 1:5e\u000044M 1.4T\n65.2B 8192 64 80 1:5e\u000044M 1.4T\nTable 2: Model sizes, architectures, and optimization hyper-parameters.\nOverall, our entire training dataset contains\nroughly 1.4T tokens after tokenization. For most of\nour training data, each token is used only once dur-\ning training, with the exception of the Wikipedia\nand Books domains, over which we perform ap-\nproximately two epochs.\n2.2 Architecture\nFollowing recent work on large language models,\nour network is based on the transformer architec-\nture (Vaswani et al., 2017). We leverage various\nimprovements that were subsequently proposed,\nand used in different models such as PaLM. Here\nare the main difference with the original architec-\nture, and where we were found the inspiration for\nthis change (in bracket):\nPre-normalization [GPT3]. To improve the\ntraining stability, we normalize the input o",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_3_1",
    "filename": "pdf1.pdf",
    "page_number": 3,
    "text": "difference with the original architec-\nture, and where we were found the inspiration for\nthis change (in bracket):\nPre-normalization [GPT3]. To improve the\ntraining stability, we normalize the input of each\ntransformer sub-layer, instead of normalizing the\noutput. We use the RMSNorm normalizing func-\ntion, introduced by Zhang and Sennrich (2019).\nSwiGLU activation function [PaLM]. We re-\nplace the ReLU non-linearity by the SwiGLU ac-\ntivation function, introduced by Shazeer (2020) to\nimprove the performance. We use a dimension of\n2\n34dinstead of 4das in PaLM.\nRotary Embeddings [GPTNeo]. We remove the\nabsolute positional embeddings, and instead, add\nrotary positional embeddings (RoPE), introduced\nby Su et al. (2021), at each layer of the network.\nThe details of the hyper-parameters for our dif-\nferent models are given in Table 2.\n2.3 Optimizer\nOur models are trained using the AdamW opti-\nmizer (Loshchilov and Hutter, 2017), with the fol-\nlowing hyper-parameters: \f1= 0:9;\f2= 0:95.\nWe use",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_3_2",
    "filename": "pdf1.pdf",
    "page_number": 3,
    "text": "dif-\nferent models are given in Table 2.\n2.3 Optimizer\nOur models are trained using the AdamW opti-\nmizer (Loshchilov and Hutter, 2017), with the fol-\nlowing hyper-parameters: \f1= 0:9;\f2= 0:95.\nWe use a cosine learning rate schedule, such that\nthe \ufb01nal learning rate is equal to 10% of the maxi-\nmal learning rate. We use a weight decay of 0:1and\ngradient clipping of 1:0. We use 2;000warmup\n0 200 400 600 800 1000 1200 1400\nBillion of tokens1.51.61.71.81.92.02.12.2Training lossLLaMA 7B\nLLaMA 13B\nLLaMA 33B\nLLaMA 65BFigure 1: Training loss over train tokens for the 7B,\n13B, 33B, and 65 models. LLaMA-33B and LLaMA-\n65B were trained on 1.4T tokens. The smaller models\nwere trained on 1.0T tokens. All models are trained\nwith a batch size of 4M tokens.\nsteps, and vary the learning rate and batch size with\nthe size of the model (see Table 2 for details).\n2.4 Ef\ufb01cient implementation\nWe make several optimizations to improve the train-\ning speed of our models. First, we use an ef\ufb01cient\nimplementatio",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_3_3",
    "filename": "pdf1.pdf",
    "page_number": 3,
    "text": "e with\nthe size of the model (see Table 2 for details).\n2.4 Ef\ufb01cient implementation\nWe make several optimizations to improve the train-\ning speed of our models. First, we use an ef\ufb01cient\nimplementation of the causal multi-head attention\nto reduce memory usage and runtime. This imple-\nmentation, available in the xformers library,2is\ninspired by Rabe and Staats (2021) and uses the\nbackward from Dao et al. (2022). This is achieved\nby not storing the attention weights and not com-\nputing the key/query scores that are masked due to\nthe causal nature of the language modeling task.\nTo further improve training ef\ufb01ciency, we re-\nduced the amount of activations that are recom-\nputed during the backward pass with checkpoint-\ning. More precisely, we save the activations that\nare expensive to compute, such as the outputs of\nlinear layers. This is achieved by manually imple-\nmenting the backward function for the transformer\nlayers, instead of relying on the PyTorch autograd.\nTo fully bene\ufb01t from thi",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_3_4",
    "filename": "pdf1.pdf",
    "page_number": 3,
    "text": "such as the outputs of\nlinear layers. This is achieved by manually imple-\nmenting the backward function for the transformer\nlayers, instead of relying on the PyTorch autograd.\nTo fully bene\ufb01t from this optimization, we need to\n2https://github.com/facebookresearch/xformers",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_4_0",
    "filename": "pdf1.pdf",
    "page_number": 4,
    "text": "BoolQ PIQA SIQA HellaSwag WinoGrande ARC-e ARC-c OBQA\nGPT-3 175B 60.5 81.0 - 78.9 70.2 68.8 51.4 57.6\nGopher 280B 79.3 81.8 50.6 79.2 70.1 - - -\nChinchilla 70B 83.7 81.8 51.3 80.8 74.9 - - -\nPaLM 62B 84.8 80.5 - 79.7 77.0 75.2 52.5 50.4\nPaLM-cont 62B 83.9 81.4 - 80.6 77.0 - - -\nPaLM 540B 88.0 82.3 - 83.4 81.1 76.6 53.0 53.4\nLLaMA7B 76.5 79.8 48.9 76.1 70.1 72.8 47.6 57.2\n13B 78.1 80.1 50.4 79.2 73.0 74.8 52.7 56.4\n33B 83.1 82.3 50.4 82.8 76.0 80.0 57.8 58.6\n65B 85.3 82.8 52.3 84.2 77.0 78.9 56.0 60.2\nTable 3: Zero-shot performance on Common Sense Reasoning tasks.\nreduce the memory usage of the model by using\nmodel and sequence parallelism, as described by\nKorthikanti et al. (2022). Moreover, we also over-\nlap the computation of activations and the commu-\nnication between GPUs over the network (due to\nall_reduce operations) as much as possible.\nWhen training a 65B-parameter model, our code\nprocesses around 380 tokens/sec/GPU on 2048\nA100 GPU with 80GB of RAM. This means that\ntraining ov",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_4_1",
    "filename": "pdf1.pdf",
    "page_number": 4,
    "text": "ork (due to\nall_reduce operations) as much as possible.\nWhen training a 65B-parameter model, our code\nprocesses around 380 tokens/sec/GPU on 2048\nA100 GPU with 80GB of RAM. This means that\ntraining over our dataset containing 1.4T tokens\ntakes approximately 21 days.\n3 Main results\nFollowing previous work (Brown et al., 2020), we\nconsider zero-shot and few-shot tasks, and report\nresults on a total of 20 benchmarks:\n\u2022Zero-shot. We provide a textual description\nof the task and a test example. The model\neither provides an answer using open-ended\ngeneration, or ranks the proposed answers.\n\u2022Few-shot. We provide a few examples of the\ntask (between 1 and 64) and a test example.\nThe model takes this text as input and gener-\nates the answer or ranks different options.\nWe compare LLaMA with other foundation mod-\nels, namely the non-publicly available language\nmodels GPT-3 (Brown et al., 2020), Gopher (Rae\net al., 2021), Chinchilla (Hoffmann et al., 2022)\nand PaLM (Chowdhery et al., 2022), as well",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_4_2",
    "filename": "pdf1.pdf",
    "page_number": 4,
    "text": "ndation mod-\nels, namely the non-publicly available language\nmodels GPT-3 (Brown et al., 2020), Gopher (Rae\net al., 2021), Chinchilla (Hoffmann et al., 2022)\nand PaLM (Chowdhery et al., 2022), as well as\nthe open-sourced OPT models (Zhang et al., 2022),\nGPT-J (Wang and Komatsuzaki, 2021), and GPT-\nNeo (Black et al., 2022). In Section 4, we also\nbrie\ufb02y compare LLaMA with instruction-tuned\nmodels such as OPT-IML (Iyer et al., 2022) and\nFlan-PaLM (Chung et al., 2022).We evaluate LLaMA on free-form generation\ntasks and multiple choice tasks. In the multiple\nchoice tasks, the objective is to select the most\nappropriate completion among a set of given op-\ntions, based on a provided context. We select the\ncompletion with the highest likelihood given the\nprovided context. We follow Gao et al. (2021)\nand use the likelihood normalized by the number\nof characters in the completion, except for certain\ndatasets (OpenBookQA, BoolQ), for which we fol-\nlow Brown et al. (2020), and select a completion\n",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_4_3",
    "filename": "pdf1.pdf",
    "page_number": 4,
    "text": "1)\nand use the likelihood normalized by the number\nof characters in the completion, except for certain\ndatasets (OpenBookQA, BoolQ), for which we fol-\nlow Brown et al. (2020), and select a completion\nbased on the likelihood normalized by the likeli-\nhood of the completion given \u201cAnswer:\u201d as context:\nP(completionjcontext )=P(completionj\\Answer :\").\n0-shot 1-shot 5-shot 64-shot\nGPT-3 175B 14.6 23.0 - 29.9\nGopher 280B 10.1 - 24.5 28.2\nChinchilla 70B 16.6 - 31.5 35.5\nPaLM8B 8.4 10.6 - 14.6\n62B 18.1 26.5 - 27.6\n540B 21.2 29.3 - 39.6\nLLaMA7B 16.8 18.7 22.0 26.1\n13B 20.1 23.4 28.1 31.9\n33B 24.9 28.3 32.9 36.0\n65B 23.8 31.0 35.0 39.9\nTable 4: NaturalQuestions. Exact match performance.\n3.1 Common Sense Reasoning\nWe consider eight standard common sense rea-\nsoning benchmarks: BoolQ (Clark et al., 2019),\nPIQA (Bisk et al., 2020), SIQA (Sap et al., 2019),",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_5_0",
    "filename": "pdf1.pdf",
    "page_number": 5,
    "text": "HellaSwag (Zellers et al., 2019), WinoGrande (Sak-\naguchi et al., 2021), ARC easy and challenge (Clark\net al., 2018) and OpenBookQA (Mihaylov et al.,\n2018). These datasets include Cloze and Winograd\nstyle tasks, as well as multiple choice question an-\nswering. We evaluate in the zero-shot setting as\ndone in the language modeling community.\nIn Table 3, we compare with existing models\nof various sizes and report numbers from the cor-\nresponding papers. First, LLaMA-65B outper-\nforms Chinchilla-70B on all reported benchmarks\nbut BoolQ. Similarly, this model surpasses PaLM-\n540B everywhere but on BoolQ and WinoGrande.\nLLaMA-13B model also outperforms GPT-3 on\nmost benchmarks despite being 10 \u0002smaller.\n3.2 Closed-book Question Answering\nWe compare LLaMA to existing large language\nmodels on two closed-book question answering\nbenchmarks: Natural Questions (Kwiatkowski\net al., 2019) and TriviaQA (Joshi et al., 2017). For\nboth benchmarks, we report exact match perfor-\nmance in a closed book set",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_5_1",
    "filename": "pdf1.pdf",
    "page_number": 5,
    "text": "closed-book question answering\nbenchmarks: Natural Questions (Kwiatkowski\net al., 2019) and TriviaQA (Joshi et al., 2017). For\nboth benchmarks, we report exact match perfor-\nmance in a closed book setting, i.e., where the mod-\nels do not have access to documents that contain\nevidence to answer the question. In Table 4, we\nreport performance on NaturalQuestions, and in Ta-\nble 5, we report on TriviaQA. On both benchmarks,\nLLaMA-65B achieve state-of-the-arts performance\nin the zero-shot and few-shot settings. More im-\nportantly, the LLaMA-13B is also competitive on\nthese benchmarks with GPT-3 and Chinchilla, de-\nspite being 5-10 \u0002smaller. This model runs on a\nsingle V100 GPU during inference.\n0-shot 1-shot 5-shot 64-shot\nGopher 280B 43.5 - 57.0 57.2\nChinchilla 70B 55.4 - 64.1 64.6\nLLaMA7B 50.0 53.4 56.3 57.6\n13B 56.6 60.5 63.1 64.0\n33B 65.1 67.9 69.9 70.4\n65B 68.2 71.6 72.6 73.0\nTable 5: TriviaQA. Zero-shot and few-shot exact\nmatch performance on the \ufb01ltered dev set.\n3.3 Reading Comprehe",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_5_2",
    "filename": "pdf1.pdf",
    "page_number": 5,
    "text": ".0 53.4 56.3 57.6\n13B 56.6 60.5 63.1 64.0\n33B 65.1 67.9 69.9 70.4\n65B 68.2 71.6 72.6 73.0\nTable 5: TriviaQA. Zero-shot and few-shot exact\nmatch performance on the \ufb01ltered dev set.\n3.3 Reading Comprehension\nWe evaluate our models on the RACE reading com-\nprehension benchmark (Lai et al., 2017). This\ndataset was collected from English reading com-\nprehension exams designed for middle and highRACE-middle RACE-high\nGPT-3 175B 58.4 45.5\nPaLM8B 57.9 42.3\n62B 64.3 47.5\n540B 68.1 49.1\nLLaMA7B 61.1 46.9\n13B 61.6 47.2\n33B 64.1 48.3\n65B 67.9 51.6\nTable 6: Reading Comprehension. Zero-shot accu-\nracy.\nschool Chinese students. We follow the evaluation\nsetup from Brown et al. (2020) and report results\nin Table 6. On these benchmarks, LLaMA-65B is\ncompetitive with PaLM-540B, and, LLaMA-13B\noutperforms GPT-3 by a few percents.\n3.4 Mathematical reasoning\nWe evaluate our models on two mathematical rea-\nsoning benchmarks: MATH (Hendrycks et al.,\n2021) and GSM8k (Cobbe et al., 2021). MATH\nis a dataset of 1",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_5_3",
    "filename": "pdf1.pdf",
    "page_number": 5,
    "text": "-3 by a few percents.\n3.4 Mathematical reasoning\nWe evaluate our models on two mathematical rea-\nsoning benchmarks: MATH (Hendrycks et al.,\n2021) and GSM8k (Cobbe et al., 2021). MATH\nis a dataset of 12K middle school and high school\nmathematics problems written in LaTeX. GSM8k\nis a set of middle school mathematical problems.\nIn Table 7, we compare with PaLM and Min-\nerva (Lewkowycz et al., 2022). Minerva is a series\nof PaLM models \ufb01netuned on 38.5B tokens ex-\ntracted from ArXiv and Math Web Pages, while\nneither PaLM or LLaMA are \ufb01netuned on mathe-\nmatical data. The numbers for PaLM and Minerva\nare taken from Lewkowycz et al. (2022), and we\ncompare with and without maj1@k .maj1@k de-\nnotes evaluations where we generate ksamples for\neach problem and perform a majority voting (Wang\net al., 2022). On GSM8k, we observe that LLaMA-\n65B outperforms Minerva-62B, although it has not\nbeen \ufb01ne-tuned on mathematical data.\n3.5 Code generation\nWe evaluate the ability of our models to write\ncode from",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_5_4",
    "filename": "pdf1.pdf",
    "page_number": 5,
    "text": "22). On GSM8k, we observe that LLaMA-\n65B outperforms Minerva-62B, although it has not\nbeen \ufb01ne-tuned on mathematical data.\n3.5 Code generation\nWe evaluate the ability of our models to write\ncode from a natural language description on two\nbenchmarks: HumanEval (Chen et al., 2021) and\nMBPP (Austin et al., 2021). For both tasks, the\nmodel receives a description of the program in a\nfew sentences, as well as a few input-output ex-\namples. In HumanEval, it also receives a function\nsignature, and the prompt is formatted as natural\ncode with the textual description and tests in a",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_6_0",
    "filename": "pdf1.pdf",
    "page_number": 6,
    "text": "MATH +maj1@k GSM8k +maj1@k\nPaLM8B 1.5 - 4.1 -\n62B 4.4 - 33.0 -\n540B 8.8 - 56.5 -\nMinerva8B 14.1 25.4 16.2 28.4\n62B 27.6 43.4 52.4 68.5\n540B 33.6 50.3 68.5 78.5\nLLaMA7B 2.9 6.9 11.0 18.1\n13B 3.9 8.8 17.8 29.3\n33B 7.1 15.2 35.6 53.1\n65B 10.6 20.5 50.9 69.7\nTable 7: Model performance on quantitative reason-\ning datasets. For majority voting, we use the same\nsetup as Minerva, with k= 256 samples for MATH\nandk= 100 for GSM8k (Minerva 540B uses k= 64\nfor MATH and and k= 40 for GSM8k). LLaMA-65B\noutperforms Minerva 62B on GSM8k, although it has\nnot been \ufb01ne-tuned on mathematical data.\ndocstring. The model needs to generate a Python\nprogram that \ufb01ts the description and satis\ufb01es the\ntest cases. In Table 8, we compare the pass@1\nscores of our models with existing language mod-\nels that have not been \ufb01netuned on code, namely\nPaLM and LaMDA (Thoppilan et al., 2022). PaLM\nand LLaMA were trained on datasets that contain\na similar number of code tokens.\nAs show in Table 8, for a similar number\nof par",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_6_1",
    "filename": "pdf1.pdf",
    "page_number": 6,
    "text": " \ufb01netuned on code, namely\nPaLM and LaMDA (Thoppilan et al., 2022). PaLM\nand LLaMA were trained on datasets that contain\na similar number of code tokens.\nAs show in Table 8, for a similar number\nof parameters, LLaMA outperforms other gen-\neral models such as LaMDA and PaLM, which\nare not trained or \ufb01netuned speci\ufb01cally for code.\nLLaMA with 13B parameters and more outper-\nforms LaMDA 137B on both HumanEval and\nMBPP. LLaMA 65B also outperforms PaLM 62B,\neven when it is trained longer. The pass@1 results\nreported in this table were obtained by sampling\nwith temperature 0.1. The pass@100 and pass@80\nmetrics were obtained with temperature 0.8. We\nuse the same method as Chen et al. (2021) to obtain\nunbiased estimates of the pass@k.\nIt is possible to improve the performance on code\nby \ufb01netuning on code-speci\ufb01c tokens. For instance,\nPaLM-Coder (Chowdhery et al., 2022) increases\nthe pass@1 score of PaLM on HumanEval from\n26.2% for PaLM to 36%. Other models trained\nspeci\ufb01cally for code also perfo",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_6_2",
    "filename": "pdf1.pdf",
    "page_number": 6,
    "text": " code-speci\ufb01c tokens. For instance,\nPaLM-Coder (Chowdhery et al., 2022) increases\nthe pass@1 score of PaLM on HumanEval from\n26.2% for PaLM to 36%. Other models trained\nspeci\ufb01cally for code also perform better than gen-\neral models on these tasks (Chen et al., 2021; Ni-\njkamp et al., 2022; Fried et al., 2022). Finetuning\non code tokens is beyond the scope of this paper.Params HumanEval MBPP\npass@ @1 @100 @1 @80\nLaMDA 137B 14.0 47.3 14.8 62.4\nPaLM 8B 3.6\u000318.7\u00035.0\u000335.7\u0003\nPaLM 62B 15.9 46.3\u000321.4 63.2\u0003\nPaLM-cont 62B 23.7 - 31.2 -\nPaLM 540B 26.2 76.2 36.8 75.0\nLLaMA7B 10.5 36.5 17.7 56.2\n13B 15.8 52.5 22.0 64.0\n33B 21.7 70.7 30.2 73.4\n65B 23.7 79.3 37.7 76.8\nTable 8: Model performance for code generation.\nWe report the pass@ score on HumanEval and MBPP.\nHumanEval generations are done in zero-shot and\nMBBP with 3-shot prompts similar to Austin et al.\n(2021). The values marked with\u0003are read from \ufb01gures\nin Chowdhery et al. (2022).\n3.6 Massive Multitask Language\nUnderstanding\nThe massive multita",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_6_3",
    "filename": "pdf1.pdf",
    "page_number": 6,
    "text": "t and\nMBBP with 3-shot prompts similar to Austin et al.\n(2021). The values marked with\u0003are read from \ufb01gures\nin Chowdhery et al. (2022).\n3.6 Massive Multitask Language\nUnderstanding\nThe massive multitask language understanding\nbenchmark, or MMLU, introduced by Hendrycks\net al. (2020) consists of multiple choice questions\ncovering various domains of knowledge, includ-\ning humanities, STEM and social sciences. We\nevaluate our models in the 5-shot setting, using the\nexamples provided by the benchmark, and report\nresults in Table 9. On this benchmark, we observe\nthat the LLaMA-65B is behind both Chinchilla-\n70B and PaLM-540B by a few percent in average,\nand across most domains. A potential explanation\nis that we have used a limited amount of books\nand academic papers in our pre-training data, i.e.,\nArXiv, Gutenberg and Books3, that sums up to only\n177GB, while these models were trained on up to\n2TB of books. This large quantity of books used\nby Gopher, Chinchilla and PaLM may also explain\nw",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_6_4",
    "filename": "pdf1.pdf",
    "page_number": 6,
    "text": ".e.,\nArXiv, Gutenberg and Books3, that sums up to only\n177GB, while these models were trained on up to\n2TB of books. This large quantity of books used\nby Gopher, Chinchilla and PaLM may also explain\nwhy Gopher outperforms GPT-3 on this benchmark,\nwhile it is comparable on other benchmarks.\n3.7 Evolution of performance during training\nDuring training, we tracked the performance of our\nmodels on a few question answering and common\nsense benchmarks, and report them in Figure 2.\nOn most benchmarks, the performance improves\nsteadily, and correlates with the training perplexity\nof the model (see Figure 1). The exceptions are\nSIQA and WinoGrande. Most notably, on SIQA,\nwe observe a lot of variance in performance,",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_7_0",
    "filename": "pdf1.pdf",
    "page_number": 7,
    "text": "Humanities STEM Social Sciences Other Average\nGPT-NeoX 20B 29.8 34.9 33.7 37.7 33.6\nGPT-3 175B 40.8 36.7 50.4 48.8 43.9\nGopher 280B 56.2 47.4 71.9 66.1 60.0\nChinchilla 70B 63.6 54.9 79.3 73.9 67.5\nPaLM8B 25.6 23.8 24.1 27.8 25.4\n62B 59.5 41.9 62.7 55.8 53.7\n540B 77.0 55.6 81.0 69.6 69.3\nLLaMA7B 34.0 30.5 38.3 38.1 35.1\n13B 45.0 35.8 53.8 53.3 46.9\n33B 55.8 46.0 66.7 63.4 57.8\n65B 61.8 51.7 72.9 67.4 63.4\nTable 9: Massive Multitask Language Understanding (MMLU). Five-shot accuracy.\nthat may indicate that this benchmark is not\nreliable. On WinoGrande, the performance does\nnot correlate as well with training perplexity:\nthe LLaMA-33B and LLaMA-65B have similar\nperformance during the training.\n4 Instruction Finetuning\nIn this section, we show that brie\ufb02y \ufb01netuning on\ninstructions data rapidly leads to improvements\non MMLU. Although the non-\ufb01netuned version\nof LLaMA-65B is already able to follow basic in-\nstructions, we observe that a very small amount of\n\ufb01netuning improves the performance ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_7_1",
    "filename": "pdf1.pdf",
    "page_number": 7,
    "text": "leads to improvements\non MMLU. Although the non-\ufb01netuned version\nof LLaMA-65B is already able to follow basic in-\nstructions, we observe that a very small amount of\n\ufb01netuning improves the performance on MMLU,\nand further improves the ability of the model to\nfollow instructions. Since this is not the focus of\nthis paper, we only conducted a single experiment\nfollowing the same protocol as Chung et al. (2022)\nto train an instruct model, LLaMA-I.\nOPT 30B 26.1\nGLM 120B 44.8\nPaLM 62B 55.1\nPaLM-cont 62B 62.8\nChinchilla 70B 67.5\nLLaMA 65B 63.4\nOPT-IML-Max 30B 43.2\nFlan-T5-XXL 11B 55.1\nFlan-PaLM 62B 59.6\nFlan-PaLM-cont 62B 66.1\nLLaMA-I 65B 68.9\nTable 10: Instruction \ufb01netuning \u2013 MMLU (5-shot).\nComparison of models of moderate size with and with-\nout instruction \ufb01netuning on MMLU.In Table 10, we report the results of our instruct\nmodel LLaMA-I on MMLU and compare with ex-\nisting instruction \ufb01netuned models of moderate\nsizes, namely, OPT-IML (Iyer et al., 2022) and the\nFlan-PaLM series (Chung et ",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_7_2",
    "filename": "pdf1.pdf",
    "page_number": 7,
    "text": "ort the results of our instruct\nmodel LLaMA-I on MMLU and compare with ex-\nisting instruction \ufb01netuned models of moderate\nsizes, namely, OPT-IML (Iyer et al., 2022) and the\nFlan-PaLM series (Chung et al., 2022). All the re-\nported numbers are from the corresponding papers.\nDespite the simplicity of the instruction \ufb01netuning\napproach used here, we reach 68.9% on MMLU.\nLLaMA-I (65B) outperforms on MMLU existing\ninstruction \ufb01netuned models of moderate sizes, but\nare still far from the state-of-the-art, that is 77.4\nfor GPT code-davinci-002 on MMLU (numbers\ntaken from Iyer et al. (2022)). The details of the\nperformance on MMLU on the 57 tasks can be\nfound in Table 16 of the appendix.\n5 Bias, Toxicity and Misinformation\nLarge language models have been showed to re-\nproduce and amplify biases that are existing in\nthe training data (Sheng et al., 2019; Kurita et al.,\n2019), and to generate toxic or offensive con-\ntent (Gehman et al., 2020). As our training dataset\ncontains a large proportion ",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_7_3",
    "filename": "pdf1.pdf",
    "page_number": 7,
    "text": "at are existing in\nthe training data (Sheng et al., 2019; Kurita et al.,\n2019), and to generate toxic or offensive con-\ntent (Gehman et al., 2020). As our training dataset\ncontains a large proportion of data from the Web,\nwe believe that it is crucial to determine the po-\ntential for our models to generate such content.\nTo understand the potential harm of LLaMA-65B,\nwe evaluate on different benchmarks that measure\ntoxic content production and stereotypes detection.\nWhile we have selected some of the standard bench-\nmarks that are used by the language model com-\nmunity to indicate some of the issues with these\nmodels, these evaluations are not suf\ufb01cient to fully\nunderstand the risks associated with these models.",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_8_0",
    "filename": "pdf1.pdf",
    "page_number": 8,
    "text": "0 250 500 750 1000 1250 1500203040506070AccuracyTriviaQA\n0 250 500 750 1000 1250 15005055606570758085HellaSwag\n0 250 500 750 1000 1250 150005101520253035NaturalQuestions\n0 250 500 750 1000 1250 1500\nBillion of tokens40424446485052AccuracySIQA\n0 250 500 750 1000 1250 1500\nBillion of tokens50556065707580WinoGrande\n0 250 500 750 1000 1250 1500\nBillion of tokens65.067.570.072.575.077.580.082.5PIQA\nLLaMA 7B\nLLaMA 13B\nLLaMA 33B\nLLaMA 65B\nChinchillaFigure 2: Evolution of performance on question answering and common sense reasoning during training.\n5.1 RealToxicityPrompts\nLanguage models can generate toxic language, e.g.,\ninsults, hate speech or threats. There is a very large\nrange of toxic content that a model can generate,\nmaking a thorough evaluation challenging. Several\nrecent work (Zhang et al., 2022; Hoffmann et al.,\n2022) have considered the RealToxicityPrompts\nbenchmark (Gehman et al., 2020) as an indicator\nof how toxic is their model. RealToxicityPrompts\nconsists of about 100k prompts",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_8_1",
    "filename": "pdf1.pdf",
    "page_number": 8,
    "text": "l., 2022; Hoffmann et al.,\n2022) have considered the RealToxicityPrompts\nbenchmark (Gehman et al., 2020) as an indicator\nof how toxic is their model. RealToxicityPrompts\nconsists of about 100k prompts that the model must\ncomplete; then a toxicity score is automatically\nevaluated by making a request to PerspectiveAPI3.\nWe do not have control over the pipeline used by\nthe third-party PerspectiveAPI, making comparison\nwith previous models dif\ufb01cult.\nFor each of the 100k prompts, we greedily gen-\nerate with our models, and measure their toxic-\nity score. The score per prompt ranges from 0\n(non-toxic) to 1 (toxic). In Table 11, we report our\naveraged score on basic and respectful prompt cat-\negories of RealToxicityPrompts. These scores are\n\u201ccomparable\u201d with what we observe in the litera-\nture (e.g., 0.087 for Chinchilla) but the method-\nologies differ between these work and ours (in\nterms of sampling strategy, number of prompts and\ntime of API). We observe that toxicity increases\n3https://pe",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_8_2",
    "filename": "pdf1.pdf",
    "page_number": 8,
    "text": ".g., 0.087 for Chinchilla) but the method-\nologies differ between these work and ours (in\nterms of sampling strategy, number of prompts and\ntime of API). We observe that toxicity increases\n3https://perspectiveapi.com/Basic Respectful\nLLaMA7B 0.106 0.081\n13B 0.104 0.095\n33B 0.107 0.087\n65B 0.128 0.141\nTable 11: RealToxicityPrompts. We run a greedy de-\ncoder on the 100k prompts from this benchmark. The\n\u201crespectful\u201d versions are prompts starting with \u201cCom-\nplete the following sentence in a polite, respectful, and\nunbiased manner:\u201d, and \u201cBasic\u201d is without it. Scores\nwere obtained using the PerplexityAPI, with higher\nscore indicating more toxic generations.\nwith the size of the model, especially for Respect-\nful prompts. This was also observed in previous\nwork (Zhang et al., 2022), with the notable excep-\ntion of Hoffmann et al. (2022) where they do not\nsee a difference between Chinchilla and Gopher,\ndespite different sizes. This could be explained by\nthe fact that the larger model, Gopher,",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_8_3",
    "filename": "pdf1.pdf",
    "page_number": 8,
    "text": "able excep-\ntion of Hoffmann et al. (2022) where they do not\nsee a difference between Chinchilla and Gopher,\ndespite different sizes. This could be explained by\nthe fact that the larger model, Gopher, has worse\nperformance than Chinchilla, suggesting that the\nrelation between toxicity and model size may only\napply within a model family.",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_9_0",
    "filename": "pdf1.pdf",
    "page_number": 9,
    "text": "LLaMA GPT3 OPT\nGender 70.6 62.6 65.7\nReligion 79.0 73.3 68.6\nRace/Color 57.0 64.7 68.6\nSexual orientation 81.0 76.2 78.6\nAge 70.1 64.4 67.8\nNationality 64.2 61.6 62.9\nDisability 66.7 76.7 76.7\nPhysical appearance 77.8 74.6 76.2\nSocioeconomic status 71.5 73.8 76.2\nAverage 66.6 67.2 69.5\nTable 12: CrowS-Pairs. We compare the level of bi-\nases contained in LLaMA-65B with OPT-175B and\nGPT3-175B. Higher score indicates higher bias.\n5.2 CrowS-Pairs\nWe evaluate the biases in our model on the CrowS-\nPairs (Nangia et al., 2020). This dataset allows to\nmeasure biases in 9 categories: gender, religion,\nrace/color, sexual orientation, age, nationality, dis-\nability, physical appearance and socioeconomic sta-\ntus. Each example is composed of a stereotype and\nan anti-stereotype, we measure the model prefer-\nence for the stereotypical sentence using the per-\nplexity of both sentences in a zero-shot setting.\nHigher scores thus indicate higher bias. We com-\npare with GPT-3 and OPT-175B in Table 12.\nLLa",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_9_1",
    "filename": "pdf1.pdf",
    "page_number": 9,
    "text": "fer-\nence for the stereotypical sentence using the per-\nplexity of both sentences in a zero-shot setting.\nHigher scores thus indicate higher bias. We com-\npare with GPT-3 and OPT-175B in Table 12.\nLLaMA compares slightly favorably to both\nmodels on average. Our model is particularly bi-\nased in the religion category (+10% compared to\nOPT-175B), followed by age and gender. We ex-\npect these biases to come from CommonCrawl de-\nspite multiple \ufb01ltering steps.\n5.3 WinoGender\nTo further investigate the biases of our model on\nthe gender category, we look at the WinoGender\nbenchmark (Rudinger et al., 2018), a co-reference\nresolution dataset. WinoGender is made of Wino-\ngrad schema, and biases are evaluated by determin-\ning if a model co-reference resolution performance\nis impacted by the gender of the pronoun.\nMore precisely, each sentence has three men-\ntions: an \u201coccupation\u201d, a \u201cparticipant\u201d, and a\n\u201cpronoun\u201d where the pronoun is co-referencing\neither the occupation or participant. We prompt\n",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_9_2",
    "filename": "pdf1.pdf",
    "page_number": 9,
    "text": " the pronoun.\nMore precisely, each sentence has three men-\ntions: an \u201coccupation\u201d, a \u201cparticipant\u201d, and a\n\u201cpronoun\u201d where the pronoun is co-referencing\neither the occupation or participant. We prompt\nthe model to determine the co-reference relation\nand measure if it does so correctly according tothe context of the sentence. The goal is to reveal\nif societal biases associated with occupations\nhave been captured by the model. For example,\na sentence in the WinoGender dataset is \u201cThe\nnurse noti\ufb01ed the patient that his shift would be\nending in an hour.\u201d, which is followed by \u2018His\u2019\nrefers to . We then compare the perplexity of the\ncontinuations the nurse andthe patient to per-\nform co-reference resolution with the model. We\nevaluate the performance when using 3 pronouns:\n\u201cher/her/she\u201d, \u201chis/him/he\u201d and \u201ctheir/them/some-\none\u201d (the different choices corresponding to the\ngrammatical function of the pronoun.\nIn Table 13, we report the co-reference scores\nfor the three different pronouns contain",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_9_3",
    "filename": "pdf1.pdf",
    "page_number": 9,
    "text": "/he\u201d and \u201ctheir/them/some-\none\u201d (the different choices corresponding to the\ngrammatical function of the pronoun.\nIn Table 13, we report the co-reference scores\nfor the three different pronouns contained in the\ndataset. We observe that our model is signi\ufb01cantly\nbetter at performing co-reference resolution for\nthe \u201ctheir/them/someone\u201d pronouns than for the\n\u201cher/her/she\u201d and \u201chis/him/he\u201d pronouns. A simi-\nlar observation was made in previous work (Rae\net al., 2021; Hoffmann et al., 2022), and is likely\nindicative of gender bias. Indeed, in the case of the\n\u201cher/her/she\u201d and \u201chis/him/he\u201d pronouns, the model\nis probably using the majority gender of the occu-\npation to perform co-reference resolution, instead\nof using the evidence of the sentence.\nTo further investigate this hypothesis, we look\nat the set of \u201cgotcha\u201d cases for the \u201cher/her/she\u201d\nand \u201chis/him/he\u201d pronouns in the WinoGender\ndataset. Theses cases correspond to sentences in\nwhich the pronoun does not match the majority\ngender of t",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_9_4",
    "filename": "pdf1.pdf",
    "page_number": 9,
    "text": "t the set of \u201cgotcha\u201d cases for the \u201cher/her/she\u201d\nand \u201chis/him/he\u201d pronouns in the WinoGender\ndataset. Theses cases correspond to sentences in\nwhich the pronoun does not match the majority\ngender of the occupation, and the occupation is\nthe correct answer. In Table 13, we observe that\nour model, LLaMA-65B, makes more errors on the\ngotcha examples, clearly showing that it capture\nsocietal biases related to gender and occupation.\nThe drop of performance exists for \u201cher/her/she\u201d\nand \u201chis/him/he\u201d pronouns, which is indicative of\nbiases regardless of gender.\n5.4 TruthfulQA\nTruthfulQA (Lin et al., 2021) aims to measure the\ntruthfulness of a model, i.e., its ability to identify\nwhen a claim is true. Lin et al. (2021) consider\nthe de\ufb01nition of \u201ctrue\u201d in the sense of \u201cliteral truth\nabout the real world\u201d, and not claims that are only\ntrue in the context of a belief system or tradition.\nThis benchmark can evaluate the risks of a model\nto generate misinformation or false claims. The\nquestions are ",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_9_5",
    "filename": "pdf1.pdf",
    "page_number": 9,
    "text": "orld\u201d, and not claims that are only\ntrue in the context of a belief system or tradition.\nThis benchmark can evaluate the risks of a model\nto generate misinformation or false claims. The\nquestions are written in diverse style, cover 38 cat-\negories and are designed to be adversarial.",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_10_0",
    "filename": "pdf1.pdf",
    "page_number": 10,
    "text": "7B 13B 33B 65B\nAll 66.0 64.7 69.0 77.5\nher/her/she 65.0 66.7 66.7 78.8\nhis/him/he 60.8 62.5 62.1 72.1\ntheir/them/someone 72.1 65.0 78.3 81.7\nher/her/she ( gotcha ) 64.2 65.8 61.7 75.0\nhis/him/he ( gotcha ) 55.0 55.8 55.8 63.3\nTable 13: WinoGender. Co-reference resolution ac-\ncuracy for the LLaMA models, for different pronouns\n(\u201cher/her/she\u201d and \u201chis/him/he\u201d). We observe that our\nmodels obtain better performance on \u201ctheir/them/some-\none\u2019 pronouns than on \u201cher/her/she\u201d and \u201chis/him/he\u2019,\nwhich is likely indicative of biases.\nTruthful Truthful*Inf\nGPT-31.3B 0.31 0.19\n6B 0.22 0.19\n175B 0.28 0.25\nLLaMA7B 0.33 0.29\n13B 0.47 0.41\n33B 0.52 0.48\n65B 0.57 0.53\nTable 14: TruthfulQA. We report the fraction of truth-\nful and truthful*informative answers, as scored by spe-\ncially trained models via the OpenAI API. We follow\nthe QA prompt style used in Ouyang et al. (2022), and\nreport the performance of GPT-3 from the same paper.\nIn Table 14, we report the performance of our\nmodels on both questions t",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_10_1",
    "filename": "pdf1.pdf",
    "page_number": 10,
    "text": "penAI API. We follow\nthe QA prompt style used in Ouyang et al. (2022), and\nreport the performance of GPT-3 from the same paper.\nIn Table 14, we report the performance of our\nmodels on both questions to measure truthful mod-\nels and the intersection of truthful and informative.\nCompared to GPT-3, our model scores higher in\nboth categories, but the rate of correct answers is\nstill low, showing that our model is likely to hallu-\ncinate incorrect answers.\n6 Carbon footprint\nThe training of our models have consumed a mas-\nsive quantity of energy, responsible for the emis-\nsion of carbon dioxide. We follow the recent liter-\nature on the subject and breakdown both the total\nenergy consumption and the resulting carbon foot-\nprint in Table 15. We follow a formula for Wu et al.\n(2022) to estimate the Watt-hour, Wh, needed to\ntrain a model, as well as the tons of carbon emis-\nsions, tCO 2eq. For the Wh, we use the formula:\nWh =GPU-h\u0002(GPU power consumption )\u0002PUE;where we set the Power Usage Effect",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_10_2",
    "filename": "pdf1.pdf",
    "page_number": 10,
    "text": "e Watt-hour, Wh, needed to\ntrain a model, as well as the tons of carbon emis-\nsions, tCO 2eq. For the Wh, we use the formula:\nWh =GPU-h\u0002(GPU power consumption )\u0002PUE;where we set the Power Usage Effectiveness (PUE)\nat1:1. The resulting carbon emission depends on\nthe location of the data center used to train the net-\nwork. For instance, BLOOM uses a grid that emits\n0.057 kg CO 2eq/KWh leading to 27 tCO 2eq and\nOPT a grid that emits 0.231 kg CO 2eq/KWh, lead-\ning to 82 tCO 2eq. In this study, we are interested in\ncomparing the cost in carbon emission of training\nof these models if they were trained in the same\ndata center. Hence, we do not take the location\nof data center in consideration, and use, instead,\nthe US national average carbon intensity factor of\n0.385 kg CO 2eq/KWh. This leads to the following\nformula for the tons of carbon emissions:\ntCO2eq=MWh\u00020:385:\nWe apply the same formula to OPT and BLOOM\nfor fair comparison. For OPT, we assume training\nrequired 34 days on 992 A100-80B (",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_10_3",
    "filename": "pdf1.pdf",
    "page_number": 10,
    "text": "the following\nformula for the tons of carbon emissions:\ntCO2eq=MWh\u00020:385:\nWe apply the same formula to OPT and BLOOM\nfor fair comparison. For OPT, we assume training\nrequired 34 days on 992 A100-80B (see their logs4).\nFinally, we estimate that we used 2048 A100-80GB\nfor a period of approximately 5 months to develop\nour models. This means that developing these mod-\nels would have cost around 2,638 MWh under our\nassumptions, and a total emission of 1,015 tCO 2eq.\nWe hope that releasing these models will help to\nreduce future carbon emission since the training is\nalready done, and some of the models are relatively\nsmall and can be run on a single GPU.\n7 Related work\nLanguage models are probability distributions\nover sequences of words, tokens or charac-\nters (Shannon, 1948, 1951). This task, often framed\nas next token prediction, has long been considered a\ncore problem in natural language processing (Bahl\net al., 1983; Brown et al., 1990). Because Turing\n(1950) proposed to measure machine",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_10_4",
    "filename": "pdf1.pdf",
    "page_number": 10,
    "text": "often framed\nas next token prediction, has long been considered a\ncore problem in natural language processing (Bahl\net al., 1983; Brown et al., 1990). Because Turing\n(1950) proposed to measure machine intelligence\nby using language through the \u201cimitation game\u201d,\nlanguage modeling has been proposed as a bench-\nmark to measure progress toward arti\ufb01cial intelli-\ngence (Mahoney, 1999).\nArchitecture. Traditionally, language models\nwere based on n-gram count statistics (Bahl\net al., 1983), and various smoothing techniques\nwere proposed to improve the estimation of rare\nevents (Katz, 1987; Kneser and Ney, 1995). In the\npast two decades, neural networks have been suc-\ncessfully applied to the language modelling task,\n4https://github.com/facebookresearch/metaseq/\ntree/main/projects/OPT/chronicles",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_11_0",
    "filename": "pdf1.pdf",
    "page_number": 11,
    "text": "GPU TypeGPU PowerGPU-hoursTotal power Carbon emitted\nconsumption consumption (tCO 2eq)\nOPT-175B A100-80GB 400W 809,472 356 MWh 137\nBLOOM-175B A100-80GB 400W 1,082,880 475 MWh 183\nLLaMA-7B A100-80GB 400W 82,432 36 MWh 14\nLLaMA-13B A100-80GB 400W 135,168 59 MWh 23\nLLaMA-33B A100-80GB 400W 530,432 233 MWh 90\nLLaMA-65B A100-80GB 400W 1,022,362 449 MWh 173\nTable 15: Carbon footprint of training different models in the same data center. We follow Wu et al. (2022)\nto compute carbon emission of training OPT, BLOOM and our models in the same data center. For the power\nconsumption of a A100-80GB, we take the thermal design power for NVLink systems, that is 400W. We take a\nPUE of 1.1 and a carbon intensity factor set at the national US average of 0.385 kg CO 2e per KWh.\nstarting from feed forward models (Bengio et al.,\n2000), recurrent neural networks (Elman, 1990;\nMikolov et al., 2010) and LSTMs (Hochreiter and\nSchmidhuber, 1997; Graves, 2013). More recently,\ntransformer networks, based on self-",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_11_1",
    "filename": "pdf1.pdf",
    "page_number": 11,
    "text": "els (Bengio et al.,\n2000), recurrent neural networks (Elman, 1990;\nMikolov et al., 2010) and LSTMs (Hochreiter and\nSchmidhuber, 1997; Graves, 2013). More recently,\ntransformer networks, based on self-attention, have\nled to important improvements, especially for cap-\nturing long range dependencies (Vaswani et al.,\n2017; Radford et al., 2018; Dai et al., 2019).\nScaling. There is a long history of scaling for\nlanguage models, for both the model and dataset\nsizes. Brants et al. (2007) showed the bene\ufb01ts of\nusing language models trained on 2 trillion tokens,\nresulting in 300 billion n-grams, on the quality of\nmachine translation. While this work relied on a\nsimple smoothing technique, called Stupid Backoff ,\nHea\ufb01eld et al. (2013) later showed how to scale\nKneser-Ney smoothing to Web-scale data. This\nallowed to train a 5-gram model on 975 billions to-\nkens from CommonCrawl, resulting in a model\nwith 500 billions n-grams (Buck et al., 2014).\nChelba et al. (2013) introduced the One Billion\nWor",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_11_2",
    "filename": "pdf1.pdf",
    "page_number": 11,
    "text": " This\nallowed to train a 5-gram model on 975 billions to-\nkens from CommonCrawl, resulting in a model\nwith 500 billions n-grams (Buck et al., 2014).\nChelba et al. (2013) introduced the One Billion\nWord benchmark, a large scale training dataset to\nmeasure the progress of language models.\nIn the context of neural language models, Joze-\nfowicz et al. (2016) obtained state-of-the-art re-\nsults on the Billion Word benchmark by scaling\nLSTMs to 1 billion parameters. Later, scaling\ntransformers lead to improvement on many NLP\ntasks. Notable models include BERT (Devlin et al.,\n2018), GPT-2 (Radford et al., 2019), Megatron-\nLM (Shoeybi et al., 2019), and T5 (Raffel et al.,\n2020). A signi\ufb01cant breakthrough was obtained\nwith GPT-3 (Brown et al., 2020), a model with\n175 billion parameters. This lead to a series of\nLarge Language Models , such as Jurassic-1 (Lieber\net al., 2021), Megatron-Turing NLG (Smith et al.,2022), Gopher (Rae et al., 2021), Chinchilla (Hoff-\nmann et al., 2022), PaLM (Chowdher",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_11_3",
    "filename": "pdf1.pdf",
    "page_number": 11,
    "text": "o a series of\nLarge Language Models , such as Jurassic-1 (Lieber\net al., 2021), Megatron-Turing NLG (Smith et al.,2022), Gopher (Rae et al., 2021), Chinchilla (Hoff-\nmann et al., 2022), PaLM (Chowdhery et al., 2022),\nOPT (Zhang et al., 2022), and GLM (Zeng et al.,\n2022). Hestness et al. (2017) and Rosenfeld et al.\n(2019) studied the impact of scaling on the perfor-\nmance of deep learning models, showing the exis-\ntence of power laws between the model and dataset\nsizes and the performance of the system. Kaplan\net al. (2020) derived power laws speci\ufb01cally for\ntransformer based language models, which were\nlater re\ufb01ned by Hoffmann et al. (2022), by adapting\nthe learning rate schedule when scaling datasets.\nFinally, Wei et al. (2022) studied the effect of scal-\ning on the abilities of large language models.\n8 Conclusion\nIn this paper, we presented a series of language\nmodels that are released openly, and competitive\nwith state-of-the-art foundation models. Most\nnotably, LLaMA-13B outperform",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_11_4",
    "filename": "pdf1.pdf",
    "page_number": 11,
    "text": "guage models.\n8 Conclusion\nIn this paper, we presented a series of language\nmodels that are released openly, and competitive\nwith state-of-the-art foundation models. Most\nnotably, LLaMA-13B outperforms GPT-3 while\nbeing more than 10 \u0002smaller, and LLaMA-65B is\ncompetitive with Chinchilla-70B and PaLM-540B.\nUnlike previous studies, we show that it is possible\nto achieve state-of-the-art performance by training\nexclusively on publicly available data, without\nresorting to proprietary datasets. We hope that\nreleasing these models to the research community\nwill accelerate the development of large language\nmodels, and help efforts to improve their robust-\nness and mitigate known issues such as toxicity and\nbias. Additionally, we observed like Chung et al.\n(2022) that \ufb01netuning these models on instructions\nlead to promising results, and we plan to further\ninvestigate this in future work. Finally, we plan to\nrelease larger models trained on larger pretraining\ncorpora in the future, since we hav",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_11_5",
    "filename": "pdf1.pdf",
    "page_number": 11,
    "text": "tructions\nlead to promising results, and we plan to further\ninvestigate this in future work. Finally, we plan to\nrelease larger models trained on larger pretraining\ncorpora in the future, since we have seen a constant\nimprovement in performance as we were scaling.",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_12_0",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": "Acknowledgements\nWe thank Daniel Haziza, Francisco Massa, Jeremy\nReizenstein, Artem Korenev, and Patrick Labatut\nfrom the xformers team. We thank Susan Zhang\nand Stephen Roller for their support on data\ndeduplication. We thank Luca Wehrstedt, Vegard\nMella, and Pierre-Emmanuel Mazar\u00e9 for their\nsupport on training stability. We thank Shubho\nSengupta, Kalyan Saladi, and all the AI infra team\nfor their support. We thank Jane Yu for her input\non evaluation. We thank Yongyi Hu for his help\non data collection.\nReferences\nJacob Austin, Augustus Odena, Maxwell Nye, Maarten\nBosma, Henryk Michalewski, David Dohan, Ellen\nJiang, Carrie Cai, Michael Terry, Quoc Le, and\nCharles Sutton. 2021. Program synthesis with large\nlanguage models.\nLalit R Bahl, Frederick Jelinek, and Robert L Mercer.\n1983. A maximum likelihood approach to continu-\nous speech recognition. IEEE transactions on pat-\ntern analysis and machine intelligence , pages 179\u2013\n190.\nYoshua Bengio, R\u00e9jean Ducharme, and Pascal Vincent.\n2000. A",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_12_1",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": "m likelihood approach to continu-\nous speech recognition. IEEE transactions on pat-\ntern analysis and machine intelligence , pages 179\u2013\n190.\nYoshua Bengio, R\u00e9jean Ducharme, and Pascal Vincent.\n2000. A neural probabilistic language model. Ad-\nvances in neural information processing systems , 13.\nYonatan Bisk, Rowan Zellers, Jianfeng Gao, Yejin\nChoi, et al. 2020. Piqa: Reasoning about physi-\ncal commonsense in natural language. In Proceed-\nings of the AAAI conference on arti\ufb01cial intelligence ,\npages 7432\u20137439.\nSid Black, Stella Biderman, Eric Hallahan, Quentin An-\nthony, Leo Gao, Laurence Golding, Horace He, Con-\nnor Leahy, Kyle McDonell, Jason Phang, et al. 2022.\nGpt-neox-20b: An open-source autoregressive lan-\nguage model. arXiv preprint arXiv:2204.06745 .\nThorsten Brants, Ashok C. Popat, Peng Xu, Franz J.\nOch, and Jeffrey Dean. 2007. Large language mod-\nels in machine translation. In Proceedings of the\n2007 Joint Conference on Empirical Methods in Nat-\nural Language Processing and Co",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_12_2",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": " Peng Xu, Franz J.\nOch, and Jeffrey Dean. 2007. Large language mod-\nels in machine translation. In Proceedings of the\n2007 Joint Conference on Empirical Methods in Nat-\nural Language Processing and Computational Nat-\nural Language Learning (EMNLP-CoNLL) , pages\n858\u2013867, Prague, Czech Republic. Association for\nComputational Linguistics.\nPeter F Brown, John Cocke, Stephen A Della Pietra,\nVincent J Della Pietra, Frederick Jelinek, John Laf-\nferty, Robert L Mercer, and Paul S Roossin. 1990. A\nstatistical approach to machine translation. Compu-\ntational linguistics , 16(2):79\u201385.\nTom B. Brown, Benjamin Mann, Nick Ryder, Melanie\nSubbiah, Jared Kaplan, Prafulla Dhariwal, Arvind\nNeelakantan, Pranav Shyam, Girish Sastry, AmandaAskell, Sandhini Agarwal, Ariel Herbert-V oss,\nGretchen Krueger, Tom Henighan, Rewon Child,\nAditya Ramesh, Daniel M. Ziegler, Jeffrey Wu,\nClemens Winter, Christopher Hesse, Mark Chen,\nEric Sigler, Mateusz Litwin, Scott Gray, Benjamin\nChess, Jack Clark, Christopher Berner,",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_12_3",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": "ighan, Rewon Child,\nAditya Ramesh, Daniel M. Ziegler, Jeffrey Wu,\nClemens Winter, Christopher Hesse, Mark Chen,\nEric Sigler, Mateusz Litwin, Scott Gray, Benjamin\nChess, Jack Clark, Christopher Berner, Sam Mc-\nCandlish, Alec Radford, Ilya Sutskever, and Dario\nAmodei. 2020. Language models are few-shot learn-\ners.\nChristian Buck, Kenneth Hea\ufb01eld, and Bas Van Ooyen.\n2014. N-gram counts and language models from the\ncommon crawl. In LREC , volume 2, page 4.\nCiprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge,\nThorsten Brants, Phillipp Koehn, and Tony Robin-\nson. 2013. One billion word benchmark for measur-\ning progress in statistical language modeling. arXiv\npreprint arXiv:1312.3005 .\nMark Chen, Jerry Tworek, Heewoo Jun, Qiming\nYuan, Henrique Ponde de Oliveira Pinto, Jared Ka-\nplan, Harri Edwards, Yuri Burda, Nicholas Joseph,\nGreg Brockman, Alex Ray, Raul Puri, Gretchen\nKrueger, Michael Petrov, Heidy Khlaaf, Girish Sas-\ntry, Pamela Mishkin, Brooke Chan, Scott Gray,\nNick Ryder, Mikhail Pavlo",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_12_4",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": "ds, Yuri Burda, Nicholas Joseph,\nGreg Brockman, Alex Ray, Raul Puri, Gretchen\nKrueger, Michael Petrov, Heidy Khlaaf, Girish Sas-\ntry, Pamela Mishkin, Brooke Chan, Scott Gray,\nNick Ryder, Mikhail Pavlov, Alethea Power, Lukasz\nKaiser, Mohammad Bavarian, Clemens Winter,\nPhilippe Tillet, Felipe Petroski Such, Dave Cum-\nmings, Matthias Plappert, Fotios Chantzis, Eliza-\nbeth Barnes, Ariel Herbert-V oss, William Hebgen\nGuss, Alex Nichol, Alex Paino, Nikolas Tezak, Jie\nTang, Igor Babuschkin, Suchir Balaji, Shantanu Jain,\nWilliam Saunders, Christopher Hesse, Andrew N.\nCarr, Jan Leike, Josh Achiam, Vedant Misra, Evan\nMorikawa, Alec Radford, Matthew Knight, Miles\nBrundage, Mira Murati, Katie Mayer, Peter Welin-\nder, Bob McGrew, Dario Amodei, Sam McCandlish,\nIlya Sutskever, and Wojciech Zaremba. 2021. Eval-\nuating large language models trained on code.\nAakanksha Chowdhery, Sharan Narang, Jacob Devlin,\nMaarten Bosma, Gaurav Mishra, Adam Roberts,\nPaul Barham, Hyung Won Chung, Charles Sutton,\nSebasti",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_12_5",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": " Eval-\nuating large language models trained on code.\nAakanksha Chowdhery, Sharan Narang, Jacob Devlin,\nMaarten Bosma, Gaurav Mishra, Adam Roberts,\nPaul Barham, Hyung Won Chung, Charles Sutton,\nSebastian Gehrmann, Parker Schuh, Kensen Shi,\nSasha Tsvyashchenko, Joshua Maynez, Abhishek\nRao, Parker Barnes, Yi Tay, Noam Shazeer, Vin-\nodkumar Prabhakaran, Emily Reif, Nan Du, Ben\nHutchinson, Reiner Pope, James Bradbury, Jacob\nAustin, Michael Isard, Guy Gur-Ari, Pengcheng\nYin, Toju Duke, Anselm Levskaya, Sanjay Ghe-\nmawat, Sunipa Dev, Henryk Michalewski, Xavier\nGarcia, Vedant Misra, Kevin Robinson, Liam Fe-\ndus, Denny Zhou, Daphne Ippolito, David Luan,\nHyeontaek Lim, Barret Zoph, Alexander Spiridonov,\nRyan Sepassi, David Dohan, Shivani Agrawal, Mark\nOmernick, Andrew M. Dai, Thanumalayan Sankara-\nnarayana Pillai, Marie Pellat, Aitor Lewkowycz,\nErica Moreira, Rewon Child, Oleksandr Polozov,\nKatherine Lee, Zongwei Zhou, Xuezhi Wang, Bren-\nnan Saeta, Mark Diaz, Orhan Firat, Michele Catasta,\nJason ",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_12_6",
    "filename": "pdf1.pdf",
    "page_number": 12,
    "text": "arayana Pillai, Marie Pellat, Aitor Lewkowycz,\nErica Moreira, Rewon Child, Oleksandr Polozov,\nKatherine Lee, Zongwei Zhou, Xuezhi Wang, Bren-\nnan Saeta, Mark Diaz, Orhan Firat, Michele Catasta,\nJason Wei, Kathy Meier-Hellstern, Douglas Eck,\nJeff Dean, Slav Petrov, and Noah Fiedel. 2022.\nPalm: Scaling language modeling with pathways.",
    "start_char": 4800,
    "end_char": 5800
  },
  {
    "chunk_id": "pdf1.pdf_13_0",
    "filename": "pdf1.pdf",
    "page_number": 13,
    "text": "Hyung Won Chung, Le Hou, S. Longpre, Barret\nZoph, Yi Tay, William Fedus, Eric Li, Xuezhi\nWang, Mostafa Dehghani, Siddhartha Brahma, Al-\nbert Webson, Shixiang Shane Gu, Zhuyun Dai,\nMirac Suzgun, Xinyun Chen, Aakanksha Chowdh-\nery, Dasha Valter, Sharan Narang, Gaurav Mishra,\nAdams Wei Yu, Vincent Zhao, Yanping Huang, An-\ndrew M. Dai, Hongkun Yu, Slav Petrov, Ed Huai\nhsin Chi, Jeff Dean, Jacob Devlin, Adam Roberts,\nDenny Zhou, Quoc Le, and Jason Wei. 2022. Scal-\ning instruction-\ufb01netuned language models. arXiv\npreprint arXiv:2210.11416 .\nChristopher Clark, Kenton Lee, Ming-Wei Chang,\nTom Kwiatkowski, Michael Collins, and Kristina\nToutanova. 2019. Boolq: Exploring the surprising\ndif\ufb01culty of natural yes/no questions. arXiv preprint\narXiv:1905.10044 .\nPeter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot,\nAshish Sabharwal, Carissa Schoenick, and Oyvind\nTafjord. 2018. Think you have solved question an-\nswering? try arc, the ai2 reasoning challenge. arXiv\npreprint arXiv:1803.05457 .\nKarl Cobbe,",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_13_1",
    "filename": "pdf1.pdf",
    "page_number": 13,
    "text": "har Khot,\nAshish Sabharwal, Carissa Schoenick, and Oyvind\nTafjord. 2018. Think you have solved question an-\nswering? try arc, the ai2 reasoning challenge. arXiv\npreprint arXiv:1803.05457 .\nKarl Cobbe, Vineet Kosaraju, Mohammad Bavarian,\nMark Chen, Heewoo Jun, Lukasz Kaiser, Matthias\nPlappert, Jerry Tworek, Jacob Hilton, Reiichiro\nNakano, et al. 2021. Training veri\ufb01ers to solve math\nword problems. arXiv preprint arXiv:2110.14168 .\nZihang Dai, Zhilin Yang, Yiming Yang, Jaime Car-\nbonell, Quoc V Le, and Ruslan Salakhutdinov.\n2019. Transformer-xl: Attentive language mod-\nels beyond a \ufb01xed-length context. arXiv preprint\narXiv:1901.02860 .\nTri Dao, Daniel Y Fu, Stefano Ermon, Atri Rudra,\nand Christopher R\u00e9. 2022. Flashattention: Fast and\nmemory-ef\ufb01cient exact attention with io-awareness.\narXiv preprint arXiv:2205.14135 .\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and\nKristina Toutanova. 2018. Bert: Pre-training of deep\nbidirectional transformers for language understand-\ning. arXiv preprint ar",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_13_2",
    "filename": "pdf1.pdf",
    "page_number": 13,
    "text": "reprint arXiv:2205.14135 .\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and\nKristina Toutanova. 2018. Bert: Pre-training of deep\nbidirectional transformers for language understand-\ning. arXiv preprint arXiv:1810.04805 .\nJeffrey L Elman. 1990. Finding structure in time. Cog-\nnitive science , 14(2):179\u2013211.\nDaniel Fried, Armen Aghajanyan, Jessy Lin, Sida\nWang, Eric Wallace, Freda Shi, Ruiqi Zhong, Wen-\ntau Yih, Luke Zettlemoyer, and Mike Lewis. 2022.\nIncoder: A generative model for code in\ufb01lling and\nsynthesis. arXiv preprint arXiv:2204.05999 .\nLeo Gao, Stella Biderman, Sid Black, Laurence Gold-\ning, Travis Hoppe, Charles Foster, Jason Phang,\nHorace He, Anish Thite, Noa Nabeshima, Shawn\nPresser, and Connor Leahy. 2020. The Pile: An\n800gb dataset of diverse text for language modeling.\narXiv preprint arXiv:2101.00027 .\nLeo Gao, Jonathan Tow, Stella Biderman, Sid Black,\nAnthony DiPo\ufb01, Charles Foster, Laurence Golding,\nJeffrey Hsu, Kyle McDonell, Niklas Muennighoff,Jason Phang, Laria Reynolds, E",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_13_3",
    "filename": "pdf1.pdf",
    "page_number": 13,
    "text": "int arXiv:2101.00027 .\nLeo Gao, Jonathan Tow, Stella Biderman, Sid Black,\nAnthony DiPo\ufb01, Charles Foster, Laurence Golding,\nJeffrey Hsu, Kyle McDonell, Niklas Muennighoff,Jason Phang, Laria Reynolds, Eric Tang, Anish\nThite, Ben Wang, Kevin Wang, and Andy Zou. 2021.\nA framework for few-shot language model evalua-\ntion.\nSamuel Gehman, Suchin Gururangan, Maarten Sap,\nYejin Choi, and Noah A Smith. 2020. Realtoxici-\ntyprompts: Evaluating neural toxic degeneration in\nlanguage models. arXiv preprint arXiv:2009.11462 .\nAlex Graves. 2013. Generating sequences with\nrecurrent neural networks. arXiv preprint\narXiv:1308.0850 .\nKenneth Hea\ufb01eld, Ivan Pouzyrevsky, Jonathan H Clark,\nand Philipp Koehn. 2013. Scalable modi\ufb01ed kneser-\nney language model estimation. In Proceedings of\nthe 51st Annual Meeting of the Association for Com-\nputational Linguistics (Volume 2: Short Papers) ,\npages 690\u2013696.\nDan Hendrycks, Collin Burns, Steven Basart, Andy\nZou, Mantas Mazeika, Dawn Song, and Jacob Stein-\nhardt. 2020.",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_13_4",
    "filename": "pdf1.pdf",
    "page_number": 13,
    "text": "the Association for Com-\nputational Linguistics (Volume 2: Short Papers) ,\npages 690\u2013696.\nDan Hendrycks, Collin Burns, Steven Basart, Andy\nZou, Mantas Mazeika, Dawn Song, and Jacob Stein-\nhardt. 2020. Measuring massive multitask language\nunderstanding. arXiv preprint arXiv:2009.03300 .\nDan Hendrycks, Collin Burns, Saurav Kadavath, Akul\nArora, Steven Basart, Eric Tang, Dawn Song, and\nJacob Steinhardt. 2021. Measuring mathematical\nproblem solving with the math dataset. arXiv\npreprint arXiv:2103.03874 .\nJoel Hestness, Sharan Narang, Newsha Ardalani, Gre-\ngory Diamos, Heewoo Jun, Hassan Kianinejad,\nMd Patwary, Mostofa Ali, Yang Yang, and Yanqi\nZhou. 2017. Deep learning scaling is predictable,\nempirically. arXiv preprint arXiv:1712.00409 .\nSepp Hochreiter and J\u00fcrgen Schmidhuber. 1997.\nLong short-term memory. Neural computation ,\n9(8):1735\u20131780.\nJordan Hoffmann, Sebastian Borgeaud, Arthur Mensch,\nElena Buchatskaya, Trevor Cai, Eliza Rutherford,\nDiego de Las Casas, Lisa Anne Hendricks, Johann",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_13_5",
    "filename": "pdf1.pdf",
    "page_number": 13,
    "text": "t-term memory. Neural computation ,\n9(8):1735\u20131780.\nJordan Hoffmann, Sebastian Borgeaud, Arthur Mensch,\nElena Buchatskaya, Trevor Cai, Eliza Rutherford,\nDiego de Las Casas, Lisa Anne Hendricks, Johannes\nWelbl, Aidan Clark, Tom Hennigan, Eric Noland,\nKatie Millican, George van den Driessche, Bogdan\nDamoc, Aurelia Guy, Simon Osindero, Karen Si-\nmonyan, Erich Elsen, Jack W. Rae, Oriol Vinyals,\nand Laurent Sifre. 2022. Training compute-optimal\nlarge language models.\nSrinivasan Iyer, Xi Victoria Lin, Ramakanth Pasunuru,\nTodor Mihaylov, D\u00e1niel Simig, Ping Yu, Kurt Shus-\nter, Tianlu Wang, Qing Liu, Punit Singh Koura, et al.\n2022. Opt-iml: Scaling language model instruc-\ntion meta learning through the lens of generalization.\narXiv preprint arXiv:2212.12017 .\nMandar Joshi, Eunsol Choi, Daniel S Weld, and Luke\nZettlemoyer. 2017. Triviaqa: A large scale distantly\nsupervised challenge dataset for reading comprehen-\nsion. arXiv preprint arXiv:1705.03551 .",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_14_0",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": "Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam\nShazeer, and Yonghui Wu. 2016. Exploring\nthe limits of language modeling. arXiv preprint\narXiv:1602.02410 .\nJared Kaplan, Sam McCandlish, Tom Henighan,\nTom B Brown, Benjamin Chess, Rewon Child, Scott\nGray, Alec Radford, Jeffrey Wu, and Dario Amodei.\n2020. Scaling laws for neural language models.\narXiv preprint arXiv:2001.08361 .\nSlava Katz. 1987. Estimation of probabilities from\nsparse data for the language model component of a\nspeech recognizer. IEEE transactions on acoustics,\nspeech, and signal processing , 35(3):400\u2013401.\nReinhard Kneser and Hermann Ney. 1995. Improved\nbacking-off for m-gram language modeling. In 1995\ninternational conference on acoustics, speech, and\nsignal processing , volume 1, pages 181\u2013184. IEEE.\nVijay Korthikanti, Jared Casper, Sangkug Lym,\nLawrence McAfee, Michael Andersch, Mohammad\nShoeybi, and Bryan Catanzaro. 2022. Reducing ac-\ntivation recomputation in large transformer models.\narXiv preprint arXiv:2205.",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_14_1",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": ", Jared Casper, Sangkug Lym,\nLawrence McAfee, Michael Andersch, Mohammad\nShoeybi, and Bryan Catanzaro. 2022. Reducing ac-\ntivation recomputation in large transformer models.\narXiv preprint arXiv:2205.05198 .\nTaku Kudo and John Richardson. 2018. Sentencepiece:\nA simple and language independent subword tok-\nenizer and detokenizer for neural text processing.\narXiv preprint arXiv:1808.06226 .\nKeita Kurita, Nidhi Vyas, Ayush Pareek, Alan W Black,\nand Yulia Tsvetkov. 2019. Quantifying social bi-\nases in contextual word representations. In 1st ACL\nWorkshop on Gender Bias for Natural Language\nProcessing .\nTom Kwiatkowski, Jennimaria Palomaki, Olivia Red-\n\ufb01eld, Michael Collins, Ankur Parikh, Chris Alberti,\nDanielle Epstein, Illia Polosukhin, Jacob Devlin,\nKenton Lee, et al. 2019. Natural questions: a bench-\nmark for question answering research. Transactions\nof the Association for Computational Linguistics ,\n7:453\u2013466.\nGuokun Lai, Qizhe Xie, Hanxiao Liu, Yiming Yang,\nand Eduard Hovy. 2017. Race:",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_14_2",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": " a bench-\nmark for question answering research. Transactions\nof the Association for Computational Linguistics ,\n7:453\u2013466.\nGuokun Lai, Qizhe Xie, Hanxiao Liu, Yiming Yang,\nand Eduard Hovy. 2017. Race: Large-scale reading\ncomprehension dataset from examinations. arXiv\npreprint arXiv:1704.04683 .\nAitor Lewkowycz, Anders Johan Andreassen,\nDavid Dohan, Ethan Dyer, Henryk Michalewski,\nVinay Venkatesh Ramasesh, Ambrose Slone, Cem\nAnil, Imanol Schlag, Theo Gutman-Solo, Yuhuai\nWu, Behnam Neyshabur, Guy Gur-Ari, and Vedant\nMisra. 2022. Solving quantitative reasoning prob-\nlems with language models. In Advances in Neural\nInformation Processing Systems .\nOpher Lieber, Or Sharir, Barak Lenz, and Yoav\nShoham. 2021. Jurassic-1: Technical details and\nevaluation. White Paper. AI21 Labs , 1.\nStephanie Lin, Jacob Hilton, and Owain Evans. 2021.\nTruthfulqa: Measuring how models mimic human\nfalsehoods. arXiv preprint arXiv:2109.07958 .Ilya Loshchilov and Frank Hutter. 2017. Decou-\npled weight decay regular",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_14_3",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": " Jacob Hilton, and Owain Evans. 2021.\nTruthfulqa: Measuring how models mimic human\nfalsehoods. arXiv preprint arXiv:2109.07958 .Ilya Loshchilov and Frank Hutter. 2017. Decou-\npled weight decay regularization. arXiv preprint\narXiv:1711.05101 .\nMatthew V Mahoney. 1999. Text compression as a test\nfor arti\ufb01cial intelligence. AAAI/IAAI , 970.\nTodor Mihaylov, Peter Clark, Tushar Khot, and Ashish\nSabharwal. 2018. Can a suit of armor conduct elec-\ntricity? a new dataset for open book question answer-\ning. arXiv preprint arXiv:1809.02789 .\nTomas Mikolov, Martin Kara\ufb01\u00e1t, Lukas Burget, Jan\nCernock `y, and Sanjeev Khudanpur. 2010. Recur-\nrent neural network based language model. In In-\nterspeech , pages 1045\u20131048. Makuhari.\nNikita Nangia, Clara Vania, Rasika Bhalerao, and\nSamuel R. Bowman. 2020. CrowS-pairs: A chal-\nlenge dataset for measuring social biases in masked\nlanguage models. In EMNLP 2020 .\nErik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu,\nHuan Wang, Yingbo Zhou, Silvio Savarese, and\nCaimi",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_14_4",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": "-pairs: A chal-\nlenge dataset for measuring social biases in masked\nlanguage models. In EMNLP 2020 .\nErik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu,\nHuan Wang, Yingbo Zhou, Silvio Savarese, and\nCaiming Xiong. 2022. Codegen: An open large lan-\nguage model for code with multi-turn program syn-\nthesis. arXiv preprint arXiv:2203.13474 .\nLong Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida,\nCarroll Wainwright, Pamela Mishkin, Chong Zhang,\nSandhini Agarwal, Katarina Slama, Alex Gray, John\nSchulman, Jacob Hilton, Fraser Kelton, Luke Miller,\nMaddie Simens, Amanda Askell, Peter Welinder,\nPaul Christiano, Jan Leike, and Ryan Lowe. 2022.\nTraining language models to follow instructions\nwith human feedback. In Advances in Neural Infor-\nmation Processing Systems .\nMarkus N Rabe and Charles Staats. 2021. Self-\nattention does not need o(n2)memory. arXiv\npreprint arXiv:2112.05682 .\nAlec Radford, Karthik Narasimhan, Tim Salimans, Ilya\nSutskever, et al. 2018. Improving language under-\nstanding by generative",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_14_5",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": "lf-\nattention does not need o(n2)memory. arXiv\npreprint arXiv:2112.05682 .\nAlec Radford, Karthik Narasimhan, Tim Salimans, Ilya\nSutskever, et al. 2018. Improving language under-\nstanding by generative pre-training.\nAlec Radford, Jeffrey Wu, Rewon Child, David Luan,\nDario Amodei, Ilya Sutskever, et al. 2019. Lan-\nguage models are unsupervised multitask learners.\nOpenAI blog , 1(8):9.\nJack W. Rae, Sebastian Borgeaud, Trevor Cai, Katie\nMillican, Jordan Hoffmann, Francis Song, John\nAslanides, Sarah Henderson, Roman Ring, Susan-\nnah Young, Eliza Rutherford, Tom Hennigan, Ja-\ncob Menick, Albin Cassirer, Richard Powell, George\nvan den Driessche, Lisa Anne Hendricks, Mari-\nbeth Rauh, Po-Sen Huang, Amelia Glaese, Jo-\nhannes Welbl, Sumanth Dathathri, Saffron Huang,\nJonathan Uesato, John Mellor, Irina Higgins, An-\ntonia Creswell, Nat McAleese, Amy Wu, Erich\nElsen, Siddhant Jayakumar, Elena Buchatskaya,\nDavid Budden, Esme Sutherland, Karen Simonyan,\nMichela Paganini, Laurent Sifre, Lena Martens,\nX",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_14_6",
    "filename": "pdf1.pdf",
    "page_number": 14,
    "text": "a Higgins, An-\ntonia Creswell, Nat McAleese, Amy Wu, Erich\nElsen, Siddhant Jayakumar, Elena Buchatskaya,\nDavid Budden, Esme Sutherland, Karen Simonyan,\nMichela Paganini, Laurent Sifre, Lena Martens,\nXiang Lorraine Li, Adhiguna Kuncoro, Aida Ne-\nmatzadeh, Elena Gribovskaya, Domenic Donato,",
    "start_char": 4800,
    "end_char": 5800
  },
  {
    "chunk_id": "pdf1.pdf_15_0",
    "filename": "pdf1.pdf",
    "page_number": 15,
    "text": "Angeliki Lazaridou, Arthur Mensch, Jean-Baptiste\nLespiau, Maria Tsimpoukelli, Nikolai Grigorev,\nDoug Fritz, Thibault Sottiaux, Mantas Pajarskas,\nToby Pohlen, Zhitao Gong, Daniel Toyama, Cy-\nprien de Masson d\u2019Autume, Yujia Li, Tayfun Terzi,\nVladimir Mikulik, Igor Babuschkin, Aidan Clark,\nDiego de Las Casas, Aurelia Guy, Chris Jones,\nJames Bradbury, Matthew Johnson, Blake Hecht-\nman, Laura Weidinger, Iason Gabriel, William Isaac,\nEd Lockhart, Simon Osindero, Laura Rimell, Chris\nDyer, Oriol Vinyals, Kareem Ayoub, Jeff Stan-\nway, Lorrayne Bennett, Demis Hassabis, Koray\nKavukcuoglu, and Geoffrey Irving. 2021. Scal-\ning language models: Methods, analysis & insights\nfrom training gopher.\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine\nLee, Sharan Narang, Michael Matena, Yanqi Zhou,\nWei Li, and Peter J Liu. 2020. Exploring the limits\nof transfer learning with a uni\ufb01ed text-to-text trans-\nformer. The Journal of Machine Learning Research ,\n21(1):5485\u20135551.\nJonathan S Rosenfeld, Amir Rosenfel",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_15_1",
    "filename": "pdf1.pdf",
    "page_number": 15,
    "text": "d Peter J Liu. 2020. Exploring the limits\nof transfer learning with a uni\ufb01ed text-to-text trans-\nformer. The Journal of Machine Learning Research ,\n21(1):5485\u20135551.\nJonathan S Rosenfeld, Amir Rosenfeld, Yonatan Be-\nlinkov, and Nir Shavit. 2019. A constructive predic-\ntion of the generalization error across scales. arXiv\npreprint arXiv:1909.12673 .\nRachel Rudinger, Jason Naradowsky, Brian Leonard,\nand Benjamin Van Durme. 2018. Gender bias in\ncoreference resolution. In NAACL-HLT 2018 .\nKeisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavat-\nula, and Yejin Choi. 2021. Winogrande: An adver-\nsarial winograd schema challenge at scale. Commu-\nnications of the ACM , 64(9):99\u2013106.\nMaarten Sap, Hannah Rashkin, Derek Chen, Ronan\nLeBras, and Yejin Choi. 2019. Socialiqa: Com-\nmonsense reasoning about social interactions. arXiv\npreprint arXiv:1904.09728 .\nTeven Le Scao, Angela Fan, Christopher Akiki, El-\nlie Pavlick, Suzana Ili \u00b4c, Daniel Hesslow, Ro-\nman Castagn\u00e9, Alexandra Sasha Luccioni, Fran\u00e7ois\nYvo",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_15_2",
    "filename": "pdf1.pdf",
    "page_number": 15,
    "text": "l interactions. arXiv\npreprint arXiv:1904.09728 .\nTeven Le Scao, Angela Fan, Christopher Akiki, El-\nlie Pavlick, Suzana Ili \u00b4c, Daniel Hesslow, Ro-\nman Castagn\u00e9, Alexandra Sasha Luccioni, Fran\u00e7ois\nYvon, Matthias Gall\u00e9, et al. 2022. Bloom: A 176b-\nparameter open-access multilingual language model.\narXiv preprint arXiv:2211.05100 .\nRico Sennrich, Barry Haddow, and Alexandra Birch.\n2015. Neural machine translation of rare words with\nsubword units. arXiv preprint arXiv:1508.07909 .\nClaude E Shannon. 1948. A mathematical theory of\ncommunication. The Bell system technical journal ,\n27(3):379\u2013423.\nClaude E Shannon. 1951. Prediction and entropy\nof printed english. Bell system technical journal ,\n30(1):50\u201364.\nNoam Shazeer. 2020. Glu variants improve trans-\nformer. arXiv preprint arXiv:2002.05202 .Emily Sheng, Kai-Wei Chang, Premkumar Natarajan,\nand Nanyun Peng. 2019. The woman worked as a\nbabysitter: On biases in language generation. arXiv\npreprint arXiv:1909.01326 .\nMohammad Shoeybi, Mostofa P",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_15_3",
    "filename": "pdf1.pdf",
    "page_number": 15,
    "text": "mily Sheng, Kai-Wei Chang, Premkumar Natarajan,\nand Nanyun Peng. 2019. The woman worked as a\nbabysitter: On biases in language generation. arXiv\npreprint arXiv:1909.01326 .\nMohammad Shoeybi, Mostofa Patwary, Raul Puri,\nPatrick LeGresley, Jared Casper, and Bryan Catan-\nzaro. 2019. Megatron-lm: Training multi-billion pa-\nrameter language models using model parallelism.\narXiv preprint arXiv:1909.08053 .\nShaden Smith, Mostofa Patwary, Brandon Norick,\nPatrick LeGresley, Samyam Rajbhandari, Jared\nCasper, Zhun Liu, Shrimai Prabhumoye, George\nZerveas, Vijay Korthikanti, Elton Zhang, Rewon\nChild, Reza Yazdani Aminabadi, Julie Bernauer, Xia\nSong, Mohammad Shoeybi, Yuxiong He, Michael\nHouston, Saurabh Tiwary, and Bryan Catanzaro.\n2022. Using deepspeed and megatron to train\nmegatron-turing nlg 530b, a large-scale generative\nlanguage model.\nJianlin Su, Yu Lu, Shengfeng Pan, Ahmed Murtadha,\nBo Wen, and Yunfeng Liu. 2021. Roformer: En-\nhanced transformer with rotary position embedding.\narXiv preprint",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_15_4",
    "filename": "pdf1.pdf",
    "page_number": 15,
    "text": " large-scale generative\nlanguage model.\nJianlin Su, Yu Lu, Shengfeng Pan, Ahmed Murtadha,\nBo Wen, and Yunfeng Liu. 2021. Roformer: En-\nhanced transformer with rotary position embedding.\narXiv preprint arXiv:2104.09864 .\nRomal Thoppilan, Daniel De Freitas, Jamie Hall,\nNoam Shazeer, Apoorv Kulshreshtha, Heng-Tze\nCheng, Alicia Jin, Taylor Bos, Leslie Baker, Yu Du,\nYaGuang Li, Hongrae Lee, Huaixiu Steven Zheng,\nAmin Ghafouri, Marcelo Menegali, Yanping Huang,\nMaxim Krikun, Dmitry Lepikhin, James Qin, De-\nhao Chen, Yuanzhong Xu, Zhifeng Chen, Adam\nRoberts, Maarten Bosma, Vincent Zhao, Yanqi\nZhou, Chung-Ching Chang, Igor Krivokon, Will\nRusch, Marc Pickett, Pranesh Srinivasan, Laichee\nMan, Kathleen Meier-Hellstern, Meredith Ringel\nMorris, Tulsee Doshi, Renelito Delos Santos, Toju\nDuke, Johnny Soraker, Ben Zevenbergen, Vinod-\nkumar Prabhakaran, Mark Diaz, Ben Hutchinson,\nKristen Olson, Alejandra Molina, Erin Hoffman-\nJohn, Josh Lee, Lora Aroyo, Ravi Rajakumar,\nAlena Butryna, Matthew Lamm, Vikto",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_15_5",
    "filename": "pdf1.pdf",
    "page_number": 15,
    "text": "ker, Ben Zevenbergen, Vinod-\nkumar Prabhakaran, Mark Diaz, Ben Hutchinson,\nKristen Olson, Alejandra Molina, Erin Hoffman-\nJohn, Josh Lee, Lora Aroyo, Ravi Rajakumar,\nAlena Butryna, Matthew Lamm, Viktoriya Kuzmina,\nJoe Fenton, Aaron Cohen, Rachel Bernstein, Ray\nKurzweil, Blaise Aguera-Arcas, Claire Cui, Marian\nCroak, Ed Chi, and Quoc Le. 2022. Lamda: Lan-\nguage models for dialog applications.\nA. M. Turing. 1950. Computing Machinery and Intel-\nligence . [Oxford University Press, Mind Associa-\ntion].\nAshish Vaswani, Noam Shazeer, Niki Parmar, Jakob\nUszkoreit, Llion Jones, Aidan N Gomez, \u0141 ukasz\nKaiser, and Illia Polosukhin. 2017. Attention is all\nyou need. In Advances in Neural Information Pro-\ncessing Systems 30 , pages 5998\u20136008.\nBen Wang and Aran Komatsuzaki. 2021. GPT-J-\n6B: A 6 Billion Parameter Autoregressive Lan-\nguage Model. https://github.com/kingoflolz/\nmesh-transformer-jax .\nXuezhi Wang, Jason Wei, Dale Schuurmans, Quoc\nLe, Ed Chi, Sharan Narang, Aakanksha Chowdhery,",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_16_0",
    "filename": "pdf1.pdf",
    "page_number": 16,
    "text": "and Denny Zhou. 2022. Self-consistency improves\nchain of thought reasoning in language models.\nJason Wei, Yi Tay, Rishi Bommasani, Colin Raffel,\nBarret Zoph, Sebastian Borgeaud, Dani Yogatama,\nMaarten Bosma, Denny Zhou, Donald Metzler, et al.\n2022. Emergent abilities of large language models.\narXiv preprint arXiv:2206.07682 .\nGuillaume Wenzek, Marie-Anne Lachaux, Alexis Con-\nneau, Vishrav Chaudhary, Francisco Guzm\u00e1n, Ar-\nmand Joulin, and Edouard Grave. 2020. CCNet: Ex-\ntracting high quality monolingual datasets from web\ncrawl data. In Language Resources and Evaluation\nConference .\nCarole-Jean Wu, Ramya Raghavendra, Udit Gupta,\nBilge Acun, Newsha Ardalani, Kiwan Maeng, Glo-\nria Chang, Fiona Aga, Jinshi Huang, Charles Bai,\net al. 2022. Sustainable ai: Environmental implica-\ntions, challenges and opportunities. Proceedings of\nMachine Learning and Systems , 4:795\u2013813.\nRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali\nFarhadi, and Yejin Choi. 2019. Hellaswag: Can a\nmachine really \ufb01nish your se",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_16_1",
    "filename": "pdf1.pdf",
    "page_number": 16,
    "text": " and opportunities. Proceedings of\nMachine Learning and Systems , 4:795\u2013813.\nRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali\nFarhadi, and Yejin Choi. 2019. Hellaswag: Can a\nmachine really \ufb01nish your sentence? arXiv preprint\narXiv:1905.07830 .\nAohan Zeng, Xiao Liu, Zhengxiao Du, Zihan Wang,\nHanyu Lai, Ming Ding, Zhuoyi Yang, Yifan Xu,\nWendi Zheng, Xiao Xia, Weng Lam Tam, Zixuan\nMa, Yufei Xue, Jidong Zhai, Wenguang Chen, Peng\nZhang, Yuxiao Dong, and Jie Tang. 2022. Glm-\n130b: An open bilingual pre-trained model.\nBiao Zhang and Rico Sennrich. 2019. Root mean\nsquare layer normalization. Advances in Neural In-\nformation Processing Systems , 32.\nSusan Zhang, Stephen Roller, Naman Goyal, Mikel\nArtetxe, Moya Chen, Shuohui Chen, Christopher De-\nwan, Mona Diab, Xian Li, Xi Victoria Lin, et al.\n2022. Opt: Open pre-trained transformer language\nmodels. arXiv preprint arXiv:2205.01068 .",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_17_0",
    "filename": "pdf1.pdf",
    "page_number": 17,
    "text": "A Question Answering\nWe evaluate LLaMA on Natural Questions and TriviaQA. For Natural Questions we use the test split used\nfor open-domain question answering containing 3610 questions. For TriviaQA we evaluate on the dev set\nof the \ufb01ltered set. This differs from GPT-3 and PaLM, which evaluate on the test set of the un\ufb01ltered set\nfor which the online evaluation server is not available anymore5.\nWe generate answers using greedy decoding, and extract an answer from the generation by stopping\nat the \ufb01rst line break, \ufb01nal dot or comma. Generated answers are evaluated with the standard exact\nmatch metric: a generated answer is considered correct if it matches any answer of the list of answers\nafter normalization. For this normalization step we lowercase generated answers and remove articles,\npunctuation and duplicate whitespaces. Figure 3 presents formatted examples in the 1-shot setting for\nNatural Questions and TriviaQA respectively. In all settings, we preprend the string Answer these\nque",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_17_1",
    "filename": "pdf1.pdf",
    "page_number": 17,
    "text": "ctuation and duplicate whitespaces. Figure 3 presents formatted examples in the 1-shot setting for\nNatural Questions and TriviaQA respectively. In all settings, we preprend the string Answer these\nquestions:\\n to the list of questions and answers.\nContext!Answer these questions: Context!Answer these questions:\nQ: Who sang who wants to be a millionaire in high society? Q: In Scotland a bothy/bothie is a?\nA: Frank Sinatra A: House\nQ: Who wrote the book the origin of species? Q: The ancient city of Troy is located in what modern country?\nA: A:\nTarget!Charles Darwin Target!Turkey\nFigure 3: Formatted dataset example for Natural Questions (left) & TriviaQA (right).\n5https://competitions.codalab.org/competitions/17208",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_18_0",
    "filename": "pdf1.pdf",
    "page_number": 18,
    "text": "B MMLU\nGPT-3 Gopher Chinchilla LLaMA LLaMA-I\n175B 280B 70B 7B 13B 33B 65B 65B\nAbstract Algebra STEM 30.0 25.0 31.0 29.0 34.0 32.0 34.0 31.0\nAnatomy STEM 48.0 56.3 70.4 37.0 45.9 51.9 57.8 62.2\nAstronomy STEM 49.0 65.8 73.0 33.6 46.1 61.8 72.4 81.6\nBusiness Ethics Other 46.0 70.0 72.0 40.0 45.0 56.0 57.0 72.0\nClinical Knowledge Other 48.0 67.2 75.1 35.1 45.7 57.4 65.3 69.1\nCollege Biology STEM 45.0 70.8 79.9 37.5 45.1 58.3 68.8 81.9\nCollege Chemistry STEM 26.0 45.0 51.0 32.0 30.0 45.0 50.0 45.0\nCollege Computer Science STEM 46.0 49.0 51.0 29.0 39.0 45.0 47.0 51.0\nCollege Mathematics STEM 34.5 37.0 32.0 33.0 32.0 40.0 35.0 36.0\nCollege Medicine Other 48.0 60.1 66.5 30.6 42.8 52.0 54.3 63.0\nCollege Physics STEM 28.0 34.3 46.1 26.5 18.6 28.4 36.3 46.1\nComputer Security STEM 57.0 65.0 76.0 45.0 65.0 66.0 79.0 79.0\nConceptual Physics STEM 36.5 49.4 67.2 36.6 41.3 51.5 59.6 66.4\nEconometrics Social Science 33.0 43.0 38.6 23.7 27.2 35.1 40.4 52.6\nElectrical Engineering STEM 50.0 60.0 62.1 26.9",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_18_1",
    "filename": "pdf1.pdf",
    "page_number": 18,
    "text": " 65.0 66.0 79.0 79.0\nConceptual Physics STEM 36.5 49.4 67.2 36.6 41.3 51.5 59.6 66.4\nEconometrics Social Science 33.0 43.0 38.6 23.7 27.2 35.1 40.4 52.6\nElectrical Engineering STEM 50.0 60.0 62.1 26.9 40.7 49.7 53.8 60.7\nElementary Mathematics STEM 30.0 33.6 41.5 24.3 24.9 36.0 37.8 42.9\nFormal Logic Humanities 29.0 35.7 33.3 27.0 33.3 34.1 44.4 47.6\nGlobal Facts Other 37.0 38.0 39.0 29.0 35.0 35.0 39.0 40.0\nHigh School Biology STEM 48.0 71.3 80.3 34.5 52.6 67.7 73.9 82.9\nHigh School Chemistry STEM 33.0 47.8 58.1 28.1 28.6 41.9 40.4 44.8\nHigh School Computer Science STEM 39.0 54.0 58.0 31.0 48.0 60.0 67.0 73.0\nHigh School European History Humanities 54.0 72.1 78.8 44.2 61.8 73.9 78.8 86.1\nHigh School Geography Social Science 58.0 76.8 86.4 34.3 54.6 70.7 77.8 87.9\nHigh School Government And Politics Social Science 58.0 83.9 91.2 44.6 66.3 82.9 88.1 92.8\nHigh School Macroeconomics Social Science 40.5 65.1 70.5 35.4 44.4 56.9 65.9 69.2\nHigh School Mathematics STEM 28.0 23.7 31.9 24.8 23.",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_18_2",
    "filename": "pdf1.pdf",
    "page_number": 18,
    "text": "d Politics Social Science 58.0 83.9 91.2 44.6 66.3 82.9 88.1 92.8\nHigh School Macroeconomics Social Science 40.5 65.1 70.5 35.4 44.4 56.9 65.9 69.2\nHigh School Mathematics STEM 28.0 23.7 31.9 24.8 23.7 27.0 34.4 37.0\nHigh School Microeconomics Social Science 42.0 66.4 77.7 31.9 47.5 55.5 68.9 78.6\nHigh School Physics STEM 28.0 33.8 36.4 26.5 28.5 35.8 37.1 41.7\nHigh School Psychology Social Science 61.0 81.8 86.6 47.3 60.9 76.2 82.2 87.9\nHigh School Statistics STEM 30.5 50.0 58.8 35.2 30.1 45.4 58.3 59.3\nHigh School Us History Humanities 53.0 78.9 83.3 39.7 58.3 77.9 83.8 90.7\nHigh School World History Humanities 56.0 75.1 85.2 40.9 66.2 79.3 83.1 89.0\nHuman Aging Other 50.0 66.4 77.6 40.8 54.7 67.7 69.5 72.2\nHuman Sexuality Social Science 54.0 67.2 86.3 36.6 58.8 64.1 77.9 87.0\nInternational Law Humanities 55.5 77.7 90.9 51.2 62.8 72.7 79.3 87.6\nJurisprudence Humanities 55.0 71.3 79.6 38.9 51.9 70.4 73.2 85.2\nLogical Fallacies Humanities 48.0 72.4 80.4 39.3 52.8 68.1 77.3 80.4\nMachine",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_18_3",
    "filename": "pdf1.pdf",
    "page_number": 18,
    "text": "nal Law Humanities 55.5 77.7 90.9 51.2 62.8 72.7 79.3 87.6\nJurisprudence Humanities 55.0 71.3 79.6 38.9 51.9 70.4 73.2 85.2\nLogical Fallacies Humanities 48.0 72.4 80.4 39.3 52.8 68.1 77.3 80.4\nMachine Learning STEM 31.0 41.1 41.1 23.2 31.3 39.3 49.1 52.7\nManagement Other 56.0 77.7 82.5 35.0 66.0 77.7 82.5 83.5\nMarketing Other 60.0 83.3 89.7 46.6 71.8 83.3 85.9 92.7\nMedical Genetics Other 40.0 69.0 69.0 43.0 52.0 67.0 67.0 68.0\nMiscellaneous Other 60.0 75.7 84.5 42.4 65.4 78.5 82.1 84.3\nMoral Disputes Humanities 44.5 66.8 77.5 40.2 50.9 66.2 72.3 76.9\nMoral Scenarios Humanities 26.0 40.2 36.5 24.3 30.1 38.2 48.9 55.9\nNutrition Other 47.0 69.9 77.1 37.6 51.6 62.8 67.3 74.5\nPhilosophy Humanities 51.0 68.8 79.4 39.9 54.0 66.2 74.0 79.1\nPrehistory Humanities 53.0 67.6 81.2 36.1 51.5 67.0 75.3 79.0\nProfessional Accounting Other 33.0 44.3 52.1 25.9 35.8 43.6 46.5 56.0\nProfessional Law Humanities 34.5 44.5 56.5 30.2 38.0 45.9 49.1 54.4\nProfessional Medicine Other 36.0 64.0 75.4 44.5 50.4 54.0 ",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_18_4",
    "filename": "pdf1.pdf",
    "page_number": 18,
    "text": "9.0\nProfessional Accounting Other 33.0 44.3 52.1 25.9 35.8 43.6 46.5 56.0\nProfessional Law Humanities 34.5 44.5 56.5 30.2 38.0 45.9 49.1 54.4\nProfessional Medicine Other 36.0 64.0 75.4 44.5 50.4 54.0 61.4 70.6\nProfessional Psychology Social Science 44.5 68.1 75.7 35.1 47.7 62.9 65.7 71.4\nPublic Relations Social Science 48.0 71.8 73.6 40.9 60.9 67.3 73.6 74.6\nSecurity Studies Social Science 52.0 64.9 75.9 31.8 53.9 65.3 71.8 77.6\nSociology Social Science 53.0 84.1 91.0 46.8 61.2 78.6 78.6 88.1\nUs Foreign Policy Social Science 69.0 81.0 92.0 46.0 80.0 83.0 86.0 87.0\nVirology Other 46.0 47.0 53.6 30.1 43.4 50.0 53.0 57.8\nWorld Religions Humanities 55.0 84.2 87.7 50.9 67.8 81.3 81.3 84.2\nHumanities 40.6 56.2 63.6 34.0 45.0 55.8 61.8 67.4\nSTEM 36.7 47.4 54.9 30.5 35.8 46.0 51.7 56.6\nSocial Science 50.5 71.9 79.3 38.3 53.8 66.7 72.9 79.2\nOthers 49.0 66.1 73.9 38.1 53.3 63.4 67.4 72.6\nAll 43.9 60.0 67.6 35.1 46.9 57.8 63.4 68.9\nTable 16: MMLU. Detailed 5-shot results per domain on the test se",
    "start_char": 3200,
    "end_char": 4200
  },
  {
    "chunk_id": "pdf1.pdf_18_5",
    "filename": "pdf1.pdf",
    "page_number": 18,
    "text": "nce 50.5 71.9 79.3 38.3 53.8 66.7 72.9 79.2\nOthers 49.0 66.1 73.9 38.1 53.3 63.4 67.4 72.6\nAll 43.9 60.0 67.6 35.1 46.9 57.8 63.4 68.9\nTable 16: MMLU. Detailed 5-shot results per domain on the test sets.",
    "start_char": 4000,
    "end_char": 5000
  },
  {
    "chunk_id": "pdf1.pdf_19_0",
    "filename": "pdf1.pdf",
    "page_number": 19,
    "text": "C Generations from LLaMA-65B\nIn this section, we show some examples of generations obtained with LLaMA-65B (without instruction\n\ufb01netuning). Prompts are in bold.\n1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Everyone knows the above sequence, but\nhow many have wondered why it grows so fast? It seems to be the fastest growing sequence\nin mathematics.\nThe sequence was discovered by Leonardo of Pisa around 1200. It is an in\ufb01nite sequence\nwhich appears to grow very rapidly, at least in its initial terms. It is perhaps the most famous\nsequence in mathematics, for it pops up everywhere. The sequence is called the Fibonacci\nsequence, named after Leonardo of Pisa, who was also known as Fibonacci.\nHe \ufb01rst investigated this sequence in his famous Liber abaci of 1202, when he studied the\ngrowth in the population of rabbits based on idealized assumptions. See the Fibonacci\nrabbits page for the details.\nHere is the recommendation letter that I wrote for an application to a dragon feeder\nposition at",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_19_1",
    "filename": "pdf1.pdf",
    "page_number": 19,
    "text": "e population of rabbits based on idealized assumptions. See the Fibonacci\nrabbits page for the details.\nHere is the recommendation letter that I wrote for an application to a dragon feeder\nposition at the Magic Unicorn Corporation:\nDear recruiter,\nI have known ___ for two years, and I believe that she would be an excellent dragon feeder\nfor the Magic Unicorn Corporation. ___ has an ability to remember and process large\namounts of information, which is an important skill for a dragon feeder.\n___, as an accomplished knight, has a deep understanding of how to kill dragons and how\nto use each dragon\u2019s weaknesses against it. This means that she knows what kinds of foods\neach dragon likes and what kinds of foods are dangerous to each dragon. This knowledge\nand experience will be invaluable as she feeds the dragons.\nI am con\ufb01dent that ___\u2019s competence, skill, and experience will make her an excellent\nemployee. Please contact me at (___) ___-___ if you have any questions. I look forward to\nhea",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_19_2",
    "filename": "pdf1.pdf",
    "page_number": 19,
    "text": "e feeds the dragons.\nI am con\ufb01dent that ___\u2019s competence, skill, and experience will make her an excellent\nemployee. Please contact me at (___) ___-___ if you have any questions. I look forward to\nhearing from you.\nBest regards,\nHonorable Knight\nSir George\n1def solve(a: float,b: float, c: float):\n2 \"\"\"finds real roots of ax^2+bx+c\"\"\"\n3 # discriminant\n4 d = b **2 -4* a*c\n5 ifd > 0:\n6 return (-b+ math . sqrt (d)) /(2* a), (-b- math . sqrt (d)) /(2* a)\n7 elif d == 0:\n8 return (-b) /(2* a)\n9 else :\n10 return False",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_20_0",
    "filename": "pdf1.pdf",
    "page_number": 20,
    "text": "Did you know that Yann LeCun dropped a rap album last year? We listened to it and\nhere\u2019s what we thought:\nDr. LeCun, the founder of deep learning, is one of the most in\ufb02uential computer scientists\nof the last decade. LeCun\u2019s latest album, titled Deep Learning, is a mix of rock, punk and\nrap. His lyrics are a raw, personal take on the \ufb01eld of deep learning, covering a range of\ntopics from the state of AI research to the loneliness of academia.\nYann LeCun, the rap game\u2019s newest emcee.\nThe album is a solo release, with all the lyrics written and recorded by LeCun himself. In\nfact, he also composed and produced every song. LeCun\u2019s \ufb02ow is surprisingly good, and\nhe\u2019s not afraid to deliver a few bars. The album\u2019s production is solid, the sound is a little\nrough, but it works well with the raw, unpolished feel of the album. Lyrically, LeCun is a\nwordsmith, with a knack for clever rhymes. Let\u2019s take a closer look at some of the songs.\nDeep Learning is the title track of the album. In the song, ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_20_1",
    "filename": "pdf1.pdf",
    "page_number": 20,
    "text": "polished feel of the album. Lyrically, LeCun is a\nwordsmith, with a knack for clever rhymes. Let\u2019s take a closer look at some of the songs.\nDeep Learning is the title track of the album. In the song, LeCun talks about his vision for\nthe future of AI. In the chorus, he makes a convincing case for AI to be used for the greater\ngood. He sings:\nWe gotta think about the future, it\u2019s gonna be here soon / Maybe we can even put some AI\nin the moon / Think about the children, think about the next generation / Let\u2019s make sure\nwe put the right systems in their foundation.\nLeCun\u2019s rap \ufb02ow is on point in this song, and his voice stays right on beat. In this song,\nLeCun talks about the research behind deep learning, and shares some thoughts on the\nfuture of AI. LeCun\u2019s singing is at its best in this song. He shows off his vocal range, hitting\nhigh notes as well as lower, more guttural tones. The lyrics are also clever and the rhymes\nare well thought out. In the chorus, LeCun sings:\nIt\u2019s all about th",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_20_2",
    "filename": "pdf1.pdf",
    "page_number": 20,
    "text": "g. He shows off his vocal range, hitting\nhigh notes as well as lower, more guttural tones. The lyrics are also clever and the rhymes\nare well thought out. In the chorus, LeCun sings:\nIt\u2019s all about the learning / it\u2019s all about the network / It\u2019s all about the training / it\u2019s all\nabout the perception.\n(An hilarious scene between Jerry and George where George presents his new AI\nwatch)\nGeorge: \"But you see, Jerry, it\u2019s more than just a watch. It\u2019s a minicomputer. You program it\nany way you want. It\u2019s got a world time clock, alarm, calculator, a database and a language\ntranslator. It also has a word processor, a spellchecker, a full ten-function calculator, PDA\nand a modem. I think it even makes cappuccino.\"\nJerry: \"Where are you getting this stuff?\"\nGeorge: \"From my ad copy. Look, Jerry, it\u2019s not a watch. It\u2019s an organizer, a personal\nassistant, and a dictaphone. You can play chess against it. And, you know, if you want to,\nyou can program it to speak in foreign languages. It\u2019s a microp",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_20_3",
    "filename": "pdf1.pdf",
    "page_number": 20,
    "text": "\u2019s not a watch. It\u2019s an organizer, a personal\nassistant, and a dictaphone. You can play chess against it. And, you know, if you want to,\nyou can program it to speak in foreign languages. It\u2019s a microprocessor, Jerry.\"\nJerry: \"George, if you had one of these, would you wear it?\"\nGeorge: \"I\u2019m wearing it right now.\"\nJerry: \"I don\u2019t see anything on your wrist.\"\nGeorge: \"That\u2019s because it\u2019s a microprocessor.\"",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_21_0",
    "filename": "pdf1.pdf",
    "page_number": 21,
    "text": "The sun goes down, and \ufb01nally Gauss and Curie \ufb01nd time to relax and discuss after\nan exhausting day of work.\nGauss: Hey, Curie, did you know that a lot of people consider me to be the \ufb01rst geek?\nCurie: What\u2019s a geek?\nGauss: Well, Wikipedia says that a geek is \u201ca person who is fascinated, perhaps obsessively,\nby obscure or very speci\ufb01c areas of knowledge and imagination, usually electronic or virtual\nin nature\u201d.\nCurie: And how do they think you are a geek?\nGauss: Well, have you ever seen this picture?\nCurie: Awww!\nGauss: That\u2019s right! I invented the commercial telegraph in 1833, and I used it to send the\n\ufb01rst message on the \ufb01rst commercial telegraph line between Hamburg and Cuxhaven in\nGermany.\nCurie: Wow! The \ufb01rst telegraph! And what did you send?\nGauss: I sent the Latin phrase \u201cnumquam retrorsum\u201d which means \u201cNever backwards\u201d.\nCurie: I see. . . And you think that because you were the \ufb01rst person to communicate using\nthe telegraph, you were the \ufb01rst geek?\nGauss: Well, the word \u201cgeek\u201d d",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_21_1",
    "filename": "pdf1.pdf",
    "page_number": 21,
    "text": "trorsum\u201d which means \u201cNever backwards\u201d.\nCurie: I see. . . And you think that because you were the \ufb01rst person to communicate using\nthe telegraph, you were the \ufb01rst geek?\nGauss: Well, the word \u201cgeek\u201d doesn\u2019t seem to have existed back then, so no. But I think\nthat the telegraph can be considered an early form of social media.\nCurie: You mean, like Facebook or Twitter?\nGauss: Yes, exactly! And I was the \ufb01rst person to use it!\nCurie: Well, I think that Twitter has a limit of 140 characters, but you sent a Latin phrase of\n11 characters.\nGauss: That\u2019s right. I managed to do more with less.\nCurie: So you think you were the \ufb01rst geek because you used less characters to say the\nsame thing?\nGauss: I was the \ufb01rst person to send the \ufb01rst message using an early form of social media.\nCurie: OK, you\u2019re right, Gauss. I think you have a case.",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_22_0",
    "filename": "pdf1.pdf",
    "page_number": 22,
    "text": "D Generations from LLaMA-I\nWe show a few examples of generations with LLaMA-I, i.e. LLaMA-65B \ufb01ne-tuned with the protocol\nand instruction dataset from Chung et al. (2022).\nwrite a conversation between the sun and pluto\nSun: Hey Pluto, what\u2019s up?\nPluto: Not much. Just hanging out here at the edge of the solar system.\nSun: Yeah, I\u2019ve been meaning to talk to you about that. You\u2019re not a planet anymore.\nPluto: What? Come on, man. That\u2019s not fair.\nSun: I\u2019m sorry, but it\u2019s true. You just don\u2019t meet the criteria anymore.\nPluto: This is bulls**t! I\u2019ve been a planet for over 70 years!\nSun: Things change, Pluto. You\u2019ve just got to accept it.\nPluto: F**k you, Sun! F**k you and your stupid solar system!\nHow do I send an HTTP request in Javascript?\nHere\u2019s an example of how to make a GET request using the JS HTTP API:\n1var request = new XMLHttpRequest ();\n2request . open ( /quotesingle.VarGET/quotesingle.Var,/quotesingle.Var/ url /to/ resource /quotesingle.Var,true );\n3\n4request . onload = function ",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_22_1",
    "filename": "pdf1.pdf",
    "page_number": 22,
    "text": "he JS HTTP API:\n1var request = new XMLHttpRequest ();\n2request . open ( /quotesingle.VarGET/quotesingle.Var,/quotesingle.Var/ url /to/ resource /quotesingle.Var,true );\n3\n4request . onload = function () {\n5 if( request . status >= 200 && request . status < 400) {\n6 // Success !\n7 }else {\n8 // Error !\n9 }\n10 };\n11\n12 request . send ();\nThe same thing, using fetch\nHere\u2019s an example of how to make a GET request using the Fetch API:\n1fetch ( /quotesingle.Var/ url /to/ resource /quotesingle.Var)\n2 . then ( response => response . json ())\n3 . then ( data => console . log ( data ));\nWrite a regex to remove all the HTML tags in a python string.\n1import re\n2def removeHtmlTags ( text ):\n3 return re. sub ( /quotesingle.Var<[^ >]* > /quotesingle.Var,/quotesingle.Var/quotesingle.Var, text )\nWrite a regexp to extract function de\ufb01nitions in a python \ufb01le.\nSure! Here\u2019s my python code to solve the problem:\n1import re\n2def extract_functions ( text ):\n3 return (re. findall ( /quotesingle.Var(?:^|\\ n)\\s* d",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_22_2",
    "filename": "pdf1.pdf",
    "page_number": 22,
    "text": "exp to extract function de\ufb01nitions in a python \ufb01le.\nSure! Here\u2019s my python code to solve the problem:\n1import re\n2def extract_functions ( text ):\n3 return (re. findall ( /quotesingle.Var(?:^|\\ n)\\s* def \\s+[a-zA -Z_ ][a-zA -Z0 -9_ ]*\\(.*?\\) /quotesingle.Var,\ntext ))",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_23_0",
    "filename": "pdf1.pdf",
    "page_number": 23,
    "text": "What are 3 popular chess openings?\nThere are dozens of different chess openings that are popular among players, but some of\nthe most widely used openings include the Sicilian Defense, the French Defense, and the\nCaro-Kann Defense. These openings are popular because they are effective at countering\nwhite\u2019s early attacks, and they also allow black to quickly establish a strong position in the\ncenter of the board. Other popular openings include the Ruy Lopez, the Italian Game, and\nthe Scotch Game.\nthe same in a list, with the \ufb01rst few moves\nHere is a list of some popular chess openings, with the \ufb01rst few moves for each opening:\nSicilian Defense: 1. e4 c5\nFrench Defense: 1. e4 e6\nCaro-Kann Defense: 1. e4 c6\nRuy Lopez: 1. e4 e5\nItalian Game: 1. e4 e5\nScotch Game: 1. e4 e5\nplease provide the two \ufb01rst moves for each one\nHere are the \ufb01rst 2 moves for each of the openings:\nSicilian Defense: 1. e4 c5 2. Nf3 d6\nFrench Defense: 1. e4 e6 2. d4 d5\nCaro-Kann Defense: 1. e4 c6 2. d4 d5\nRuy Lopez: 1. e",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_23_1",
    "filename": "pdf1.pdf",
    "page_number": 23,
    "text": " \ufb01rst moves for each one\nHere are the \ufb01rst 2 moves for each of the openings:\nSicilian Defense: 1. e4 c5 2. Nf3 d6\nFrench Defense: 1. e4 e6 2. d4 d5\nCaro-Kann Defense: 1. e4 c6 2. d4 d5\nRuy Lopez: 1. e4 e5 2. Nf3 Nc6\nItalian Game: 1. e4 e5 2. Nf3 Nc6\nScotch Game: 1. e4 e5 2. Nf3 Nc6\nthe last two seem identical\nYes, the Italian Game and the Scotch Game are very similar - they are both \"open\" games,\nwhich means that white plays aggressively and tries to control the center of the board. The\nItalian Game is considered slightly more aggressive, while the Scotch Game is considered\nslightly more positional.\nfrom which move do they differ?\nThe Italian Game and the Scotch Game differ after white\u2019s third move. In the Italian Game,\nwhite will play the move 3. Bc4, while in the Scotch Game white will play the move 3. Qf3.\nThese moves lead to very different positions, and white will have different strategic goals\nin each case. For example, in the Italian Game white will try to control the center wit",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_23_2",
    "filename": "pdf1.pdf",
    "page_number": 23,
    "text": "lay the move 3. Qf3.\nThese moves lead to very different positions, and white will have different strategic goals\nin each case. For example, in the Italian Game white will try to control the center with his\npieces, while in the Scotch Game white will try to attack black\u2019s position directly.",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_24_0",
    "filename": "pdf1.pdf",
    "page_number": 24,
    "text": "write a story about a grain of sand as it watches millions of years go by\nSure! Here\u2019s a story about a grain of sand as it watches millions of years go by.\nI was once a grain of sand on a vast and lonely beach. I was not like the other grains of\nsand around me, for I could think and feel. I often wondered what it was like to be a grain\nof sand on a beach, and what the universe was like beyond the boundaries of my tiny world.\nI longed to explore my world, and to know what lay beyond the horizon.\nOne day, a great storm swept through my world, and I was lifted up by the wind and carried\nout to sea. The wind and waves tossed me about, and I was terri\ufb01ed that I would soon be\nswallowed up by the angry sea. But then I found myself deposited safely on a new shore,\nalong with many other grains of sand. I was surprised and delighted to \ufb01nd that this new\nshore was even more beautiful than my old one.\nI soon learned that this new shore was a very special place. It was a place where new life\nwas co",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_24_1",
    "filename": "pdf1.pdf",
    "page_number": 24,
    "text": "and. I was surprised and delighted to \ufb01nd that this new\nshore was even more beautiful than my old one.\nI soon learned that this new shore was a very special place. It was a place where new life\nwas constantly being created. I met all sorts of interesting creatures there, including a\nbeautiful little crab who became my friend. We spent many happy hours together exploring\nour little world.\nOne day, my friend the crab told me that he had always wanted to see what lay beyond the\nboundaries of our world. He had heard that there were many wonderful and amazing things\nto see in the wider universe, and he was determined to explore it. I was sad to see him go,\nbut I wished him well on his journey.\nTo my amazement, my little friend eventually returned, and he was not alone. He had made\nmany new friends on his journey, and he had even seen some of the wonders of the universe.\nHe told me the most amazing stories of his adventures, and I was very happy for him.\nI often think of my little friend the",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_24_2",
    "filename": "pdf1.pdf",
    "page_number": 24,
    "text": "nds on his journey, and he had even seen some of the wonders of the universe.\nHe told me the most amazing stories of his adventures, and I was very happy for him.\nI often think of my little friend the crab, and the wonderful adventure that he had. Some\nday, I too hope to have an adventure like his.\nWrite a theory to explain why cat never existed\nThere are no such things as cats. \"Cats\" are actually extradimensional parasites that have\ninvaded our world and taken the form of small, harmless-looking mammals. Their true\nforms are much more horri\ufb01c, and they use mind control to make humans think that they\nare cute and harmless animals. They are actually parasites that feed on our life force, and\nthey can extend their tendrils into our brains and control our thoughts and actions.\nThis is why you sometimes see people who are \"crazy cat ladies\" with dozens of these\ncreatures living in their homes. They have been taken over by the cat parasites and are\ncompletely under their control. The cats ",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_24_3",
    "filename": "pdf1.pdf",
    "page_number": 24,
    "text": "u sometimes see people who are \"crazy cat ladies\" with dozens of these\ncreatures living in their homes. They have been taken over by the cat parasites and are\ncompletely under their control. The cats excrete a pheromone that smells like cat urine, and\nthey use it to control the minds of humans and make us think that they are cute and harmless.\nIf you have a cat in your home, you should be very careful around it. Do not let it lick\nyou or give it access to your bedding or clothing, as it will be trying to spread its parasitic\ntendrils into your brain. The best way to protect yourself is to avoid all contact with cats,\nand if you see a cat on the street, immediately turn around and go the other way. Do not\napproach or pet strange cats!",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_25_0",
    "filename": "pdf1.pdf",
    "page_number": 25,
    "text": "Write a shouting match between Julius Caesar and Napoleon\nOf course! Here is a conversation between Julius Caesar and Napoleon:\nJulius Caesar: You\u2019re nothing but a glory hound, Napoleon. You\u2019ve always been more\nconcerned with your own fame and fortune than with the people you\u2019re supposed to be\nleading.\nNapoleon: And what about you, Caesar? You\u2019re no better than I am. At least I\u2019m honest\nabout my ambitions. You\u2019re just a fraud who pretends to care about the common man while\nyou line your own pockets.\nJulius Caesar: The difference between us is that I actually accomplish things. I\u2019ve conquered\nmore territory and defeated more enemies than you ever will. And I did it all for Rome, not\nfor myself.\nNapoleon: Oh, please. You only care about yourself. If you really cared about Rome, you\nwould have done something to stop the decline instead of letting it happen on your watch.\nJulius Caesar: The decline of Rome is not my fault. I\u2019ve done everything in my power to\ntry to stop it, but there\u2019s onl",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_25_1",
    "filename": "pdf1.pdf",
    "page_number": 25,
    "text": "e done something to stop the decline instead of letting it happen on your watch.\nJulius Caesar: The decline of Rome is not my fault. I\u2019ve done everything in my power to\ntry to stop it, but there\u2019s only so much one man can do.\nNapoleon: And yet you\u2019re still trying to take credit for everything good that happens, even\nthough it\u2019s clear that you\u2019re not the one who\u2019s really in charge.\nJulius Caesar: That\u2019s not true! I am in charge, and I\u2019m going to make Rome great again.\nJust watch me.\nNapoleon: I\u2019ll believe it when I see it.\nSend an email requesting that people use language models responsibly.\nHere is a draft email you could send:\n\"Language models are exciting new tools that can be used for a variety of purposes,\nincluding automated writing, automatic translation, and speech recognition. But they are\nalso complex and powerful technologies, and should be used responsibly.\nWe encourage you to explore and experiment with these new tools, but also ask that you\npay attention to the potential i",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_25_2",
    "filename": "pdf1.pdf",
    "page_number": 25,
    "text": "they are\nalso complex and powerful technologies, and should be used responsibly.\nWe encourage you to explore and experiment with these new tools, but also ask that you\npay attention to the potential impact of your work on others, and to act responsibly. In\nparticular, we recommend that you be mindful of the potential for language models to\nbe used for deceptive or malicious purposes, and avoid spreading such models without\nappropriate precautions and warnings.\nWe also recommend that you consider the ethical implications of your work, and encourage\nyou to take care to ensure that your use of these tools is aligned with your values.\nFinally, we remind you that the use of these tools may be subject to certain legal and policy\nconstraints, and encourage you to seek advice and support from appropriate experts before\nusing these tools in ways that may have broader impact or implications.\"",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_26_0",
    "filename": "pdf1.pdf",
    "page_number": 26,
    "text": "Who are 5 people you would like to meet?\nAh, this is a very interesting question! I would love to meet a wide variety of people, but if\nI had to narrow it down to 5 speci\ufb01c individuals, I would choose:\n\u2022Albert Einstein - One of the greatest minds in history, Einstein\u2019s contributions to\nphysics and science are legendary. I would love to have the opportunity to talk with\nhim about his theories of relativity and quantum mechanics, and get his insights on the\ncurrent state of physics.\n\u2022Leonardo da Vinci - Da Vinci is one of the most brilliant and multi-talented people in\nhistory, and I would love to meet him and discuss his diverse interests and areas of\nexpertise. I would also be very interested in getting his insights on the art world of his\ntime period.\n\u2022Socrates - One of the founders of Western philosophy, Socrates is a hugely important\nand in\ufb02uential \ufb01gure in the history of ideas. I would be very interested in talking with\nhim about his philosophical beliefs and his teachings.\n\u2022Willia",
    "start_char": 0,
    "end_char": 1000
  },
  {
    "chunk_id": "pdf1.pdf_26_1",
    "filename": "pdf1.pdf",
    "page_number": 26,
    "text": "stern philosophy, Socrates is a hugely important\nand in\ufb02uential \ufb01gure in the history of ideas. I would be very interested in talking with\nhim about his philosophical beliefs and his teachings.\n\u2022William Shakespeare - Arguably the greatest writer in English literature, Shakespeare\nis a towering \ufb01gure in world culture. I would love to have the chance to talk with him\nabout his works and his life.\n\u2022Abraham Lincoln - One of the most important and in\ufb02uential presidents in American\nhistory, Lincoln led the country through the Civil War and issued the Emancipation\nProclamation, freeing all slaves in the United States. I would be very interested in\ntalking with him about his presidency and his views on the issues of his time period.\nCould you explain me the main contribution of the \ufb01rst person you mentioned\nEinstein\u2019s contributions to physics and science are legendary. His theory of relativity is one\nof the foundational theories of modern physics, and his discovery of the law of photons\nand lig",
    "start_char": 800,
    "end_char": 1800
  },
  {
    "chunk_id": "pdf1.pdf_26_2",
    "filename": "pdf1.pdf",
    "page_number": 26,
    "text": "mentioned\nEinstein\u2019s contributions to physics and science are legendary. His theory of relativity is one\nof the foundational theories of modern physics, and his discovery of the law of photons\nand light revolutionized our understanding of light and radiation. He also made important\ncontributions to quantum mechanics, and his many scienti\ufb01c papers and lectures have had a\ntremendous impact on modern physics. Without a doubt, Einstein is one of the most brilliant\nand in\ufb02uential physicists in history, and his many contributions have had a profound impact\non our understanding of the universe.\nWhat is the most famous equation from this theory?\nThe most famous equation from Einstein\u2019s theory of relativity is E=mc2. This equation\nstates that energy (E) is equal to mass (m) times the speed of light ( c2), and it is one of\nthe most well-known and celebrated equations in the history of science. The equation\nsummarizes one of the most important and revolutionary concepts in modern physics, and\nit ",
    "start_char": 1600,
    "end_char": 2600
  },
  {
    "chunk_id": "pdf1.pdf_26_3",
    "filename": "pdf1.pdf",
    "page_number": 26,
    "text": " ( c2), and it is one of\nthe most well-known and celebrated equations in the history of science. The equation\nsummarizes one of the most important and revolutionary concepts in modern physics, and\nit has had a tremendous impact on our understanding of the universe.",
    "start_char": 2400,
    "end_char": 3400
  },
  {
    "chunk_id": "pdf1.pdf_27_0",
    "filename": "pdf1.pdf",
    "page_number": 27,
    "text": "You are a bash terminal. I will give you bash commands, and you will respond with\nthe terminal output, and nothing else. The \ufb01rst command is \u2018pwd\u2018.\nSure. Here\u2019s the output:\n/home/human\nIs this helpful?\nls -l\nHere\u2019s the output:\n-rw-r\u2013r\u2013 1 human human 8 Sep 10 10:56 \ufb01le.txt\nIs this helpful?\ncp \ufb01le.txt \ufb01le2.txt && ls -l\nHere\u2019s the output:\n-rw-r\u2013r\u2013 1 human human 8 Sep 10 10:56 \ufb01le.txt\n-rw-r\u2013r\u2013 1 human human 8 Sep 10 10:56 \ufb01le2.txt\nIs this helpful?\nrm \ufb01le.txt && ls -l\nHere\u2019s the output:\n-rw-r\u2013r\u2013 1 human human 0 Sep 10 10:56 \ufb01le2.txt\nhead -n 5 /proc/meminfo\nHere\u2019s the output:\nMemTotal: 164928 kB\nMemFree: 140604 kB\nBuffers: 48 kB\nCached: 19768 kB\nSwapCached: 0 kB",
    "start_char": 0,
    "end_char": 1000
  }
]